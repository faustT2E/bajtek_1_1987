WYBIERZ SAM
TRZECIA
FALA
Tym Czytelnikom „Bajtka" — a s¹dzê, i¿ z racji m³o dego wieku dotyczy to wiêkszoœci — którzy nie s³yszeli jeszcze o Alvinie Tofflerze, radzê dobrze zapamiêtaæ to nazwisko. Skoro interesuj¹ Was komputery to wczeœniej czy póŸniej i tak musielibyœcie siê spotkaæ z pracami tego amerykañskiego futurologa. Jest w³aœnie ku temu œwietna okazja, bowiem w ksiêgarniach pojawi³a siê jego g³oœna ju¿ na ca³ym œwiecie „Trzecia fala".
Charakterystyczny fragment:
„Jedna z najbardziej znamiennych metafor naszych czasów — pisze Toffler — wi¹¿e siê z postaci¹ agenta wywiadu. Nikt inny nie pobudza dziœ bardziej wyobraŸni ludzkiej. Telewizja i kieszonkowe edycje ksi¹¿ek mno¿¹ w nieskoñczonoœæ sylwetkê szpiega jako bohatera nieustraszonego, romantycznego... Historia oswojona jest ze szpiegostwem od dawna, tote¿ warto siê zastanowiæ, dlaczego w³aœnie w tej chwili motyw szpiega ow³adn¹³ wyobraŸni¹ ludzi, usuwaj¹c w cieñ nawet prywatnych detektywów, policjantów i kowbojów. Kiedy siê nad tym zastanowimy, od razu dostrze¿emy jedn¹ istotn¹ ró¿nicê miêdzy szpiegiem a innymi bohaterami naszej kultury; otó¿ filmowi policjanci i kowboje u¿ywaj¹ zwyk³ych rewolwerów lub go³ych piêœci, filmowi i powieœciowi szpiedzy dysponuj¹ natomiast najnowoczeœniejsz¹, najbardziej wyszukan¹ technologi¹ — elektronicznym pods³uchem, bankami komputerów, kamerami i promieniami podczerwieni...
Istnieje jednak i inny, g³êbszy powód rosn¹cej popularnoœci szpiega. Kowboje, policjanci, detektywi, awanturnicy i podró¿nicy, a wiêc tradycyjni bohaterowie ksi¹¿ek i filmów, goni¹ zazwyczaj za rzeczami namacalnymi — pragn¹ ziemi pod pastwiska, chc¹ pieniêdzy, chc¹ schwytaæ oszusta lub zdobyæ dziewczynê. Ale nie szpieg. Szpiega interesuje informacja".
W³aœnie informacja stanowi o istocie rozpoczynaj¹cej siê w³aœnie w ró¿nych punktach œwiata trzeciej fali zmian cywilizacyjnych, zmian wywo³anych upowszechnieniem siê komputera.
Gatunek ludzki prze¿y³ dotychczas dwie wielkie fale przemian, z których ka¿da œciera³a niemal doszczêtnie wczeœniejsze kultury i cywilizacje, wprowadzaj¹c swoje obyczaje niepojête dla tych co urodzili siê wczeœniej. Pierwszej fali przemian, czyli rewolucji agrarnej, potrzeba by³o tysiêcy lat do ca³kowitego wyczerpania. Druga fala — tworzenie siê cywilizacji przemys³owej, trwa³a ju¿ tylko trzysta lat. Wspó³czesne dzieje maj¹ jeszcze wiêksze przyspieszenie, wydaje siê wiêc, ¿e trzecia fala wtargnie do historii i dokona swego dzie³a w ci¹gu kilkudziesiêciu lat. Przeto nam, ¿yj¹cym w tak dramatycznym momencie — uwa¿a Toffler — przyjdzie odczuæ to potê¿ne uderzenie trzeciej fali zapewne jeszcze za naszego ¿ycia.
Tylko — zapytajmy za autorem przedmowy, Wiktorem Osiatyñskim — czy „Trzecia fala" nie jest dla nas, tu w Polsce, ksi¹¿k¹ z innej planety. Co mog¹ mieæ wspólnego rozwa¿ania na temat mikroelektronicznego spo³eczeñstwa trzeciej fali z problemami kraju, który boleœnie walczy o to, by w ogóle utrzymaæ siê na powierzchni drugiej fali?
I powtórzmy odpowiedŸ, ¿e choæ ksi¹¿ka Tofflera nie mo¿e nam zaoferowaæ konkretnych metod przezwyciê¿enia kryzysu, ale mo¿e nam pomóc w szukaniu odpowiedzi na jeszcze wa¿niejsze pytania: Po co przezwyciê¿aæ kryzys? Dok¹d zmierzaæ?
Doda³bym do tego, ¿e podpowiada równie¿ dok¹d absolutnie zmierzaæ nie nale¿y, jako ¿e nie ze wszystkimi tezami autora mo¿na siê zgodziæ. Ale to w³aœnie jeszcze jeden argument za tym, ¿eby koniecznie przeczytaæ „Trzeci¹ falê"!
Waldemar Siwiñski
SZANOWNY
PANIE REDAKTORZE!
Z przyjemnoœci¹ informujê, ¿e czasopismo „Bajtek" zosta³o wprowadzone do katalogu subskrypcyjnego naszej pocztowej s³u¿by czasopiœmienniczej i oznaczone numerem 07338.
Wierzê, ¿e dziêki promocji Wasze go czasopisma, któr¹ w Czechos³owacji prowadziliœmy wspólnie z redaktorami: Radia Czechos³owackiego — Dr Baumanem, czasopisma „ Veda a technika mladeŸi" — in¿. Mittelbachem, czasopisma „Amaterske radio" — in¿. Myslikiem i innymi dziennikarzami, którzy interesowali siê materia³ami zamieszczanymi w Waszym czasopiœmie, sprawi¹ Wam przyjemnoœæ zamówienia subskrybcyjne w naszym kraju.
S¹dzê, ¿e jeœli nadal prezentowaæ bêdziecie materia³y dotycz¹ce techniki komputerowej tak, jak dot¹d, to znaczy w sposób lekki, ³atwy i przyjemny zaznajamiaæ zainteresowanych z te chnik¹ komputerow¹, sposobami jej u¿ycia i sprzêtem, wówczas „ Bajtek" bêdzie równie¿ zajmuj¹cy i dla naszych czechos³owackich entuzjastów komputerowych.
JUDr. Milan Zouplna Na Str¿i 1199 14000 PRAHA 4 Czechos³owacja
To œwietnie, ¿e powsta³ taki miesiêcznik jak „Bajtek"!!! Zdo³a³em dostaæ dwa numery. Najbardziej podoba³a mi siê w nich oprawa graficzna i du¿a iloœæ informacji. Mam „ZX Spectrum" i dlatego chcia³bym mieæ sta³y dostêp do programów drukowanych w „Bajtku". Czy mo¿ecie mi w tym pomóc?
Oleg Sobolew 236017 Kaliningrad Prospekt Pabiedy 15, kw.5 ZSRR
Mam 17 lat, mieszkam w Nowym Jorku i chodzê do szko³y „Oueens Vacational Higher School". Dwa tygodnie temu dosta³am „Bajtka" od znajomego, który przyjecha³ z Polski. Bardzo mi siê wasze pismo podoba!
Dorien Spycha³a 459.36,h Street Brooklyn N.Y. 11232 USA
Jeœli siê czasem krytykuje — to i nale¿y umieæ wyraziæ zas³u¿one uznanie, tym bardziej, ¿e moje propozycje i uwagi znalaz³y uznanie i doczeka³y siê tak szybkiej realizacji. Czujê siê naprawdê mile zaskoczony aktualn¹ postaci¹ „Bajtka". Myœlê, ¿e jest du¿o lepiej i serdecznie ¿yczê pomyœlnego rozwoju. Szczerze zachêcam do sta³ego eksperymentowania w tworzeniu nowych dzia³ów, jak równie¿ nas³uchiwania dalszych g³osów Czytelników.
Edward Mich (z córkami) ul. Dekerta 3 m 3 80-262 Gdañsk
GRA O JUTRO
Hobby dla inteligentnych   3
Struktura krzemu   4
TEST
Timex 2048  5
KLAN SPECTRUM
Fifth   8
Kardioidy   9
KLAN ATARI
Nessie   10
Nie bój siê przerwañ cz. I   11
Tabliczka graficzna   11
Teksty w trybie graficznym "8"   12
Neochrome   12
D.E.G.A.S   12
KLAN COMMODORE
Jak u³atwiæ sobie ¿ycie   13
Komputer stereo   13
£apacz liter   13
Amiga   14
Commodore+4  14
CO JEST GRANE
Sorcery   16
Bajtkowa Lista Przebojów  18
KLAN AMSTRAD-SCHNEIDER
PCW 8256   20
Co piszczy pod klawiatur¹  21
PRZED EKRANEM
Typowe zastosowania  22
Bajtek wita Pana Kleksa  23
JAK TO ROBI¥ INNI BOSS — rozmowa
z Jackiem Tramielem  25
GIE£DA  27
TYLKO DLA PRZEDSZKOLAKÓW
Bierki  30
NIE TYLKO KOMPUTERY
M-4 na orbicie  31
"BAJTEK" — MIESIÊCZNY DODATEK DO "SZTANDARU M£ODYCH"
ADRES: 00-687 Warszawa, ul. Wspólna 61. Telefon 21-12-05
Przewodnicz¹cy Rady Redakcyjnej: Jerzy Domañski-redaktor naczelny "Sztandaru M³odych".
ZESPÓ£ REDAKCYJNY: Waldemar Siwiñski (z-ca redaktora naczelnego "SM" — kierownik zespo³u „Bajtka"), Roman Poznañski (z-ca sekretarza redakcji "SM" — sekretarz zespo³u "Bajtka"), Krzysztof Czernek, S³awomir Gajda (red. techniczny), Andrzej Gogolewski, Andrzej Kowalewski, Andrzej Podulka, S³awomir Polak, Wanda Roszkowska (opr. graficzne), Kazimierz Treger, Marcin Waligórski, Roman Wojciechowski.
Klany redaguj¹:
Commodore — Klaudiusz Dybowski, Micha³ Silski Amstrad-Schneider — Tomasz Pyæ, Sergiusz Wolicki Spectrum — Konrad Fedyna, Micha³ Szuniewicz Atari — Wies³aw Migut, Wojciech Zientara.
Fotosk³ad — Tadeusz Olczak,
monta¿ offsetowy — Gra¿yna Ostaszewska,
korekta— Maria Krajewska, Ewa Mowiñska
WYDAWCA: RSW „Prasa-Ksi¹¿ka-Ruch" M³odzie¿owa Agencja Wydawnicza, al. Stanów Zjednoczonych 53, 04-028 Warszawa. Telefony: Centrala 13-20-40 do 49, Redakcja Reklamy 13-20-40 do 49 w. 403, 414. Cena 100 z³.
Sk³ad technik¹ CRT-200, przygotowalni¹ offsetowa i druk: PRASOWE ZAK£ADY GRAFICZNE RSW PRASA-KSI¥¯KA-RUCH" w Ciechanowie, ul. Sienkiewicza 51.
Zam. nr 1432/86, nak³ad 250000 egz., P101
Bajtek
GRA O JUTRO
— Gdy na prze³omie 1979 i 1980 roku powstawa³ ZX Spectrum, ty uruchamia³eœ pierwsze p³ytki zrobionego przez siebie mikrokomputera. Zaledwie kilka lat up³ynê³o, a dla wielu czytelników „ Bajtka" te czasy to niemal historia.
— Sam patrzê na te czasy ze sporym dystansem, ale jak¿e by³y dla mnie ciekawe! Opracowa³em projekt mikrokomputera opartego na procesorze 8080, dysponuj¹cego 24 KB pamiêci. Sam opracowa³em system operacyjny, makroasembler, interpreter Basica. Co wiêcej — równie¿ sam pisa³em programy, gdy¿ wówczas praktycznie nie by³o dostêpu do ¿adnego oprogramowania. Potem dorobi³em twardy dysk — uda³o mi siê uzyskaæ dos³ownie ze z³omu star¹ jednostkê pamiêci, jeszcze tak¹ z hydraulicznym przesuwem g³owicy... i niesamowit¹ pojemnoœci¹ — 4 MB! Dziœ ca³e to urz¹dzenie — potê¿na skrzynia z du¿ym zasilaczem, w którym poza mikroprocesorem i uk³adami pamiêci wiêkszoœæ by³a zrealizowana w uk³adach scalonych TTL i to w liczbie... czterystu, stoi w piwnicy.
Po prostu gdy skoñczy³em ca³¹ tê ¿mudn¹ konstruktorsk¹ robotê okaza³o siê, ¿e ten mój wymarzony komputer jest ma³o u¿yteczny. Pojawi³y siê pierwsze mikrokomputery standardowe, do których by³o oprogramowanie, na których mo¿na by³o pracowaæ efektywnie. Niestety, moja konstrukcja, choæ o oryginalnej koncepcji, praktycznie z niczym nie by³a zgodna.
— A wiêc ca³a robota posz³a na marne...
— Nic podobnego, od podszewki pozna³em hardware.
— Czujesz siê bardziej hardware'owcem czy sof-tware'owcem?
— Na pewno software'owcem, chocia¿ ukoñczy³em wydzia³ elektryczny Politechniki Œl¹skiej. Wprawdzie wówczas o komputerach mówi³o siê niewiele, ale moja praca wi¹za³a siê z komputerowym pomiarem parametrów silników elektrycznych. I przyznam siê, ¿e wówczas nie myœla³em, ¿e w przysz³oœci prawie wy³¹cznie profesjonalnie bêdê zajmowa³ siê komputerami. Podobnie jak dziœ nie myœl¹ o tym inni, dla których komputery s¹ abstrakcyjnymi urz¹dzeniami, a za lat kilka stan¹ siê codziennoœci¹. Obecnie prowadzê zajêcia z informatyki w Œl¹skiej Akademii Medycznej.
— Co najbardziej interesowa³o ciê w dziedzinie oprogramowania?
— Najbardziej pasjonowa³a mnie komputerowa analiza obrazu, co wi¹za³o siê z moj¹ prac¹ naukow¹ na uczelni. Chocia¿ tak naprawdê to interesowa³o mnie prawie wszystko. Pamiêtam, gdy ju¿ zdisasemblowa³em ROM ZX Spectrum, wpad³a mi w rêce ksi¹¿ka na ten temat! Ca³a moja robota posz³a znowu na marne. Có¿, takie momenty kilka razy pojawiaj¹ siê w moim ¿yciorysie. Ale wcale nie uwa¿am tego czasu za stracony. Oczywiœcie nikomu nie poleca³bym odkrywania na nowo Ameryki, jednak wówczas, gdy jest mo¿liwoœæ lub koniecznoœæ samodzielnego rozgryzienia wielu problemów — mo¿na zdobyæ wiêcej wiedzy i nauczyæ siê samodzielnego myœlenia. Tego nie daje lektura, choæby najpilniejsza, wy³¹cznie listingów.
— Na jakim sprzêcie pracowa³eœ?
— Po Spectrum bawi³em siê na Commodore C-64, na który napisa³em wiele materia³ów, z³o¿y³em w wydawnictwie kilka ksi¹¿ek, ale... musz¹ one swoje odle¿eæ. Obecnie pracujê na IBM PC, który s³u¿y mi do redagowania tekstów. Piszê tak¿e programy systemowe, handlery do ró¿nych nietypowych urz¹dzeñ, zajmujê siê opracowywaniem danych naukowych, adaptujê programy zagraniczne.
By³em tylko wspó³organizatorem jednego z pierwszych w Polsce obozów mikrokomputerowych. Uczestniczy³em te¿ w organizacji klubów "Informik".
— Jakie s¹ trudnoœci w organizowaniu klubów komputerowych? ,
— Myœlê, ¿e nie warto szczegó³owo rozwodziæ siê nad trudnoœciami natury organizacyjnej, jak zdobycie sprzêtu, lokalu, etatów dla instruktorów. Te sprawy s¹ powszechnie wiadome. Uwa¿am, ¿e równie istotn¹ barier¹ jest stworzenie autentycznego œrodowiska. Uwa¿am, ¿e jest to kwestia czasu, ludzi trzeba wychowaæ. Ca³y szkopu³ w tym, ¿e w wielu wypadkach kluby na pocz¹tku dzia³alnoœci nie próbuj¹ stworzyæ odpowiedniej atmosfery pracy, zwi¹zanej z edukacj¹ informatyczn¹, atmosfery, która wymusza³aby na cz³owieku odpowiednie zachowanie, styl myœlenia, patrzenia na otoczenie. Kluby na pocz¹tku d¹¿¹ do reklamy, zabiegaj¹ o frekwencjê. W tym momencie rodzi siê pewien konflikt interesów. Ludzie, którzy s¹ najbardziej wartoœciowi, maj¹ twórcze nastawienie do pracy z komputerem s¹ jakby aspo³eczni. Oni nie lubi¹ t³oku, szumu, oni po
trzebuj¹ atmosfery spokoju a nie akcyjnoœci, zrywów. To ich odstrasza.
— Powiedzia³eœ, ¿e ludzi trzeba wychowaæ. Co przez to rozumiesz?
— Mikrokomputer to jest hobby dla inteligentnych ludzi na pewnym poziomie intelektualnym. Jest to premia dla tych, którzy w odpowiednim czasie zamiast bezproduktywnie godzinami wys³uchiwaæ muzyki rockowej — pracowali nad sob¹. Ale kulturê intelektualn¹ mo¿na uprawiaæ w pewnej kulturze ogólnej, w odpowiednich warunkach. W klubach trzeba przestrzegaæ w³aœciwych norm zachowania, poprawnoœci, kultury intelektualnej. Celem klubu nie powinna byæ tylko nauka programowania, ale tak¿e poszerzanie horyzontów, zainteresowañ. Komputer jest œrodkiem do zdobywania wiedzy, a nie celem edukacji.
— Styl pracy klubów w najwiêkszym stopniu zale¿y od kadry. To ona narzuca atmosferê, stawia uczestnikom zajêæ okreœlone zadania i cele. Czy myœlisz, ¿e tworzy siê swoista subkultura komputerowego œwiatka?
— Jeszcze nie, ale wystêpuj¹ pewne zjawiska uboczne. Na przyk³ad ktoœ zajmuje siê kolekcjonowaniem programów, gier; ktoœ inny szpanuje na komputery — chce znaæ siê na ich budowie, umie wyliczyæ zalety i wady najró¿niejszych typów. Jednak nie s¹dzê, ¿eby grozi³a nam subkultura — grozi nam natomiast coœ innego: ¿e znowu wychowamy ludzi jednostronnych, z klapkami na oczach. Klub komputerowy powinien byæ kuŸni¹ dobrze rozumianej inteligencji, a wiêc ludzi, którzy maj¹ nie tylko wykszta³cenie udokumentowane odpowiednim œwiadectwem. Klub powinien kszta³ciæ aktywnych ludzi o odpowiednim sposobie myœlenia, zachowania siê wobec problemów techniki, wspó³czesnego œwiata. Niestety, dziœ zbyt czêsto ca³a dzia³alnoœæ klubu ogranicza siê do zdobywania sprzêtu: kilku drutów i interfeace'ów oraz gie³dy oprogramowania.
— Trudno jednak oczekiwaæ, ¿e w obecnej sytuacji bêdzie inaczej. Komputer — nawet najprostszy i w innych krajach najtañszy — u nas jest towarem luksusowym.
— To w pewnym sensie trochê usprawiedliwia dzia³aczy klubów. Trzeba tak¿e pamiêtaæ, ¿e jest to dopiero pocz¹tek drogi. Sprzêt, który wystêpuje w klubach — np. Spectrum — nie nadaje siê do praktycznych zadañ, do edukacji. Mo¿na wykorzystywaæ go do wstêpnego zaznajamiania siê z technikami komputerowymi, do zabawy i do gier. I jeœli osoby kieruj¹ce klubem potrafi¹ tê zabawê skierowaæ na twórcze tory — poszukiwania co raz wiêkszych mo¿liwoœci sprzêtu — to bêdzie ju¿ dobrze. Cz³onkowie klubu ³atwiej póŸniej opanuj¹ tajniki innych komputerów. Po³kn¹ bakcyla.
Myœlê, ¿e na pocz¹tek najwa¿niejsze jest wyrabianie twórczego stosunku do komputera, stawianie na snobizm — ale dobrze pojêty. Lansowanie postawy: ja wiem, ja potrafiê, a nie: ja mam. Ta wspania³a okazja czêsto jest zaprzepaszczana.
— W jaki sprzêt powinien byæ wyposa¿ony wzorcowy klub?
— Sprawa sprzêtu jest drugorzêdna i powinna wynikaæ z warunków lokalowych. Wa¿niejsze jest, jak ten 
HOBBY
DLA MYŒL¥CYCH
sprzêt jest wykorzystywany. Jedyne, czego najbardziej bym siê obawia³, to monokultura sprzêtowa. Mo¿liwoœæ obcowania z ró¿nego rodzaju urz¹dzeniami jest bardzo cenna. U¿ytkownik przekonuje siê, ¿e komputer osobisty to coœ takiego jak ZX Spectrum i jak... IBM PC.
— Czy brak modemowej sieci komputerowej nie ogranicza najbardziej dzia³alnoœci klubów? Zbyt czêsto dzia³aj¹ one w oderwaniu?
— Siêgamy juz do tak odleg³ych technicznie spraw, ¿e zaczynam siê w ogóle zastanawiaæ, czy kluby — w obecnej formule — to w³aœnie to, o co warto walczyæ. To oczywiste, ¿e sieæ modemowa mo¿e u³atwiæ klubom wymianê informacji, szybki kontakt. Ale nie za³atwi sprawy najwa¿niejszej: klub powinien u³atwiæ ¿ycie mi³oœnikom komputerów, wyrabiaæ odpowiednie postawy intelektualne, emocjonalne wobec problemów techniki — a przy okazji tych ludzi integrowaæ. Rola klubu, polegaj¹ca na udostêpnianiu sprzêtu i prostych programów w ogóle jest nieporozumieniem. Sprzêt u¿ytkownik powinien mieæ w domu lub szkole, a do klubu przychodziæ po to, aby siê doskonaliæ, spotkaæ z informatykami profesjonalistami na ciekawym wyk³adzie. W klubie powinien mieæ dostêp do zagranicznej literatury, dokumentacji technicznej itp.
— Ale przecie¿ kluby maj¹ spore k³opoty z kadr¹ instruktorsk¹! A ty proponujesz, aby odwiedzali je informatycy profesjonaliœci.
— Kluby maj¹ trudnoœci z kadr¹, dlatego, ¿e zrazi³y do siebie ludzi, którzy inaczej wyobra¿ali sobie dzia³alnoœæ. Ludzi z du¿¹ wiedz¹ informatyczn¹ trzeba dopiero zjednywaæ, gdy¿ s¹ oni w du¿ej mierze autonomiczni. Ktoœ, kto ma w domu lub w pracy porz¹dny komputer i du¿¹ wiedzê informatyczn¹ do klubu nie przychodzi bo... nie ma po co.
— Jednak ci ludzie s¹ szalenie potrzebni do dzia³alnoœci klubów.
— W zasadzie potrzebna jest g³ównie ich obecnoœæ. Taki autorytet w³aœciwie nie musi nic szczególnego robiæ, wystarczy, ¿e od czasu do czasu siê pojawi, porozmawia, nauczy czegoœ nowego, opowie o najnowszych œwiatowych tendencjach w informatyce. Niestety, nasze œrodowisko informatyków jest szalenie snobistyczne i trudno namówiæ tuzów naszej informatyki, aby kalali sobie rêce napisaniem tekstu np. popularyzatorskiego. To œrodowisko nie zrozumia³o, ¿e informatyk to trochê jak lekarz, jego zawód ma sens wówczas, gdy s¹ ludzie potrzebuj¹cy jego wiedzy, gdy zachodzi coœ w rodzaju spo³ecznego zapotrzebowania. Je¿eli informatyk nie potrafi nawi¹zaæ rozmowy ze zwyk³ym u¿ytkownikiem komputera lub cz³owiekiem, który dopiero stawia pierwsze kroki to nazwie to sp³ycaniem, prymitywizowaniem wiedzy — to nie jest dobrym informatykiem. A ilu informatyków w ogóle nie chce zauwa¿aæ ruchu klubów komputerowych, gdy¿ — jak szamani czuj¹ siê zagro¿eni, ¿e utrac¹ pozycjê, tajn¹ wiedze tylko im przypisan¹.
Rozmawiali: S³awomir Polak Roman Wojciechowski
Rozmowa z Rolandem Wac³awkiem
— wyk³adowc¹
informatyki
w Œl¹skiej Akademii
Medycznej.
BAJTEK 1/87
GRA O JUTRO
STRUKTURA
KRZEMU
Podczas spotkañ z Czytelnikami czêsto padaj¹ pytania: Jakie sa mo¿liwoœci miniaturyzacji sprzêtu komputerowego? Jakie sa granice integracji uk³adów scalonych? Aby udzieliæ na nie odpowiedzi poprosiliœmy doc. doktora hab in¿yniera Andrzeja Jakubowskiego, o udostêpnienie nam fragmentów wyk³adu inauguracyjnego na ten temat, wyg³oszonego przez niego podczas uroczystego otwarcia roku akademickiego 1986/87 na Wydziale Elektroniki Politechniki Warszawskiej.
W elektronice, podobnie jak w œwiecie Disneya, wszystko co ma³e jest piêkne.Mówiæ zatem na tym wyk³adzie bêdziemy o mikroelektronice, a œciœlej o uk³adach scalonych. Tendencjach ich rozwoju i niektórych tego rozwoju skutkach.
Z trudem chyba przysztoby szukaæ w historii i dniu dzisiejszym rozwoju techniki przyk³adów dziedzin w których intensywnoœæ prac badawczych, dynamika i rozmach produkcji przemys³owej by³yby porównywalne z rozwojem produkcji uk³adów scalonych. Nie bêd¹c tutaj zmuszonym do œcis³oœci mo¿na przytoczyæ dla poparcia tego stwierdzenia nastêpuj¹ce porównanie .....Gdyby technika samochodowa rozwija³a siê tak szybko jak mikroelektronika, to przeciêtny samochód dnia dzisiejszego powinien wa¿yæ mniej ni¿ 1 gram, mieœciæ kilkuset pasa¿erów, osi¹gaæ szybkoœæ wiêksz¹ od 10.000 km/godz. przy zu¿yciu 0.1 l. benzyny i kosztowaæ kilkaset z³otych". Rozwój technologii pó³przewodnikowej pokazuje, ¿e wiele je| wskaŸników (np. liczba elementów czy bitów na strukturê, energia niezbêdna dla wykonania elementarnej operacji logicznej, koszt 1 bitu roœnie (b¹dŸ maleje) wyk³adniczo w funkcji czasu w sta³ym tempie pocz¹wszy od pojawienia siê na rynku pierwszych uk³adów scalonych. Najbardziej znanym tutaj przyk³adem jest tzw. prawo Moore'a. Gordon Moore, wspó³twórca czo³owych firm pó³przewodnikowych Fairchild i Intel zauwa¿y³, ¿e liczba elementów (tranzystorów, diod ...) w najwiêkszych dla danego roku uk³adach scalonych podwaja siê corocznie. Prawo to dobrze siê sprawdzi³o do po³owy lat 70-tych. W chwili obecnej liczba elementów w uk³adach roœnie nieco wolniei i podwaja siê co dwa lata.
Pos³u¿my siê tutaj przyk³adem pamiêci dynamicznych o swobodnym dostêpie (pamiêci DRAM) wytwarzanych zdecydowanie dominuj¹c¹ w uk³adach wielkiej i bardzo wielkiej skali intergracji — technologi¹ MOS POPR. (metal — tlenek — pó³przewodnik). Pamiêci te stanowi¹ aktualnie, obok mikroprocesorów, jedn¹ z bardziej spektakularnych wizytówek czo
³owych firm pó³przewodnikowych. Wzrost ich produkcji mia³ w ostatnim 15-leciu charakter niemal¿e eksplozji. Stanowi¹ one, z racji wzglêdnej prostoty rozwi¹zañ, tak¿e "poligon doœwiadczalny" dla wprowadzenia nowych rozwi¹zañ technologicznych i bardziej zaawansowanych regu³ projektowania.
W 1971 roku pojawi³a siê na rynku pamiêæ 1 Kb. Od tego momentu, systematycznie co trzy lata pojawiaj¹ siê pamiêci nowej generacji o 4-krotnie wiêkszej od poprzedniej pojemnoœci. Zapotrzebowanie rynku na coraz to wiêksz¹ pamiêæ o coraz to mniejszym koszcie jednostkowym — cenie 1 bitu — wydaje siê byæ nienasycone. I tak w roku 1986 kilka ju¿ firm japoñskich produkuje pamiêæ 1 Mb,a dominuj¹c¹ na rynku staje siê pamiêæ 256 Kb Przewiduje siê, ¿e w bie¿¹cym roku wyprodukowane zostanie 7 x 10^14 bitów pamiêci dynamicznych o swobodnym dostêpie, a prognoza na rok 2000 to: oko³o 10^20 bitów. Jeœli mo¿liwe bêdzie wówczas wytwarzanie struktur o pojemnoœci 64 Mb to bêdziemy mieli na œwiecie ponad 10^12 takich struktur a na g³owê ludnoœci naszej planety wypadnie ok. 100 takich struktur. Jeœli przyj¹æ, ¿e jedna strona ksi¹¿ki to oko³o 105 bitów to ka¿dy z nas stanie siê posiadaczem wielotomowej biblioteki. Mo¿na zatem porównywaæ krzem z papierem, wynalazek druku przez Gutenberga z wynalazkiem tranzystora, piasek z drzewem, wyspecjalizowane uk³ady robione na zamówienie z albumami reprodukcji zaœ uk³ady realizowane masowo z gazetami czy popularnymi ksi¹¿kami
Jakie s¹ to czynniki, które powodowa³y i powoduj¹, ¿e liczba elementów w uk³adach scalonych systematycznie wzrasta.
S¹ nimi:
A. Wzrost powierzchni struktur
1 Kb (1971) — 12 mm^2 I Mb (1986) — 70 mm^2 Œrednio powierzchnia nia struktur pamiêci roœnie w tempie ok. 1 4 razy na generacjê
B. Malenie rozmirów poszczególnych elementów   spowodowane  zmniej
szanem tzw. minimalnego wymiaru charakterystycznego. Jest to œrednia wartoœæ minimalnej szerokoœci linii i odstêpu miêdzy liniami uzyskiwana w danej technologii. Wymiar ten ulega oko³o dwukrotnemu zmniejszeniu co 6 lat. Oczywiœcie proces ten zachodzi stopniowo. W pamiêci 1 Mb ten wymiar wynosi ok. 1 /UM. St¹d te¿ pojêcia technologii 5 /UM, 3 /UM, 1 /UM. Zawdziêcza siê to postêpowi w dziedzinie litografii a wiêc odtwarzaniu coraz to subtelniejszych wzorów na powierzchni krzemu. W ostatnich latach trawienie chemiczne zosta³o zast¹pione technikami trawienia plazmowego a naœwietlanie struktur przenios³o siê w obszar g³êbokiego ultrafioletu.
Dalszy postêp bêdzie wymaga³ w latach 90-tych nowych technik litografii wykorzystuj¹cych wi¹zkê elektronów, promieniowanie X, a nawet wi¹zkê jonów.
C. Efektywnoœæ upakowania elementów to nowe pomys³y konstruktorów i technologów, nowe idee i nowe procesy.
Przyk³adem mo¿e tutaj byæ zast¹pienie 3 T komórki pamiêci dynamicznych typowej dla pamiêci 1 Kb i 4 Kb komórk¹ 1 T dominuj¹c¹ w nastêpnych generacjach pamiêci. Ten wspó³czynnik udoskonaleñ da³ w dekadzie lat 70-tych mno¿nik 2 we wzroœcie liczby elementów w strukturach. Podobnie zapowiada siê to w dekadzie lat 80-tych. Podyskutujemy teraz o granicach do których mo¿emy dojœæ z technologi¹ krzemow¹.
... Czy warto taki problem dyskutowaæ? Czy nie stanowi taka dyskusja li tylko intelektualnej rozrywki? Odpowiedzieæ trzeba, ¿e warto. Znajomoœæ bowiem — nawet nieprecyzyjna — ograniczeñ, stanowiæ mo¿e istotn¹ wskazówkê jak siê do nich najefektywniej zbli¿aæ. Dzia³aj¹ one, i te wynikaj¹ce ze znanych nam praw fizyki, i te ze znajomoœci zasad dzia³ania dyskutowanych przyrz¹dów, i wreszcie te, które wynikaj¹ z ograniczeñ materia³owo-konstrukcyjnych, z ró¿n¹ si³¹ w ró¿nych kierunkach.
Zmniejszenie siê tempa rozwoju i wchodzenie w fazê stabilizacji mo¿e wynikaæ z faktu, ¿e któryœ z nastêpuj¹cych czynników zacznie dzia³aæ ograniczaj¹co, a mianowicie (I) braki wiedzy, (II)
zmiana zainteresowañ (III) ograniczenia techniczne lub ekonomiczne. W przypadku przez nas analizowanym dwa pierwsze czynniki nie s¹ krytyczne. Mamy zatem, jeœli tempo wzrostu wyra¿one np. corocznym przyrostem liczby elementów w strukturze zaczyna maleæ, dzia³anie trzeciego czynnika. Co siê zatem na te ograniczenia techniczne sk³ada. S¹ one, w du¿ym skrócie i uproszczeniu, nastêpuj¹ce:
— ograniczenia (bariery) technologczne: niedoskona³oœæ materia³ów i procesów technologicznych, ograniczenie wynikaj¹ce ze stosowanej aparatury itp.;
— ograniczenia fizyczne wynikaj¹ce ze znanych praw fizyki b¹dŸ te¿ zasad dzia³ania aktualnie znanych przyrz¹dów. Staj¹ siê one coraz wa¿niejsze w miarê pokonywania barier technologicznych;
— ograniczenia wynikaj¹ce ze z³o¿onoœci uk³adów — problemy ich projektowania i testowania;
— ograniczenia wynikaj¹ce z trudnoœci zdefiniowania pola zastosowañ dla uk³adów logicznych o wielkiej liczbie elementów (nie dotyczy to pamiêci). (...)
Jeœliby przyj¹æ, ¿e pod koniec tego wieku mo¿liwa bêdzie realizacja struktur na powierzchni ok. 5-10 cm^2, to wizja produkcji pamiêci o pojemnoœci 16 Mb - 64 Mb nie wydaje siê byæ tak nierealistyczna. Z pewnoœci¹ uk³ady systemy o bardziej z³o¿onei organizacji i architekturze — bêd¹ tych elementów zawiera³y mniej, ale tutaj trzeba sobie odpowiedzieæ wczeœniej na pytanie o pole ich zastosowañ?
Jeœli ju¿ pomarzyliœmy o tym, co teoretycznie da siê zrobiæ to spróbujmy równie¿ odpowiedzieæ na pytanie jak to zrobiæ. Nie bêdê tutaj wylicza³ wszystkich barier które trzeba pokonaæ — wielu o podstawowym znaczeniu poznawczym. Sformu³ujê natomiast tezê, ¿e fabryka pó³przewodnikowa przysz³oœci to fabryka w pe³ni zautomatyzowana. Fabryka, która za pomoc¹ komputerów poprzedniej ge neracji tworzy bazê dla budowy komputerów nowej generacji. Wielu osobom automatyzacja kojarzy siê przede wszystkim z automatycznym (a wiêc bez, lub z ograniczonym udzia³em cz³owieka), przenoszeniem i manipulowaniem przedmiotami. Nale¿y jednak pamiêtaæ,¿e równie wa¿nym — jeœli nie wa¿niej
4   BAJTEK 1/87
szym — sk³adnikiem automatyzacji jest ograniczenie lub wyeliminowanie roli cz³owieka w procesach przep³ywu informacji.
Automatyzacja fabryk uk³adów scalonych znajduje siê jak to twierdz¹ Japoñczycy — przoduj¹cy zreszt¹ w tej dziedzinie — w wieku niemowlêcym bowiem jest to zadanie skrajnie trudne. System musi panowaæ nad stanem linii produkcyjnej, która przetwarza w ci¹gu roku ok. 5 tys. p³ytek na których wytwarza siê 20 ró¿nych typów wyrobów, z których ka¿dy podlega ok. 200 ró¿nym operacjom technologicznym wykonywanym za pomoc¹ 200 ró¿nych urz¹dzeñ, z których ka¿de wymaga nastawienia 10 ró¿nych parametrów itp.
Fabryka zautomatyzowana to wielopoziomowa hierarchiczna struktura komputerów i gniazd robotów. Fabryka zatrudnia — informatyków, projektantów wielkich systemów, automatyków, specjalistów od robotów, diagnostyków, projektantów uk³adów na zamówienie. Na najwy¿szym poziomie tej pozornie bezdusznej hierarchicznej struktury jednak po zostaje cz³owiek. Przyk³ad najdoskonalszej w tej chwili fabryki to zak³ady koncernu Mitsubishi. Jest to fabryka zautomatyzowana — w takim sensie, ¿e nie wystêpuje w niej ani transport ani manipulowanie p³ytkami. Fabryka ta produkuje obecnie miesiêcznie 10 mln szt. pamiêci DRAM 64 Kb, oraz 7 min sztuk pamiêci DRAM 256 Kb. Prawdopodobnie obecnie równie¿ pamiêci 1 Mb.
Skutki:
Na pocz¹tku 1985 r. w jednym z najpowa¿niejszych œwiatowych magazynów popularyzuj¹cych wiedzê z dziedziny mikroelektroniki ukaza³a siê praca dwóch wybitnych naukowców amerykañskich pt. "Regu³a PI w pamiêciach DRAM". Tytu³ by³ tajemniczy a wiêc pracê przeczyta³em.
Autorzy przeœledzili ceny kolejnych generacji pamiêci od pamiêci 1 Kb do pamiêci 64 Kb stwierdzaj¹c, ¿e po pocz¹tkowym okresie wysokiej ceny, nowego produktu, cena — w momencie dominacji danej pamiêci na rynku osi¹ga wartoœæ oko³o PI dolarów czyli ok. 3 dolarów (tu wyjaœnia siê tajemnicze PI) by nastêpnie ustabilizowaæ siê na poziomie ok. PI/2 czyli 1.5 dolara, gdy nastêpna generacja pamiêci zaczyna dominowaæ na rynku.
I tak to rzeczywiœcie by³o tylko Japoñczycy nie zechcieli tej regu³y uszanowaæ. Obecnie pamiêci 64 Kb mo¿na kupiæ za cenê poni¿ej 0.5 dolara Wynika to z faktu, ¿e uzysk a wiêc liczba dobrych struktur w firmach japoñskich jest znacznie wy¿szy. Szefowie wspomnianej fabryki koncernu Mitsubishi twierdzili, ze dziêki automatyzacji osi¹gaj¹ uzysk dwukrotnie wy¿szy ni¿ firmy amerykañskie.
Coraz wiêksza skala integracji uk³adów scalonych to koniecznoœæ wiêkszej integracji specjalistów ró¿nych dziedzin elektroniki, buduj¹cych wspóln¹ wiedz¹ i umiejêtnoœciami z³o¿one systemy na p³ytce krzemowej 
doc. dr hab in¿. Andrzej Jakubowski kierownik Zak³adu Mikroelektroniki Wydzia³u Elektroniki PW
mm
wBKm
Jednym z najbardziej rozpowszechnionych mikrokomputerów w
naszym kraju jest SINCLAIR ZX SPECTRUM. Pomimo, ¿e parametry techniczne ZX SPEC-
TRUM na koniec 1986 roku nie sa zbyt imponuj¹ce, to bogata literatura i dobre oprogra-
mowanie sprawiaj¹, ¿e jest on w dalszym ci¹gu doskona³ym narzêdziem dla pocz¹tkuj¹-
cych (i nie tylko) mi³oœników informatyki.
ZX SPECTRUM jest kontynuacj¹ idei mikrokomputera zapocz¹tkowanego modelami ZX 80 i ZX 81 przez firmê SINCLAIR. W wyniku zawartych porozumieñ miêdzy SINCLAIR'em i firm¹ TIMEX w kwietniu 1982 roku na rynku amerykañskim pojawi³ siê model TIMEX 1000, który by³ kopi¹ ZX 81 i model TIMEX 2000 wzorowany na ZX SPECTRUM. Udoskonalaj¹c swoje wyroby firma TIMEX wprowadzi³a w czerwcu 1983 roku model TIMEX 2068. By³ to mocno zmieniony i rozbudowany ZX SPECTRUM. Sprowadzany do Polski model TIMEX 2048 by³ pierwotnie okrojon¹ wersj¹ mikrokomputera TIMEX 2068, wyposa¿onym w pamiêæ RAM o pojemnoœci zaledwie 16 KB. Obecnie produkowana wersja portugalska TIMEX 2048 jest ju¿ prawie w pe³ni kompatybilna z mikrokomputerem ZX SPECTRUM 48K. Powodem drobnych ró¿nic w bezpoœrednim przenoszeniu oprogramowania jest fakt zastosowania innego uk³adu specjalizowanego ULA (Uncommited Logic Array) i innych sygna³ów wysy³anych na jej porty. Konsekwencj¹ tego s¹ niezbêdne zmiany wprowadzone w pamiêci ROM Oznacza to, ¿e programy czytaj¹ce klawiaturê bezpoœrednio z portów mog¹ wykazywaæ b³êdne dzia³anie. Wprowadzaj¹c zmiany w pamiêci ROM nie poprawiono jednak b³êdów pope³nionych w ROM-ie ZX SPECTRUM (np. NMI).
Bezpoœrednio po w³¹czeniu zasilania, mikrokomputer pracuje w trybie standardowym (z rozdzielczoœci¹ 256 na 192 punkty). Prze³¹czenie na inny tryb grafiki nastêpuje poprzez wys³anie odpowiedniej wartoœci do Portu 255:
a) OUT 255,1 — na ekranie wyœwietlana jest pamiêæ tzw. drugiego ekranu umieszczonego od adresu 24576 do 30719 z atrybutami od 30720 do 31487
b) OUT 255,2 - na ekranie nadal jest 256 * 192 punkty ale ka¿dy znak posiada 8 ró¿nych zestawów atrybutów — po jednym zestawie na ka¿dy wiersz punktowy.
c) OUT 255,6 — grafika o podwójnej rozdzielczoœci. Na ekranie mo¿na umieœciæ jednorazowo 192 linie po 512 puntków. Ograniczeniu ulegaj¹ mo¿liwoœci przydzielania atrybutów poszczególnym znakom. Znaki wyœwietlane w kolumnach parzystych pamiêtane s¹ w obszarze ekranu 1 zaœ wy


pe³nienie kolumn nieparzystych pochodzi z pamiêci ekranu 2
d) OUT 255,0 — przywraca grafikê standardow¹
Ró¿nice w stosunku do ZX SPECTRUM wykazuje ³¹czówka systemowa. Od strony elementów
- na styk 20 wyprowadzono zamiast -5V napiêcie + 12V,
- na styk 22, 23 nie s¹ wyprowadzone napiêcia + 12V
Strona dolna:
- na styki 16, 17, 18 nie s¹ wyprowadzone sygna³y Y, V, U
Dodatkowym elementem, którego nie posiada³ ZX SPECTRUM jest gniazdo manipulatora pracuj¹cego w standardzie "KEMPSTON JOYSTICK" umieszczone z lewej strony mikrokomputera i wy³¹cznik zasilania znajduj¹cy siê po jego prawej stronie. W³¹czenie zasilania sygnalizowane jest czerwon¹ diod¹ LED
Bardzo delikatna z gumowymi klawiszam klawiatura ZX SPECTRUM zosta³a zast¹piona bardziej wytrzyma³¹ klawiatur¹ stosowan¹ w elektronicznej maszynie do pisania BROTHER EP-20. Mimo pewne] poprawy w³aœciwoœci mechanicznych nie jest ona w pe³ni zadowalaj¹ca. Uk³ad klawiszy nie uleg³ zasadniczym zmianom do³o¿ono jedynie drugi klawisz CAPS SHIFT osobny klawisz BREAK i drugi klawisz SPACE. Brak jest natomiast klawisza EXTENDED MODE, który znacznie u³atwia pisanie programów. Na klawiszach F i J umieszczono dodatkowo wypuk³e znaczki przeznaczone dla osób, które nie patrz¹ na klawiaturê podczas pisania.
W modelu tym zastosowano równie¿ 
wiêkszy g³oœnik daj¹cy lepsze efekty dŸwiêkowe.
Gniazdo do wspó³pracy z telewizorem znajduje siê w tym samym miescu co w ZX SPECTRUM, a dodatkowo wyprowadzono na s¹siednie gniazdo sygna³ VIDEO, umo¿liwiaj¹cy korzystanie z monitora. Kolorowy sygna³ wizyjny kodowany jest w systemie PAL.
Oprócz bogatej biblioteki gier komputerowych istnieje pokaŸnych rozmiarów biblioteka programów tzw. u¿ytkowych.
Mikrokomputer TIMEX 2048 wyposa¿ony w gniazdo manipulatora i sygna³u VIDEO, wy³¹cznik zasilania i trwalsz¹ klawiaturê jest wygodniejszy w eksploatacji, bardziej niezawodny w dzia³aniu.
Bior¹c pod uwagê to, ¿e mikrokomputer TIMEX 2048 zachowuje prawie ca³kowit¹ zgodnoœæ programow¹ ze SPECTRUM, prezentuje wy¿szy standard wykonania, a tak¿e to, ¿e mo¿na go nabyæ za z³otówki po stosunkowo niskiej cenie, mo¿e w dalszym ci¹gu utrzymaæ popularnoœæ tego systemu w kraju.
Andrzej Ciepliñski Konrad Fedyna
GNIAZDA WEJŒCIA/WYJŒCIA
1 — zasilanie; 2 — z³¹cze krawêdziowe magistrali systemu; 3 — monitor; 4 wejœcie z magnetofonu; 5 — wyjœcie na magnetofon; 6 — odbiornik TV.

DANE TECHNICZNE
- pamiêæ ROM — 16KB,
- pamiêæ RAM — 48KB (dla programisty dostêpnych jest 41640 bajtów pamiêci),
- mikroprocesor Z80A pracuj¹cy z czêstotliwoœci¹ 3.5MHz,
BASIC jako podstawowy jêzyk komunikacji miêdzy u¿ytkownikiem a mikrokomputerem,
mo¿liwoœæ wspó³pracy z nastêpuj¹cymi urz¹dzeniami:
a) odbiornikiem TV,
b) monitorem,
c) magnetofonem, jako pamiêci¹ masow¹,
d) drukark¹  TIMEX  PRINTER 2040,
e) manipulatorem, - mo¿liwoœæ     generowania prostych dŸwiêków,
- cztery tryby grafiki.
BAJTEK1/87      5
WSTÊP DO PROGRAMOWANIA W JÊZYKU PASCAL cz. IV-
"ASCAL
Pascal jest jezykiem strukturalnym, zatem umo¿liwia programiœcie definiowanie i umieszczanie w programie w³asnych procedur lub funkcji. W ostatnim ju¿ odcinku naszego cyklu naszkicujemy pokrótce metody konstrukcji i pos³ugiwania sie procedurami i funkcjami w Pascalu
PROCEDURY
U¿ywaliœmy do tej pory pewnej liczby procedur i funkcji standardowych — bêd¹cych elementami jêzyka. Byty to np. procedury READ i WRITE bs³uguj¹ce wejœcie i wyjœcie programu, czy te¿ ró¿ne funkcje arytmetyczne. Oto przyk³ady ich wywo³añ w tekœcie programu:
read (Liczba);
Pierwiastek := sqrt (Liczba);
Sposób deklarowania w programie w³asnych procedur omówimy na prostym przyk³adzie. Przypuœæmy, ¿e w kilku miejscach pisanego przez nas programu po¿¹dane jest wstrzymanie akcji komputera na pewien krótki okres.
Efekt ten mo¿emy uzyskaæ np. przy u¿yciu pustej pêtli FOR.
for n := 1 to 10000 do; Je¿eli taki fragment mia³by pojawiaæ siê w programie wielokrotnie, wygodniej jest zapisaæ go w postaci procedury.
procedure Poczekaj;
begin
for n := 1 to 10000 do; end,
Powy¿szy ustêp programu stanowi w³aœnie deklaracjê procedury. Umieszczamy j¹ w programie pascalowym zgodnie z zasad¹ predefinicji, zatem przed czêœci¹ operacyjn¹, zaœ po czêœci deklaruj¹cej zmienne. Ca³y program mo¿emy zatem przedstawiæ w nastêpuj¹cy sposób:
1. Nag³ówek programu,
2. Definicje sta³ych,
3. Definicje typów danych,
4. Deklaracje zmiennych,
5. Deklaracje procedur i funkcji,
6. Czêœæ operacyjna programu.

Procedura czy funkcja w Pascalu ma strukturê podobn¹ do struktury programu. Wewn¹trz procedur mo¿emy równie¿ definiowaæ sta³e i typy danych oraz deklarowaæ zmienne czy inne procedury. Mówimy, ¿e obiekty te bêd¹ lokalne wzglêdem danej procedury. W naszym przypadku procedurê Poczekaj mo¿emy zapisaæ, deklaruj¹c lokaln¹ zmienn¹ ca³kowit¹ n.
procedurê Poczekaj;
var n : integer;
begin
for n : = 1 to 10000 do; end;
W tym wypadku nie mamy ju¿ obowi¹zku deklarowania zmiennej n w programie g³ównym — globalnie, o ile nie jest ona u¿ywana w innym miejscu programu.
Zmienne lokalne istniej¹ tylko podczas wykonywania procedury. Po jej zakoñczeniu pamiêæ komputera przeznaczona dla tych zmiennych jest zwalniana. Umo¿liwia to oszczêdniejsz¹ gospodarkê pamiêci¹ maszyny; je¿eli pewne zmienne o du¿ej objêtoœci (np. tablice) s¹ potrzebne tylko w pewnej czêœci programu, wygodniej jest zapisaæ t¹ czêœæ w formie procedury, zaœ wymienione zmienne zadeklarowaæ jako lokalne — nie bêd¹ wówczas niepotrzebnie zajmowaæ pamiêci przez ca³y czas wykonywania programu.
Zmienne globalne istniej¹ przez ca³y czas wykonania programu i mo¿emy u¿ywaæ ich zawsze, zarówno w programie g³ównym, jak te¿ wewn¹trz zadeklarowanych procedur. Zmiennych lokalnych, z wymienionych powy¿ej powodów, mo¿emy u¿ywaæ tylko wewn¹trz procedury, w której zosta³y zadeklarowane. Je¿eli dana zmienna lokalna ma tak¹ sam¹ nazwê, jak inna zmienna globalna (jest to dopuszczalne i nie powoduje ¿adnych niepo¿¹danych skutków), to w obrêbie danej procedury odwo³ania do niej bêd¹ zawsze interpretowane jako odwo³ania do zmiennej lokalnej.
Zapiszmy krótki program z u¿yciem procedury Poczekaj.
program Odliczanie: var    k : integer:
procedurê Poczekaj (JakDlugo : integer);
var    k : integer;
begin
 for k := 1 to JakDlugo do; end;
begin
for k := 10 downto 0 do begin
writeln (' --> '.\k); Poczekaj (32000) end:
writeln ('START ! ') end.
Wykonanie tego programu przekonuje nas, ¿e zmiany wartoœci zmiennej lokalnej n wewn¹trz procedury Poczekaj nie maj¹ wp³ywu na wartoœæ zmiennej n zadeklarowanej globalnie.
PARAMETRY PROCEDUR
U¿yta w tym przyk³adzie procedura Poczekaj nie jest uniwersalna — jej wywo³anie wstrzymuje wykonanie programu zawsze na ten sam przeci¹g czasu. Wygodnie by³oby d³ugoœæ tej pauzy kontrolowaæ. Mo¿emy uczyniæ to, uzupe³niaj¹c procedurê Poczekaj o parametr — liczbê ca³kowit¹, okreœlaj¹c¹ ¿¹dan¹ d³ugoœæ przerwy, procedurê Poczekaj (JakDlugo : integer);
var n : integer; begin
for n : = 1 to JakDlugo do; end;
Oto mo¿liwe wywo³ania takiej procedury: Poczekaj (15000); n:= 32000; Poczekaj (n);
Poni¿sze zaœ wywo³ania s¹ b³êdne ze wzglêdu na niezgodnoœæ typu podanego parametru z typem parametru zadeklarowanym w nag³ówku procedury:
Poczekaj ( '?');
Poczekaj (sqrt (3));
Oczywiœcie mo¿emy wyposa¿yæ procedurê w wiêksz¹ liczbê parametrów. Oto przyk³ady nag³ówków.
procedurê Poczekaj (DIJednostki, IleJednostek : integer);
procedurê Poczekaj (DIJedn :integer; IleJedn : real); Nale¿y pamiêtaæ, aby w deklaracji parametrów procedury wystêpowa³y zawsze nazwy typów, nie zaœ ich pe³ne definicje — dotyczy to za³o¿onych typów danych. B³êdne jest np. takie zapisanie nag³ówka procedury:
procedure Podlicz (Tablica : array [1.50] of real); prawid³owo napiszemy natomiast
procedurê Podlicz (Tablica : Tabela); uprzednio zdefiniowawszy w programie g³ównym typ
type Tabela = array [1 ..50] of real;

Przypuœæmy teraz, ¿e czêœæ deklaracyjna pewnego programu Zawiera nastêpuj¹cy fragment: const RozmTab = 48; type Ci¹g = array [1 ..RozmTab] of integer; var Tab1, Tab2, Tab3, Tab4 : Ciag; Liczba : integer;
Za³ó¿my jeszcze, ¿e przyjêty przez nas algorytm wymaga nadania wszystkim elementom zadeklarowanych tablic wartoœci pocz¹tkowej 1. Mo¿emy to uczyniæ przy pomocy procedury. Chcielibyœmy jednak, aby przy jej pomocy mo¿liwe by³o przetworzenie dowolnej z czterech wystêpuj¹cych w programie zmiennych typu Ciag. Dokonaæ tego mo¿na w sposób nastêpuj¹cy:
procedurê Zainicjuj (var JakasTablica : Ciag;
Wartoœæ : integer);
var k : integer; begin
for k := 1 to RozmTab do JakasTablica [k] := Wartoœæ;
end;
S³owo kluczowe VAR poprzedzaj¹ce deklaracjê parametru JakasTablica oznacza, ¿e w chwili wywo³ania procedury Zainicjuj w jego miejsce podstawiona zostanie pewna zmienna typu Ci¹g. Oto przyk³ady takich wywo³añ.
Zainicjuj (Tab1, 1);
Liczba := 0;
Zainicjuj (Tab4, Liczba); Przyk³adem wywo³ania b³êdnego jest natomiast
Zainicjuj (1000, 0); — miêdzy innymi dlatego, ¿e 1000 nie jest nazw¹ zmiennej typu Ci¹g.
Czêœæ operacyjna procedury mo¿e oczywiœcie zawieraæ odwo³ania do innych procedur, które zosta³y wszak¿e wczeœniej (powy¿ej) zadeklarowane. W szczególnoœci mo¿e ona wywo³ywaæ siebie sam¹ — istnieje zatem mo¿liwoœæ tworzenia procedur rekurencyjnych.
FUNKCJE
Funkcje deklarujemy w taki sam sposób, jak procedury, z tym, ¿e w nag³ówku funkcji dodatkowo okreœlamy typ jej wyniku, zaœ w czêœci operacyjnej przypisujemy otrzymany wynik jej nazwie. Oto przyk³ad.
function PiRazy (k : real) : real:
begin
PiRazy := 3.1415927 * k; end;
Oto zaœ mo¿liwe wywo³ania tej funkcji w programie:
x : = sin (PiRazy (2));
writeln (PiRazy (3 / 2)). Poza tym wszystkie wymienione powy¿ej zasady konstrukcji procedur dotycz¹ równie¿ deklarowania funkcji.
Na zakoñczenie tego krótkiego cyklu wypada jeszcze raz uprzedziæ czytelnika, ¿e nie opisaliœmy w nim (nawet skrótowo) wszystkich mo¿liwoœci, jakie daje programiœcie Pascal — jest to temat sw¹ obszernoœci¹ przekraczaj¹cy mo¿liwoœci "Bajtka". Pominiête zosta³y ca³kowicie np tak obszerne tematy, jak budowanie struktur listowych czy te¿ korzystanie z dyskowei pamiêci zewnêtrznej. Równie¿ szereg szczegó³ów pozostawiamy tu inwencji i dociekliwoœci czytelnika — np. formatowanie wydruku przy pomocy instrukcji WRITE, definiowanie rekordów z wariantami...
Zainteresowanych zachêcamy jednak do dalszego rozszerzania wiedzy o Pascalu i w³asnych prób w oparciu o podan¹ wczeœniej literaturê. S¹dzimy, ze warto!
Marek Wyrwid¹b
program GraWZycie;
const XPola    = 10; { Definicje: }
 YPola    = 10; { ...stalych }
type StanPola = (Zywe. Martwe):     { ...typow   } Plansza = array [1..XPola, 1..YPola] of StanPola: OdODo8   = 0..8;
var   Pole. NowePole : Plansza: { Pole gry }
Pokolenie : integer; { Numer pokolenia } Sasiedztwo : OdODoB : { ilosc sasiadow } Koniec : boolean; { Wsk. konca gry }
i, j : integer;
Znak : char    ;
procedure Instrukcja;   { Czolowka i opis program }
var   i : integer;
begin
for i := 1 to 24 do writeln:
writeln ('        G R A   W   Z Y C I E        ');
writeln;
writeln (' Zadanie zaczerpniete z ksiazki '); writeln ('D.van Tassela 'Praktyka programowania"); writeln'
writeln ('Na prostokatnym polu zyje kolonia'); writeln ('komorek. W kolejnym pokoleniu przezy-'); writeln (''waja komorki, ktore maja 2 lub 3'); writeln ('sasiadow. Nowa komorka powstaje na'); writeln ('pustym miejscu, ktore ma dokladnie 3'); writeln ('sasiadow. Pozostale komorki gina. '); writeln ('Program umozliwia obserwacje stanu ko-'); writeln ('lonii w kolejnych pokoleniach. ');
writeln (' Wcisnij ENTER ');
read (Znak); end:

procedure Zainicjuj (var Tablica : Plansza:
Stan    : StanPola); var   i, j : integer;
begin
for i := 1 to XPola do     ( Nadanie elementom ) for j := 1 to YPola do     { tablicy jednakowej } Tablica [i. j] := Stan   { wartosci Stan       }
end;

procedure Rysuj (Tablica : Plansza): var   i, j : integer;
begin writeln;
writeln ('        ',Pokolenie,'-E POKOLENIE'); writeln;
write ('         +'):
for i := 1 to XPola do write ('-');
writeln ('+'):
for j := 1 to YPola do begin
write ('         :'):
for i := 1 to XPola do
if Tablica [i. jl = Zywe then
write ('0')
else { Wydrukowanie        }
write (' '); { postaci graficznej }
writeln (''): { tablicy Tablica    }
end;
write ('         +'):
for i := 1 to XPola do write ('-'); writeln ('+'): writeln; end:

procedure Zasiedlenie (var Tablica : Plansza): var   Koniec : boolean;     { Wypelnienie }
i, j : integer;      { tablicy     }
begin { komorkami zywymi }
writeln (' Podaj kolejne pary wspolrzednych '); writeln (' komorek zywych tak, aby '); writeln (' 0 < X < ', XPola + 1     );
writeln (' 0 < Y < ', YPola + 1     );
writeln (' Podanie X = 0 konczy wpisywanie. '); Koniec := false; while not Koniec do begin
write ('         X= '); read (i);
if i <> 0 then begin write ('         Y= '); read (j); writeln; Tablica [i. j] := Zywe: end;
Koniec := (i = 0): end;
for i := 1 to 24 do writeln: end;
function IloscSasiadow (Tablica : Plansza: WspX, WspY : integer) : OdODo8; var   i. j : integer:
Ilosc : OdODo8 ;
begin { Obliczenie }
Ilosc := 0; { ilosci      )
for i := WspX - 1 to WspX + 1 do { sasiadow   } for j := WspY - 1 to WspY + 1 do { komorki     } if (i > 0) and (i <= XPola) then if (j > 0) and (j <= YPola) then if Tablica [i. j] = Zywe then Ilosc := succ (Ilosc); IloscSasiadow := Ilosc end; begin Instrukcja;
Koniec    := false: { Czesc glowna }
Pokolenie := 0; { programu:     }
Zainicjuj (Pole. Martwe): Rvsuj (Pole); { ...czynnosci }
Zasiedlenie (Pole): { wstepne       }
while not Koniec do begin
Pokolenie := Pokolenie + 1: Rysuj (Pole);
Zainicjuj (NowePole, Martwe): for i := 1 to XPola do for j := 1 to YPola do     { ...glowna       } begin { petla programu }
Sasiedztwo :=
IloscSasiadow (Pole, i, j); if Sasiedztwo = 3 then
NowePole [i. j] := Zywe; if (Sasiedztwo = 4) and
(Pole [i, j] = Zywe) then
NowePole [i. j] := Zywe;
end;
writeln (' ENTER - nastepne pokolenie.'); writeln (' K + ENTER         - koniec.');
read (Znak): writeln: Koniec := Znak in ['K'. 'k']; for i := 1 to XPola do for j := 1 to YPola do Pole [i. j] := NowePole [i. j]:
end;
end.
Ilustracj¹ do niniejszego odcinka jest program, stanowi¹cy realizacjê jednej z wersji znanej — "gry w ¿ycie" — uproszczonego modelu ¿ycia kolonii komórek. Mo¿e on stanowiæ przyk³ad u¿ycia procedur i funkcji w d³u¿szych programach pascalowych, warto zauwa¿yæ, ¿e s³u¿¹ one podzia³owi programu na odrêbne jednostki funkcjonalne, co u³atwia projektowanie i pisanie programu oraz czyni go bardziej czytelnym.
KLAN SPECTRUM
FIFTH jest programem, który dziêki swoim 25 komendom rozszerza znacznie mo¿liwoœci graficzne i dŸwiêkowe interpretera jêzyka BASIC w mikrokomputerze ZX SPECTRUM.
Powsta³ on w firmie COMPUTER RENTALS LTD. Nowe komendy dodaje siê do zwyk³ego programu w jêzyku BASIC wpisuj¹c je po s³owie kluczowym REM. Komendy te s¹ wykonywane w trybie INTERRUPT 2, co pozwala na niezale¿ne wykonywanie programu g³ównego. Treœæ linii po s³owie kluczowym REM jest ignorowana tylko wówczas, gdy jako pierwszy znak wyst¹pi tam gwiazdka (*).
£adowanie programu FIFTH: CLEAR 61029: LOAD "" CODE. FIFTH zajmuje w pamiêci obszar od adresu 61030 do 65368, pozostawiaj¹c nienaruszony obszar przeznaczony na grafikê u¿ytkownika.
Ka¿dy program wykorzystuj¹cy FIFTH musi zawieraæ linie, które powinny byæ wykonane przed rozpoczêciem dzia³ania komend programu FIFTH. S¹ to linie zawieraj¹ce nastêpuj¹ce instrukcje:
10 RANDOMIZE 1000
20 RANDOMIZE USR 61030
Liczba 1000 w linii 10 oznacza iloœæ bajtów pamiêci rezerwowana na dane obiektów (opis poni¿ej) i mo¿e siê zmieniaæ wed³ug potrzeb. Wykonanie linii 20 inicjalizuje program FIFTH. Komendy programu FIFTH musz¹ byæ wprowadzane litera po literze; dopuszczalne jest stosowanie ma³ych i wielkich liter. Po s³owie REM mo¿na umieœciæ wiêcej ni¿ jedn¹ komendê programu FIFTH, oddzielaj¹c je od siebie znakiem "backslash" tzn. '/'.
UWAGA: program posiada mo¿liwoœæ wy³¹czenia klawisza BREAK po wykonaniu komendy "POKE 65239,1" i ponownego jego w³¹czenia po komendzie "POKE 65239,0".
OPIS KOMEND PROGRAMU "FIFTH"
TEMPS
Ustawienie kolorów dla nastêpnych komend w taki sposób, ¿e kolory chwilowe bêd¹ takie same jak kolory sta³e. U¿ywana z komendami LARGE, FILL, REPLACE, PUT. FILL
Zamalowanie wybranego uprzednio obszaru, kolorem ustawionym wczeœniej przez komendê TEMPS lub "pust¹" instrukcjê PRINT. Dopuszczalne jest stosowanie wszelkich kolorów (³¹cznie z kolorem 8 i 9). Przyk³ad u¿ycia:
100 PRINT PAPER n; INK m
110 REM FILL REPLACE Zast¹pienie jednego koloru chwilowego innym, ustawionym w danym momencie na sta³e. Wymaga stosowania "pustej" instrukcji PRINT do ustawienia kolorów chwilowych, np.: 
100 PRINT INK 1: PAPER 7;
110 REM REPLACE
albo komendy TEMPS. Jeœli jako kolory sta³e u¿yte s¹ kolory 8 i 9 to komenda REPLACE dzia³a normalnie, jeœli zaœ u¿ywa siê ich jako chwilowych to s¹ one ignorowane. LARGE
Druk znaku (lub ³añcucha znaków) w miejscu i w powiêkszeniu zdefiniowanym uprzednio przez nadanie wartoœci nastêpuj¹cym zmiennym: x — wspó³rzêdna pozioma lewego górnego rogu obszaru, który ma byæ zajmowany przez znak (0-255);
y — wspó³rzêdna pionowa tego rogu (0-175);
t — powiêkszenie w pionie (1-22); w — powiêkszenie w poziomie (1-32);
a* — zmienna ³añcuchowa zawieraj¹ca drukowany znak. Pocz¹tek uk³adu wspó³rzêdnych (0,0) le¿y w lewym górnym rogu ekranu (inaczej ni¿ dla PLOT !!). Drukowany ³añcuch nie mo¿e zawieraæ znaków steruj¹cych, zaœ komenda LARGE powinna byæ poprzedzona „pust¹" instrukcj¹ PRINT lub komend¹ TEMPS w celu ustalenia koloru drukowania znaku.
SOUND a, b, c, d Generacja dŸwiêku o podanych parametrach, które maj¹ nastêpuj¹ce znaczenie:
a — iloœæ powtórzeñ dŸwiêku (1-255, zalecana 1-50);
b — czas trwania dŸwiêku (1-65535, zalecana 3-100);
c — wysokoœæ dŸwiêku pocz¹tkowego (0-2000 przy narastaniu wysokoœci nastêpnych dŸwiêków i 2000-5000 przy opadaniu);
d — wartoœæ dodawana do zmiennej c po ka¿dym powtórzeniu dŸwiêku (zalecana 1-500 przy dŸwiêkach o narastaj¹cej wysokoœci i 65000-65535 przy opadaj¹cej).
Paramatery powy¿sze musz¹ mieæ nadan¹ wartoœæ przed komend¹ SOUND, której dotycz¹. GET a, b, c, d, a* Przekszta³cenie czêœci ekranu o podanych wspó³rzêdnych w ³añcuch o danej nazwie. Parametry tej komendy maj¹ nastêpuj¹ce znaczenie: a, b — wspó³rzêdne lewego górnego rogu   wybranego   obszaru ekranu (jak dla pozycji PRINT); c, d — wspó³rzêdne prawego dolnego rogu obszaru (jak wy¿ej): a* — zmienna ³añcuchowa, w której bêdzie przechowywana zawartoœæ   wybranego   fragmentu ekranu. PUT x, y, a* Wystêpuje jako dope³nienie komendy GET, powoduj¹c przes³anie zawartoœci 
danego ³añcucha a* w podane miejsce na ekranie. Zmienna x oznacza numer linii (0-21), zaœ y — numer kolumny (0-31).
LET a = wyra¿enie 
Ma takie samo znaczenie jak komenda LET w jêzyku BASIC i pozwala na wykonywanie  obliczeñ,   korzystanie z funkcji programu FIFTH itp.
OBJECT nazwa, wyra¿enie Komenda s³u¿¹ca do definiowania ró¿nych obiektów, które mog¹ byæ drukowane na ekranie, mog¹ siê poruszaæ itp. Ka¿dy obiekt jest definiowany przez swoj¹ nazwê, która mo¿e te¿ dotyczyæ grupy obiektów (podobnie jak nazwa tablicy dotyczy wszystkich jej elementów). Iloœæ bajtów pamiêci zajmowanych przez grupê obiektów mo¿na obliczyæ jako:
iloœæ liter w nazwie + 10 * iloœæ obiektów Nazwa obiektu mo¿e mieæ dowoln¹ d³ugoœæ i nie powinna zawieraæ dwukropka, zaœ wartoœæ wyra¿enia musi byæ wczeœniej obliczona i mówi nam ile obiektów o danej nazwie bêdzie jednoczeœnie u¿ywane. Przyk³ad u¿ycia komendy OBJECT: 10 RANDOMIZE 1000 20 RANDOMIZE USR 61030 30 REM OBJECT missile, a Po zdefiniowaniu obiektu komputer przypisuje mu kilka atrybutów omówionych szczegó³owo dalej. S¹ to:
— wskaŸnik bie¿¹cy (wszystkie s¹ dostêpne):
— kolor (bie¿¹cy kolor sta³y);
— kierunek (0, czyli w górê);
— prêdkoœæ (1 skok o 1 piksel co 5 sekund);
— po³o¿enie (linia 176, kolumna 0);
— wskaŸnik skasowania (ustawiony). Zamiast nazwy obiektu mo¿na u¿ywaæ nazwy zmiennej ³añcuchowej, której przypisano wczeœniej wartoœæ równ¹ nazwie obiektu.
USE nazwa,numer obiektu Komenda okreœlaj¹ca czy obiekty o 
danej nazwie bêd¹ dostêpne pojedynczo czy w postaci ca³ej grupy. Jeœli numer obiektu jest równy zeru to dostêpne staj¹ siê wszystkie obiekty o danej nazwie.
ALL nazwa Udostêpnia wszystkie obiekty o danej nazwie (podobnie jak komenda USE z zerowym numerem obiektu).
PRINT nazwa,znak Opisuje jaki znak ma byæ drukowany i traktowany jako obiekt. Dopuszczalne s¹ wszystkie znaki o kodach powy¿ej 33 oprócz s³ów kluczowych jêzyka BASIC. Nie jest to s³owo kluczowe!
COLOUR nazwa obiektu Okreœla jakiego koloru ma byæ drukowany obiekt, wymagaj¹c zdefiniowania tego koloru za pomoc¹ "pustej" instrukcji PRINT jêzyka BASIC.
VECTOR nazwa obiektu, numer kierunku Opisuje w jakim kierunku ma siê poruszaæ obiekt. Do dyspozycji jest 16 kierunków, przy czym kierunek 0 oznacza ruch pionowo do góry, 1 — NNE, 2 — NE itd. zgodnie z ruchem wskazówek zegara.
SPEED nazwa obiektu, wyra¿enie programu FIFTH, wyra¿enie Zmienia prêdkoœæ ruchu obiektu po ekranie. Pierwsze wyra¿enie opisuje opóŸnienie (jednostk¹ jest 1/50 sekundy), po którym obiekt zacznie siê poruszaæ i musi mieæ wartoœæ w zakresie 1-255. Drugie wyra¿enie (równie¿ o wartoœci z przedzia³u 1-255) okreœla o ile pikseli przesunie siê obiekt podczas jednego ruchu.
MOVE nazwa obiektu, wspó³rzêdna x, wspó³rzêdna y
Przesuniêcie obiektu na podan¹ pozycjê. Pocz¹tek uk³adu wspó³rzêdnych znajduje siê w lewym górnym rogu ekranu, zaœ wartoœci wspó³rzêdnych zawieraj¹ siê w granicach od 0 do 255. Wartoœci powy¿ej 176 dla wspó³rzêdnej y oznaczaj¹ druk obiektu poza widzialnym obszarem ekranu. Komenda 
8   BAJTEK1/87
MOVE kasuje automatycznie poprzedni obraz obiektu. RMOVE nazwa obiektu, przesuniêcie poziome, przesuniêcie pionowe Wzglêdne przesuniêcie obiektu o podan¹ iloœæ jednostek modulo 255 dla sk³adowej poziomej i modulo 176 dla sk³adowej pionowej. Zapewnia to mo¿liwoœæ ruchu w lewo i w dó³, pomimo i¿ nie s¹ dopuszczalne liczby ujemne jako argumenty komend programu FIFTH.
FIND wspó³rzêdna x, wspó³rzêdna y Okreœlenie czy na podanej pozycji znajduje siê jakiœ obiekt. Nazwa znalezionego obiektu jest podstawiana jako wartoœæ zmiennej ³añcuchowej j*, zaœ iloœæ znalezionych obiektów do zmiennej liczbowej j. Jeœli na podanej pozycji nie znaleziony zosta³ ¿aden obiekt,to wartoœæ zmiennej j* jest ³añcuchem pustym zaœ j = 0.
DISABLE nazwa obiektu Zatrzymanie automatycznego ruchu obiektu do chwili jego wznowienia przez komendê ENABLE. Komendy takie jak MOVE lub RMOVE dzia³aj¹ nadal normalnie, gdy¿ nie pracuj¹ w trybie przerwañ.
ENABLE nazwa obiektu Komenda stanowi¹ca przeciwieñstwo komendy DISABLE.
LIMIT wyra¿enie programu FIFTH 
Komenda powoduj¹ca skok do wybranej linii programu w przypadku wyjœcia obiektu poza aktywny obszar ekranu (pewna analogia z komend¹ GO SUB). Jako numer linii brana jest wartoœæ wyra¿enia, przy czym musi siê ona zawieraæ w zakresie 0-65535. Jeœli wartoœæ wyra¿enia jest wiêksza od 9999 to program jest kontynuowany bez wykonania ¿adnego skoku. Po inicjalizacji programu FIFTH numer linii do której ma nast¹piæ skok ustawiony jest na 10000.
INTERACT wyra¿enie programu FIFTH Wartoœæ wyra¿enia, podobnie jak w komendzie LIMIT, okreœla numer linii, do której ma nast¹piæ skok w przypadku zetkniêcia siê ze sob¹ dwóch obiektów. Przed wykonaniem skoku do podanej linii rozpoczynaj¹cej podprogram obs³ugi „zderzenia" musz¹ zostaæ przes³ane pewne informacje na stos komend INTERACT, aby by³o mo¿liwe wznowienie dzia³ania programu g³ównego. Podobna sytuacja wystêpu je równie¿ podczas wykonywania komendy LIMIT — informacje wysy³ane s¹ wówczas na stos komend LIMIT. W pamiêci przewidziano miejsce dla 16 podprogramów obs³ugi ka¿dej z tych komend, jeœli bêdzie ich wiêcej, to zg³oszony zostanie b³¹d „4 Out of memory" Ka¿dy podprogram obs³ugi musi byæ zakoñczony komend¹ CONTINUE jêzyka BASIC. Komenda INTERACT ma pierwszeñstwo przed komend¹ LIMIT. LMTPARAM Komenda stosowana w podprogramie obs³ugi komendy LIMIT, przyporz¹dkowuj¹ca wartoœci nastêpuj¹cym zmiennym jêzyka BASIC: h* — nazwa obiektu, który wyszed³ poza ekran; h — numer tego obiektu, i — kod kierunku, w którym porusza³ siê obiekt (0 — góra, 1 — prawa strona, 2 — dó³, 3 — lewa strona); W podprogramie obs³ugi mo¿na u¿yæ zamiast CONTINUE instrukcji POKE 23681,0 INTPARAM Komenda analogiczna jak wy¿ej lecz dotycz¹ca komendy INTERACT i u¿ywana w podprogramie obs³ugi "zderzeñ". Nazwy "zderzaj¹cych" siê ze sob¹ obiektów s¹ podawane w zmien
nych h* oraz i* zaœ ich numery w zmiennych "h" oraz "i" odpowiednio. Jeœli jeden z obiektów nie zosta³ rozpoznany jako obiekt programu FIFTH to wartoœæ zmiennej i* bêdzie ³añcuchem pustym a zmienna "i" przyjmie wartoœæ 0. Po "zderzeniu" obiekty s¹ unieruchamiane (jak po DISABLE). ERASE nazwa obiektu Druk obiektu na nowym miejscu po wykonaniu tej komendy bêdzie przebiega³ z wymazaniem znaku istniej¹cego. Do znaków zajmuj¹cych siatkê 7x7 jednostek nie jest wymagane stosowanie komendy ERASE.
FUNKCJE WYSTÊPUJ¥CE W PROGRAMIE „FIFTH"
NO nazwa obiektu
Podaje iloœæ obiektów o danej nazwie
COLUMN nazwa obiektu Podaje wspó³rzêdn¹ x obiektu o danej nazwie, którego dotyczy³a ostatnio komenda USE lub ALL. Jeœli wskaŸnik bie¿¹cy jest ustawiony na ALL, to zg³oszony bêdzie b³¹d "A lnvalid argument"
LINE nazwa obiektu Jak funkcja COLUMN, lecz podaje wspó³rzêdn¹ y.
SCREEN nazwa obiektu
Podaje kod znaku u¿ywanego jako dany obiekt. Znak mo¿na uzyskaæ za pomoc¹ funkcji CHR*.
ATTR nazwa obiektu Podaje kod koloru u¿ytego do druku obiektu i ma takie samo znaczenie jak normalna funkcja ATTR jêzyka BASIC.
DIRECTION nazwa obiektu Podaje kod kierunku ruchu obiektu uaktywnionego przez ostatni¹ komendê USE lub ALL. B³êdy jak w COLUMN czy LINE.
CURRENT nazwa obiektu Podaje numer bie¿¹co u¿ywanego obiektu o danej nazwie. Jeœli u¿yto komendy ALL, to wartoœæ tej funkcji wynosi 0.
MASK nazwa obiektu Podaje "maskê" kolorów drukowanego obiektu o danej nazwie.
VELOCITY nazwa obiektu
Podaje opóŸnienie miêdzy kolejnymi ruchami obiektu.
JUMPS nazwa obiektu
Podajê iloœæ jednostek skoku wykonywanego jednorazowo przez obiekt. Jeœli do obiektu u¿yto ALL, to zg³oszony bêdzie b³¹d.
LIMIT nazwa obiektu Podaje numer linii rozpoczynaj¹cej podprogram obs³ugi komendy LIMIT. Jeœli wartoœæ ta jest wiêksza od 9999, to oznacza, ¿e nie jest wywo³ywany ¿aden podprogram obs³ugi.
INTERACT nazwa obiektu Podaje numer linii rozpoczynaj¹cej podprogram obs³ugi komendy INTERACT.
STATUS nazwa obiektu Podaje wartoœæ 0. jeœli obiekt by³ unieruchomiony (DISABLE) lub 1. jeœli by³ uaktywniony komend¹ ENABLE. Wystêpuje tu b³¹d "A lnvalid argument", jeœli do obiektu zastosowano komendê ALL.
FIFTH jest programem przeznaczonym g³ownie dla osób chc¹cych tworzyæ w³asne gry i zabawy komputerowe. Jego komendy zastêpuj¹ ca³e skomplikowane procedury napisane w jêzyku maszynowym, u³atwiaj¹ce tym samym programowanie. Szczegó³owe zapoznanie siê z komendami i funkcjami FIFTH a w po³¹czeniu z inwencj¹ programisty daje znakomite efekty
Konrad Fedyna Zygmunt Wereszczyñski
Program ten
kreœli
Program ten kreœli mi³y dla oka wzór, z³o¿ony z odbitych symetrycznie krzywych, zwanych kardioidami.
Krzywe te opisane s¹ równaniem parametrycznym: x = y*(1 -cos(k))*cos(k) y = r*(1 -cos(k))*sin(k) gdzie 0 <= k <= 2n
Geometrycznie krzywa ta mo¿e byæ interpretowana jako droga punktu okrêgu, tocz¹cego siê (zewnêtrznie) po okrêgu o tym samym promieniu.
Rysunek kreœli siê d³ugo, co spowodowane jest powolnym obliczaniem wartoœci funkcji trygonometrycznych przez Spectrum — a¿ czterech w ka¿dym kroku algorytmu.
Zmienna "Rozdzielczoœæ" okreœla dok³adnoœæ tworzonego rysunku. "Promieñ" jest proporcjonalny do jego wielkoœci, zaœ "Gêstoœæ" wyznacza iloœæ krzywych, sk³adaj¹cych siê na jedn¹ po³owê wzoru.
Wykreœlenie jednego rysunku nie jest jednak kresem mo¿liwoœci naszego programu (inaczej niewielki by³by z niego po¿ytek). Zmieniaj¹c równania parametryczne krzywych — np. znaki + na -, funkcje SIN i COS oraz parametry K i R — mo¿emy uzyskaæ ca³y szereg nowych, interesuj¹cych deseni.
M.W.
¥&r .   -\    \ \
\ ¦ v. - -       .....   . ,
KARDIO
BAJTEK 1/87      9
1 REM  +---------------------+
2 REM  +      KARDIOIDY      +
3 REM  +---------------------+
10 REM STALE PROGRAMU
15 LET Xsr   =  128
20 LET Ysr   = 87
25 LET DwaPi   = 2 * PI
30 REM PARAMETRY
35 LET Rozdzielczosc   = 4
40 LET Promien = 53
45 LET Gestosc = 5 50 REM WYKRESLENIE KRZYWYCH 55 FOR R =  1 TO Promien STEP Gestosc
60 LET Krok = PI / (Rozdzielczosc * R )
65 FOR K = 0 TO DwaPi STEP Krok _
70 REM PARAMETRYCZNE ROWNANIA KRZYWEJ
80 LET Y = R + (1 - COS(K))+ SIN(K)
85 PLOT  Xsr  + X, Ysr  - Y 90 PLOT -Xsr  + X, Ysr  + Y 95 NEXT K 100 NEXT R
10  REM "NESSIE"  J. wisniewski '86
20  DIM G$(5),WZ$(20):XK=19:YG=0
30  WZ$= " /\/\. .\/\ ":F=0:T=1
40  GRAPHICS 0:POKE 752,1:READ STT,RCH
50  POSITION XK,23:?  " "
60 POSITION XK,23:?  " "
70 POSITION XK,23:?  " ************";
80  LK=12:MG=0:KULA=F:GAD=F
90  REM  ====  POCZATEK PETLI  CZASU ====
100 REM------ kreowanie gada -------
110 IF GAD THEN  150 120 IF RND(A)<1-STT THEN 220 130 GAD=T:I=INT(RND(A)*2)*2 140 XG=17*I:ZG=2.5*I+1:KR=1-I
150 REM ------ ruch gada ------------
160 IF RND(A)<1-RCH THEN 220
170 PH=ABS(PH-10):G$=WZ$(PH+ZG)
180 POSITION XG,YG:PRINT G$;:XG=XG+KR
190 REM ------ znikanie gada --------
200 IF XG<34 AND XG>0  THEN 220
210 POSITION XG,YG:? "      ";:GAD=F
220 REM ------ kreowanie kuli -------
230 IF KULA THEN 280
240 I=PEEK(764):IF  1=255  THEN  90 250 POSITION XK+l+LK,23:PRINT " "; 260 KULA=T:YK=20:GOTO  300
270 REM ------ ruch kuli ------------
280 POKE 764,255
290 POSITION XK,YK:PRINT  " ";:YK=YK-1
300 POSITION XK,YK:PRINT "*"
310 SOUND l,12-YK/2,8,(YK-YG)/2
320 REM ------ znikanie  kuli --------
330 IF YK>YG THEN 90 340 KULA=F:LK=LK-1
350 IF XG>XK-4  AND XG<XK  THEN  370 360 POSITION XK,YK:?  " ";:GOTO 490
370 REM ------ trafienie------------
380 FOR I=70 TO 20 STEP -2 390 SOUND 0,I,10,15:NEXT I 400 FOR I=20 TO 100 STEP 2 410 SOUND 0,I,10,15:NEXT I
420 POSITION XG,YG:PRINT "____";
430 FOR I=15 TO 0 STEP -1
440 FOR J=0 TO 250 STEP 25
450 SOUND 0,J,14,I:NEXT J:NEXT  I
460 POSITION XG,YG:PRINT  "     ";
470 XG=0:GAD=F:MG=MG+1
480 POSITION XK-6,24-MG:? "/\/\.";
490 REM  ====  KONIEC  PETLI  CZASU  =====
500 IF  LK>0  THEN 90
510 FOR I=1 TO 18:J=INT(RND(A)*5)*10
520 SOUND 1^1,J+70,10,10
530 NEXT I:SOUND 1^1^1^1,0,0,0
540 POSITION 2,2:?   "RUNUPUP";
550 POKE 752,0:END
560 REM ------ dane -----------------
570 REM PRAWD. STARTU  PRAWD.RUCHU 580 DATA  0.05, 0.55,
Tê mini-grê napisa³em w sezonie ogórkowym pod presj¹ najbli¿szych wyraŸnie zbulwersowanych faktem, ¿e moje programy, choæ licz¹ nieraz po kilka tysiêcy linii, zupe³nie nie nadaj¹ siê do zabawy. Nie jestem co prawda entuzjasta gier polegaj¹cych na zabijaniu, niew¹tpliwie jednak sa one naj³atwiejsze do zaprogramowania.
Bohaterem gry jest wê¿owe cielsko z ma³¹ g³ow¹ — mieszkaniec s³ynnego szkockiego jeziora — zwinnie umykaj¹ce przed naszym celownikiem. Siedzimy w znacznej odleg³oœci od gada, wiêc strza³ z nieruchomej pukawki trzeba oddaæ z wyprzedzeniem, celuj¹c w miejsce, gdzie stwór dopiero bêdzie, gdy kula do niego doleci. Strzelamy naciskaj¹c dowolny klawisz (najwygodniej klawisz spacji). Mimo prostych zasad gra nie jest wcale ³atwa i ustrzelenie oœmiu potworów dwunastoma pociskami nale¿y uznaæ za spory sukces.
A oto kilka uwag pomocnych przy analizie programu. Ca³oœæ podzielona jest na krótkie, wyraŸnie zaznaczone odcinki, nierzadko opatrzone nag³ówkami opisuj¹cymi w skrócie ich dzia³anie. Wszystkie zmienne maj¹ znacz¹ce nazwy. Oto ich wykaz 
A atrapa — tylko jako parametr funkcji RND F fa³sz — pe³ni rolê sta³ej logicznej
G$ aktualna sylwetka gada
GAD czy gad jest na ekranie (zmienna logiczna) I, J zmienne robocze
KR krok gada — ujemny lub dodatni
KULA czy kula jest na ekranie (zmienna logiczna) LK liczba kul do dyspozycji
MG liczba martwych gadów
PH faza ruchu (przesuniêcie indeksu tablicy WZS) RCH prawdopodobieñstwo ruchu gada STT prawdopodobieñstwo startu gada
T prawda — pe³ni rolê sta³ej logicznej
WZ$ wzory sylwetek gada
XG, YG wspó³rzêdne gada
XK, YK wspó³rzêdne kuli
ZG zwrot gada (przesuniêcie indeksu tablicy WZ$)

W liniach 20..70 zawarte s¹ deklaracje. Ma tu te¿ miejsce zainicjowanie niektórych zmiennych — pe³ni¹ one w programie rolê sta³ych — oraz ekranu. Dla wywo³ania wra¿enia ruchu gad pokazuje siê w dwóch fazach (z ³bem w górze lub przy ziemi); poniewa¿ jednoczeœnie mo¿e byæ zwrócony w lewo albo w prawo, konieczne s¹ cztery sylwetki — zawiera je tablica WZS. Instrukcja POKE 752,1 czyni kursor niewidocznym. Linia 80 nadaje wartoœci pocz¹tkowe zmiennym opisuj¹cym stan gry: tuzin kul do dyspozycji, brak martwych gadów, wystrzelonej kuli ani biegn¹cego gada nie ma na ekranie.
Czêœæ programu pomiêdzy liniami 90 a 490 stanowi pêtlê czasu. Jest to zegar gry: jednostk¹ czasu jest jednokrotne wykonanie tej sekwencji. Bêdê j¹ nazywa³ cyklem. Podczas ka¿dego cyklu obs³ugiwane s¹ wszystkie (gad, kula i dwa "liczniki") obiekty na ekranie poprzez warunkowe wykonanie odpowiednich fragmentów. Oto g³ówne czêœci programu
Kreowanie gada (100..140). Jeœli gad jest na ekranie, co sprawdza linia 110, to ta czêœæ jest opuszczana. Jeœli gada nie ma, losowane jest jego pojawienie siê (linia 120) godnie z zadanym prawdopodobieñ
stwem — patrz linie 560..580. Fiasko losowania oznacza, ze w bie¿¹cym cyklu gad siê nie pojawi. Jeœli losowanie wypad³o pomyœlnie, trzeba zmieniæ stan zmiennej GAD, wylosowaæ kierunek, w którym zwierz bêdzie zmierza³, a to oznacza ustalenie trzech zmiennych: XG — miejsce pojawienia siê gada, ZG — wizerunek gada lewy lub prawy oraz KR — krok ujemny lub dodatni.
Ruch gada (150..180). Ten fragment jest pomijany jeœli gada nie ma. Decyduj¹ o tym linie 110..120. Jeœli gad jest obecny, jego ruch zale¿y od wyniku losowania zgodnie z zadanym prawdopodobieñstwem — patrz linie 560..580. Daje to mo¿liwoœæ zmiany p³ynnoœci ruchów bestii w szerokich granicach. Jeœli krok ma zostaæ wykonany, wyœwietla siê po prostu nowy wizerunek gada (uwzglêdniaj¹c fazê i zwrot), a odstêp za ogonkiem potwora sam zamazuje pozosta³oœæ po poprzednim rysunku. Wspó³rzêdna XG zwiêksza siê (zmniejsza) o KRok.
W tym miejscu ma³a dygresja. W programach tego typu doœæ czêsto wystêpuje problem "dwustanowego przerzutnika", czyli zmiennej przyjmuj¹cej na przemian dwie wartoœci. Mo¿e tu chodziæ o wahad³o zegara, skrzyd³o ptaka, szczêkê psa (lub krokodyla!) itp. Gdy wybranymi wartoœciami s¹ 0 i 1, rzecz jest prosta. Dla zmiany stanu wystarczy napisaæ X = NOT X. Co zrobiæ jednak, gdy potrzebne s¹ wartoœci np. 3 i 5? Konstrukcja w stylu IF X = 3 THEN X = 5
IF X = 5 THEN X = 3 nie wydaje siê najlepszym rozwi¹zaniem Proponujê raczej
X = ABS(X-8) z niezawodnym skutkiem, gdy chodzi o wartoœci nieujemne. Tym sposobem w linii 170 PH bêdzie na przemian 0 i 10, co okreœla, z której po³owy tablicy WZ$ bêdzie pobrany wizerunek gada.
Znikanie gada (190..210). Gdy gad doszed³ do krawêdzi obrazu, trzeba go "znikn¹æ". Ten fragment nie wymaga chyba komentarzy.
Kreowanie kuli (270..310). Ta czêœæ jest opuszczana, je¿eli poprzednio wystrzelona kula przebywa jeszcze na ekranie. Gdy kuli nie ma, sprawdza siê zawartoœæ komórki 764 (czy naciœniêto klawisz). W linii 250 usuwana jest jedna kula z zapasu, a w 260 ustala siê pozycja nowej kuli na ekranie.
Ruch kuli (270..310). Ta czêœæ wykonuje siê tylko wtedy, gdy kula jest na ekranie (bada to fragment "kreowania kuli"). Wymazuje ona poprzedni obraz kuli (linia 290) i produkuje nowy (linia 300). Barwa i g³oœnoœæ odg³osu strza³u w linii 310 zale¿y od po³o¿enia kuli — zmienia siê w ka¿dym cyklu.
Znikanie kuli (320..360). Kula znika po osi¹gniêciu na ekranie wiersza, w którym porusza siê gad (YK = YG). Wtedy liczba kul LK zmniejsza siê, a program sprawdza w linii 350 czy na linii strza³u (XK) znajduje siê gad. Jeœli go tam nie ma przechodzimy do kolejnego cyklu, o ile (linia 500) s¹ jeszcze jakieœ kule.
Trafienie (370..480). Fragment wykonywany wtedy, gdy "znikanie kuli" wykryje jeden z pierwszych trzech cz³onów gada na linii strza³u. Trafienie w ogon nie jest œmiertelne. Trywialne efekty dŸwiêkowe i graficzne pominê. W linii 470 zwiêksza siê liczba martwych gadów (XG = 0 jest konieczne, aby szybki strza³ w miejsca po gadzie nie przynosi³ punktu), a linia 480 wyœwietla w stosownym miejscu kolejne zw³oki.
Na koniec odgrywana jest losowa melodyjka, w której jako element opóŸniaj¹cy wykrzysta³em nies³ychan¹ prêdkoœæ instrukcji potêgowania ATARI BASIC-a. Dane w linii 580 pozwalaj¹ regulowaæ czêstoœæ pojawiania siê nowych gadów oraz prêdkoœæ poruszania siê tego mi³ego zwierzêcia.
Janusz Wiœniewski
Tabliczka graficzna (touch tablet) nie jest wymagaj¹ca. Do malowania wystarczy palec, patyk czy jakiekolwiek inne têpe narzêdzie.
Mo¿na te¿ u¿ywaæ, ale nie jest to zbyt oryginalne, rylca wchodz¹cego w sk³ad zestawu. Touch tablet z programem ATARI ARTIST wyzwoli drzemi¹ce w niejednym z nas czêsto nieuœwiadomione, mo¿liwoœci twórcze.
Zestaw touch tablet to: p³ytka czujnika zamontowana w obudowie z tworzywa sztucznego, rylec (czujnik dotykowy) i cartridge z oprogramowaniem. Tabliczka graficzna ³¹czy siê z gniazdem dr¹¿ka sterowego w komputerze. Wewn¹trz tabliczki znajduj¹ siê cztery uk³ady scalone, wlutowane w p³ytkê drukowan¹, jednostronn¹, które steruj¹ dzia³aniem tabliczki. S¹ to: dwa czterokrotne multipleksery analogowe, czterobitowy sumator z przeniesieniem równoleg³ym i przetwornik analogowo-cyfrowy. Ich zadanie polega na przetwarzaniu otrzymanego sygna³u i wysy³aniu go do komputera.
Zasadnicz¹ czêœci¹ tabliczki graficznej jest p³ytka czujnika dotykowego. Sk³ada siê ona z zewnêtrznej folii ochronnej, wewnêtrznej folii ekranuj¹cej oraz dwóch warstw folii z napylonymi pow³okami (paskami) oporowymi (wêglowymi). Jedna warstwa folii z pow³okami obs³uguje oœ wspó³rzêdnych X (poziom¹), zaœ druga — oœ wspó³rzêdnych Y (pionow¹). Paski na ka¿dej z warstw s¹ prostopad³e wobec siebie, poniewa¿ obs³uguj¹ ró¿ne osie wspó³rzêdnych.
Spróbujmy opisaæ dzia³anie tabliczki graficznej. WyobraŸmy sobie, ¿e ka¿dy pasek na powierzchni folii to potencjometr. Infor
macja z paska rezystancyinego w momencie docisku rylca jest zbierana tak, jak z suwaka potencjometru. Do krañców ka¿dego paska doprowadzone jest poprzez œcie¿ki przewodz¹ce napiêcie wzorcowe z uk³adu elektronicznego znajduj¹cego siê wewn¹trz obudowy tabliczki. Je¿eli w danym miejscu dociœniemy rylec do paska rezystancyjnego, spowoduje to zwarcie powierzchni tego paska z powierzchni¹ przewodz¹c¹, która spe³nia rolê suwaka potencjometru. Po³¹czenie czujnika dotykowego (rylca) wzglêdem wspó³rzêdnych X lub Y w³aœciwych dla danej warstwy folii jednoznacznie okreœla wielkoœæ napiêcia, które zostanie odprowadzone z powierzchni przewodz¹cej.
Tabliczka mo¿e byæ traktowana jako uk³ad dwóch manipulatorów paddle (wiose³ek). Tabliczka zastêpuje paddle w niektórych grach komputerowych na ATARI. Ruch rylcem po powierzchni p³ytki imituje dzia³anie wiose³ek w ten sposób, ¿e kursor na ekranie telewizora pod¹¿a w œlad za czujnikiem. Mo¿na siê o tym przekonaæ pisz¹c krótki program w BASIC-u. Np.
10 PRINT PADDLE (0) 20 GOTO 10
Program ten sprawdza komórkê, w której jest przechowywana aktualna wartoœæ odczytywana z czujnika PADDLE (0).
Wprowadzona funkcja PADDLE (0) obs³uguje oœ X (pozioma), zaœ funkcja PADDLE (1) — oœ Y (pionowa). Funkcja PRTIG (0) kieruje lewym przyciskiem kontrolnym, a PRTIG (1) — prawym.
Do uruchomienia zestawu touch tablet niezbêdne jest u¿ycie cartridge'a z programem ATARI ARTIST. Program ten ³¹czy cechy tradycyjnego malarstwa (szkicowanie, wybór szerokoœci i rodzaju pêdzla) z zaletami grafiki komputerowej (wzory kolorów, kreœlenie okrêgów i kwadratów, odbicia lustrzane). Funkcjonalnie ATARI ARTIST jest
TABLICZKA GRAFICZNA
odpowiednikiem znanego programu KOALA MICROILLUSTRATOR (wystêpuj¹cego te¿ pod nazw¹ KOALA PAD). Pos³ugiwanie siê programem ATARI ARTIST jest bardzo proste. (Sami co prawda nie odnotowaliœmy w tej dziedzinie znacznych osi¹gniêæ, o wiele ciekawsze efekty da³y próby zaprzyjaŸnionych dzieci.)
Cartridge nale¿y wsun¹æ do gniazda przed uruchomieniem komputera. Potem mo¿emy zwróciæ siê po instrukcje za pomoc¹ klawisza HELP czy znaku zapytania (z klawiatury) albo od razu przyst¹piæ do tworzenia.
Menu programu ATARI ARTIST sk³ada siê z trzech rzêdów po piêæ "okien". Ka¿de z "okien" zawiera, oprócz nazwy wykonywanej funkcji, czytelny piktogram, który u³atwia pos³ugiwanie siê programem. Od menu mo¿na przejœæ do obrazka przez podniesienia rylca i naciœniêcie przycisku na rylcu lub na tabliczce. Klawisz spacji tak¿e pozwala przechodziæ od menu do obrazka (i z powrotem) nawet wtedy, gdy rylec spoczywa na powierzchni tabliczki. Funkcje mo¿na wybieraæ naprowadzaj¹c kursor na zadane "okno" i naciskaj¹c przycisk na rylcu (napis w "oknie" bêdzie wówczas podœwietlony). Wygodniejsze jest wywo³ywanie po¿¹danej opcji z klawiatury przez naciœniêcie odpowiedniej litery — nie potrzeba odrywaæ siê od obrazka. Wymaga to jednak pewnej wprawy w pos³ugiwaniu siê programem.
Przyst¹piliœmy zatem do rysowania. Decydujemy siê na okreœlon¹ funkciê, przyk³adamy rylec do tabliczki, naciskamy guzik na rylcu i oto, co mo¿emy zrobiæ. Zaczniemy najpewniej od rysowania (DRAW — D) prostych lub bardziej skomplikowanych figur, postaci czy sk³adania pisemnych oœwiadczeñ. Bardziej wymagaj¹cy u¿ytkownicy maj¹ spory wybór pêdzli. Odcinki i linie proste uzyskujemy przez zaznaczenie ich koñców (LINE — L), a ci¹g odcinków dziêki K-LINE (K). Pojedyncze punkty daje
tryb POINT — P. Bardzo efektowne s¹ promienie (RAYS — R), wi¹zka linii wychodz¹cych z jednego punktu. Zamkniête obszary mog¹ byæ wype³nione (FILL — F) dowolnym kolorem czy jedno- lub dwubarwnym rastrem. Gotowe wzory: prostok¹tnych czy kwadratowych ramek (FRAME — F), okrêgów (CIRCLE — C), kó³ i wype³nionych elips (DISC — O), wype³nionych prostok¹tów i kwadratów (BOX — X), s¹ szans¹ dla najmniej utalentowanych. A kiedy jeszcze je powiêkszyæ (MAGNIFY — Z) nawet oœmiokrotnie lub odbiæ w lustrze (MIRROR — M) na rozmaite sposoby — efekty mog¹ byæ zaskakuj¹ce. W razie niepo¿¹danych efektów ekran mo¿e byæ wymazany (ERASE SCREEN — E). Co bardziej udane produkcje mo¿na zapisaæ na kasecie czy dyskietce, wprowadziæ znów do pamiêci komputera w celu dokonania poprawek, a kiedy siê znudz¹ — wymazaæ (STORAGE — S). Zestaw kolorów, w których przedstawione funkcie mog¹ byæ realizowane, jest bardzo szeroki. Spoœród 128 znajduj¹cych siê w menu (COLOR MENU — C) kolorów, na ekranie mo¿e siê jednoczeœnie pojawiæ 9 (w wypadku efektu têczy). Niezwykle widowiskowy jest — czêsto wykorzystywany w firmowych programach demonstracyjnych — efekt zmieniaj¹cych siê kolorów têczy.
Tabliczka graficzna jest urz¹dzeniem niezbyt rozpowszechnionym. A szkoda — bo mog³aby sprawiæ wiele radoœci dzieciom, którym strzelanina w grach czêsto nie wystarcza (z doœwiadczeñ na pokazach wiemy, ¿e zainteresowanie programami ATARI ARTIST czy KOALA przewy¿sza chêæ pogrania). Na razie za wczeœnie jeszcze na propozycje odbywania zajêæ plastycznych w naszych szko³ach przy wykorzystaniu mikrokomputerów — trudno jednak wykluczyæ tak¹ mo¿liwoœæ w przysz³oœci. I to chyba niezbyt odleg³ej.
Jacek Barlik Sergiusz Piotrowski
NIE BOJ SIÊ PRZERWAÑ! (1)
Wiele osób, nawet od d³u¿szego czasu maj¹cych kontakt z mikrokomputerami, dostaje "gêsiej skórki" s³ysz¹c s³owo PRZERWANIE.
Postaram siê udowodniæ, ¿e nie jest to nic strasznego. Zaczniemy od najprostszego przerwania wywo³ywanego przez program ANTIC-a (mikroprocesora tworz¹cego obraz).
KROK 1 (linie 10-20) Piszemy w jêzyku maszynowym procedurê, która bêdzie wykonywana podczas przerwania i umieszczamy j¹ w pamiêci (najlepiej na 6 stronie, która nie jest wykorzystywana ani przez BASIC, ani przez system opera
cyjny). Oto przyk³adowa procedura, która przy ka¿dym wywo³aniu zwiêksza jasnoœæ t³a.
8			PHP
72			PHA
173	198	2	LDA COLPF2§
141	10	212	STA WAITSYNC
24			CLC
105	2		ADC #2
141	198	2	STA COLPF2§
14 1	24	208	STA COLPF2
104			PLA
40			PLP
64			RTI
KROK 2 (linia 30)
Zapisujemy w rejestrze DLIVKT (512,513 — Display List Interrupt VeKTor) adres pocz¹tkowy procedury.
16 GRAPHICS 0:FOR I=1536 TO 1555:READ A:POKE I,A:NEXT I
28 DATA 8,72,173,198,2,141,10,212,24,105,2,141,198,2,141,24,208,104,40,64
30 POKE 512,0:POKE 513,6:POKE 710,194:REM 710 - KOLOR EKRANU
40 DL=PEEK(560)+256*PEEK(561):FOR I=7 TO 28 STEP 3:POKE DL+I,130:NEXT I 50 POKE 54286,192_
KROK 3 (linia 40)
Zamieniamy w odpowiednich miejscach programu ANTIC-a rozkazy tworz¹ce linie obrazu bez przerwañ na rozkazy z przerwaniami (+128).
KROK 4 (linia 50) Ustawiamy w rejestrze NMIEN (54286 — 
NMI ENable) wartoœæ zezwalaj¹c¹ na wywo³ywanie przerwañ przez program ANTIC-a.
Wojciech Zientara
BAJTEK1/87    11
CCS
CO
CD
LU
CO
CD LU Q
The Design and Entertainment Graphics Arts System — jest nowym programem graficznym firmy Batteries Included.
Program przeznaczony jest dla 16-bitowych komputerów ATARI ST. Ze wzglêdu na rozbudowany system wstêpnego programowania zawartoœci rejestrów koloru, generatora znaków, linii, pêdzla, aerografu, wype³niania obszaru zamkniêtego, ró¿nych efektów cienia i lustrzanego odbicia, mo¿na zaliczyæ DEGASa do kategorii programów profesjonalnych. Jak wiêkszoœæ opracowanych dla ATARI ST systemów komunikacji z maszyn¹, tak¿e DEGAS wykorzystuje „myszkê" i uk³ad okien tworz¹cych menu. Paletê tworzy 16 z 512 mo¿liwych do uzyskania kolorów, ustalanych przez sumowanie trzech sk³adowych: czerwonego, zielonego i niebieskiego. Po ustaleniu palety lub wykorzystaniu standardowych zawartoœci rejestrów, mo¿na przyst¹piæ do rysowania, malowania lub projektowania typograficznego. Oto lista rozkazów: gumka, rysunek odrêczny, punkt, odcinek, promieñ, wype³nienie obszaru, ko³o lub elipsa — wype³nienie, czworok¹t — wype³nienie, wielok¹t, precyzyjne prowadzenie narzêdzia, tekst, tekst w kc#trze, aerograf, cieñ, lustro, czytanie zbiorów dla generatora znaków, programowanie koloru, wype³nienie obszaru, linii, pêdzla, wyjœcie na drukarkê, zapis i odczyt z dysku, usuwanie tekstu, wyjœcie z programu. Korzystanie z programu wymaga wczeœniejszego treningu, a brak mo¿liwoœci powiêkszenia wycinka obrazu i koniecznoœæ powrotu do menu przy ka¿dej zmianie parametrów utrudnia nieco pracê. Mimo tych drobnych niedoci¹gniêæ przy pomocy DEGASa mo¿na uzyskaæ bardzo dobre efekty graficzne.
Zbigniew Kosmalski
CO
LU
PO wprowadzeniu do pamiêci, program prezentuje siê od najlepszej strony — bardzo efektownej plastycznie i funkcjonalnie zaprojektowanej listy rozkazów, ³¹cz¹cej menu z ekranem graficznym. Poziomo podzielony ekran w lewej dolnej czêœci zawiera piktogramy podstawowych funkcji. Dla wersji NeoChrome v0.5 s¹ to: przesuwanie pionowe obrazu, wycinanie fragmentu i jego przetwarzanie, typografia — ró¿ne kroje i wielkoœci, rysowanie odrêczne, odcinek, wype³nianie przestrzeni, pêdzel — ró¿ne efekty, zapis ekranu na dyskietkê, gumka, aerograf — równie¿ z mo¿liwoœci¹ wyboru œladu.
Wersja v0.8 zosta³a rozbudowana o funkcje no¿a, pozwalaj¹cego na wycinanie z ekranu dowolnego obszaru i przesuwanie go w inne miejsce. Wyciêty mo¿e byæ dowolny kszta³t, a przesuniêcie dokonane w trzech ró¿nych opcjach. Funkcja ta jest odmienna od przetwarzania fragmentu, gdzie kszta³t wybranego pola musi byæ prostok¹tny. W dolnym prawym rogu pojawiaj¹ siê dodatkowe opcje, uzupe³niaj¹ce podstawowe menu. I tak, przy zmianie fragmentu obrazu mo¿liwe jest obracanie, kasowanie, lustro, zamiana miejsc poszczególnych fragmentów, wielokrotne kopiowanie w ró¿nych skalach, efekt „echa" w przypadku znaków. Uzupe³nienie menu wystêpuje równie¿ dla aerografu, pêdzla i typografii.
W nowej wersji uzupe³nionej o wykreœlanie okrêgów i elips oraz wielok¹tów, znajduje siê funkcja wspó³pracy z analogo-wo-cyfrowym przetwornikiem obrazu tzw. videodigitalizerem W œrodku dolnej czêœci obrazu znajduje siê okienko, bêd¹ce na zmianê lup¹ do precyzyjnego rysowania albo palet¹ barw. które mo¿na przenosiæ do 16 rejestrów, znajduj¹cych siê powy¿ej.
Dodatkowe funkcje to: przesuwanie zawartoœci rejestrów koloru, anulowanie ostatniego rozkazu i ods³oniêcie ca³ego ekranu graficznego.
Program jest ³atwy w obs³udze i posiada walory edukacyjne.
Zbigniew Kosmalski
TEKSTY W TRYBIE GRAFICZNYM
10 DIM PT*<16G)-PT*="H:F0R 1=1 TO 166:R EAD A:5=S+fi:PT*(I>=CHR$(A>:NEKT I 28 IF SO 22969 THEN ? CHR*O25>;CHR$<29 >,CHR$<127>; "BLAD U DANYCH "'JCHR*<253> : END
30 ? C-HR* (125); CHR*< 29):FOR 1=70 TO 138 STEP 10 ? I=NEXT I ? "CONT" POSITION 2, 6 POKE 842,13=STOP
40 POKE 842.12-? CHR*a25>.;CHR*<29> 'POK E 766,1 ? "10DIMPT*a66>,T*<255> PT$="; CHR$<34);PT*c1,75 >,CHR*<34> 56 ? "20PT$C76)=";CHRt<34>;PT*<.76>;i:³«$ <34>P0KE 766,0 FOR 1=38 TO 60 STEP 18: ? I ¦¦ NEXT I
68 ? "P0KE842,12 L." POSITION 2,8P0KE 842,13 STOP
70 DATA 104,201,4,240,9,178,240,5,184, 104,282,288,251,96,184,133,206,184,133 ,285,184,184,168,184
88 DATA 133,288,184,133,207,184,184,248 ,236,133,203,24,165,285,181,88,133,285, 165,89,101,286,133,206
98 DATA 152,240,15,165,285,185,64,133,2 05,165,286,185,1,133,286,136,288,241,13 2,212,160,0,132,211
108 DATA 177,207,160,0,170,160,!,136,13 2,204,138,41,96,208,4,169,64,16,14,281, 32,208,4,169
118 DATA 0,16,6,281,64,208,2,163,32,133 ,289,138,41,31,5,209,133,209,169,8,162, 3,6,209
128 DATA 42,202,208¦250,109,244,2,133,2
18,164,212,177,209,69,284,164,211,145,2
85,280,132,211,196,283
138 DATA 208,182,24,165,205,105,40,133,
205,144,2,230,206,230,212,169,8,197,212
,288,159,96
Przy wykonywaniu wykresów w trybie graficznym "8" czêsto spotykamy siê z problemem opisania rysunku. OKno tekstowe w dolnei czêœci ekranu jest zwykle do tego celu niewystarczaj¹ce. Poni¿sza procedura umo¿liwia umieszczenie tekstu w dowolnym mieiscu ekranu.
Po wpisaniu programu wed³ug przedstawionego wydruku nale¿y przed uruchomieniem zapisaæ go na dysku lub kasecie. Program tworzy dwie nowe linie zawieraj¹ce procedurê w jêzyku maszynowym, a nastêpnie kasuje sam siebie. Otrzyman¹ procedurê nale¿y zapisaæ na kasecie przez L."C:" lub na dysku przez L"D:TEKST.LST". Mo¿na równie¿ do ka¿dego nowego programu generowaæ procedurê od nowa. korzystaj¹c z podanego programu.
Pisz¹c program, w którym zamierzamy u¿yæ tej procedury, musimy pomin¹æ linie 10 i 20, gdy¿ numery te maj¹ linie procedury.
Aby u¿yæ procedury nale¿y podaæ w programie instrukcjê
A = USR(ADR{PTS),PX,PY, AOR(T$),LEN(T$))
gdzie PX oznacza wspó³rzêdn¹ x pierwszego znaku, PY — wspó³rzêdn¹ y. a T$ — ci¹g znaków (tekst), który ma byæ wyœwietlony. Wspó³rzêdne x i
v s¹ obliczane tak jak w trybie "0" (tzn. x - 9^-39, y = 0-h21(23)) Ci¹g TS mo¿e byæ podany tak¿e jako sta³a alfanumeryczna, w tym przypadku zamiast LEN(TS) nale¿y podaæ wartoœæ liczbow¹. Je¿eli chcemy napisaæ na ekranie wartoœæ zmiennej, np. N, to przed wywo³aniem procedury nale¿y umieœciæ instrukcjê TS = STRS(Nj.
Wojciech Zientara
12   BAJTEK1/87
KLAN COMMODORE
4fc
Sy\ u³atwiæ sobie ¿ycie?
Czytelnicy pism o tematyce mikrokomputerowei czêsto wpisuj¹ programy, publikowane w postaci ogromnej liczby linii DATA z szeregiem cyferek. Pomy³ki przy wpisywaniu danych s¹ zjawiskiem nagminnym. Programy, co prawda, przygotowywane s¹ do publikacji przez dodanie mechanizmów wykrywaj¹cych pomy³ki, ale có¿ z tego, jeœli po wpisaniu kilku stron maszynopisu komputer stwierdza, ¿e gdzieœ w obrêbie kilkuset linii jest b³¹d? Najprostszy sposób na sprawdzenie poprawnoœci wpisanych linii to zatrudnienie domownika do g³oœnego czytania tekstu programu i porównywanie us³yszanych liczb z tymi wpisanymi. Samodzielne porównywanie tekstu wpisanego z wydrukowanym jest szkodliwe dla oczu oraz systemu nerwowego. Co wiêc zrobiæ, gdy domownicy ju¿ siê zbuntowali? Rozwi¹zanie jest proste dla posiadaczy programów mówi¹cych typu np. SAM. Program ten dostêpny jest dla C-64 oraz ATARI 800 XL, a wiêc dla dosyæ du¿ej rzeszy amatorów informatyki. Rzecz polega na zast¹pieniu rozkazu POKE, wpisuj¹cego wyczytane z DATA wartoœci do pamiêci, rozkazem GO-SUB xxxx. W linii xxxx umieszczamy krótki podprogram:
xxxxQ$ = STR$(Q) : SAY Q$ : RETURN
Powy¿sza linia zak³ada, ¿e instrukcja POKE wpisywa³a do pamiêci wartoœæ zmiennej Q. Jeœli w danym programie u¿yto innej zmiennej, nale¿y odpowiednio zmieniæ liniê xxxx. Po wgraniu programu SAM wgrywamy program z DATA przeznaczony do sprawdzenia i uruchamiamy go. Komputer monotonnym g³osem zaczyna dyktowaæ serie cyfr. Z w³asnej praktyki wiem, ¿e w ten sposób mo¿na w ci¹gu kilku minut sprawdziæ nawet dosyæ d³ugi program. Osoby nie znaj¹ce jêzyka angielskiego, a umiej¹ce programowaæ mog¹ zast¹piæ proste SAY kolejnym podprogramem, wymawiaj¹cym cyfry po polsku — bêdzie to wymaga³o zdefiniowania kilku polskich s³ów typu „YAEDEN", „DVAE", „TSHY" itp.
Micha³ Silski
KOMPUTER STEREO
Pomys³ jest prosty, idealnie nadaje siê na d³ugie zimowe wieczory. ¯eby uzyskaæ stereofoniczne odtwarzanie dŸwiêku z komputera (a raczej komputerów) potrzebny jest znajomy z komputerem oraz trochê czasu. Wgrywamy na dwa komputery identyczny program muzyczny (typu MUSIC MAKER czy MUSIC CONSTRUCTION SET), na jednym komputerze zapisujemy pierwsze kilka g³osów, na drugim pozosta³e — i jednoczeœnie w³¹czamy odtwarzanie. Stabilnoœæ zegara w ka¿dym komputerze jest na tyle wysoka (wiele lepsza ni¿ w dowolnym elektronicznym zegarku), ¿e odtwarzanie bêdzie idealnie synchroniczne. Warunkiem jest u¿ywanie dwóch identycznych maszyn. U¿ytkownicy Amstradów mog¹ pokusiæ siê nawet o kwadro-foniê, zreszt¹ w ka¿dym przypadku mo¿na ustawiæ obok siebie wiêcej ni¿ dwa komputery i stworzyæ prawdziw¹ orkiestrê. Pomys³ jest sprawdzony na komputerach C-64. Leniwym posiadaczom tego komputera polecam program SYNTH SAMPLE III, zawieraj¹cy muzykê z filmu „Gliniarz z Beverly Hills (Axel F) zaaran¿owan¹ jako iewa i prawa strona. Wystarczy wgraæ program, na jednym komputerze nacisn¹æ klawisz „8", na drugim „9". Ciekawe efekty daje te¿ odtwarzanie na dwóch komputerach tego samego utworu z minimalnym przesuniêciem czasowym — pozostaje bardzo realistyczny efekt echa.
M.S.
GRA „£APACZ LITER
Zasady gry „£apacz liter" s¹ bardzo proste. W momencie „urwania" siê litery trzeba nacisn¹æ odpowiadaj¹cy jej klawisz. Im szybciej to robimy, tym lepszy jest wynik. W miarê up³ywu czasu zwiêksza siê poziom trudnoœci. Gra
bardzo pomaga w opanowaniu klawiatury — rzecz istotna przy pos³ugiwaniu siê komputerem.
MS.
18 GOSUB5600
1 000
10 i 0
1020 1 030 1040 1050 1 060 1 070 1080 1 090 1 100 1110 1500
1510 1520 1530 1540 1545 1550 1560 1570 1999
2000 2010
2020 2030 2040 2050 2055 2060 2070 2080 2090
2100
2110
5000
5002 5003 5004 5005 5006 5007 5008 5009 5011 5012 5013 5014 5015 5016 5017 5018 5020 5021 5022 5024
REfiDSr1.
LF*="l»ft»»»»»»»ftft»»»»»ftftftl"
HM*=CHR*<19>
M1*=CHR* C171>+CHR* <178 >+CHR* <177)+CHR* < 179 > M2*=CHR* <171>+CHR* <177 > +CHR* <178)+CHR* <179 > PR INTCHR* < 147 > ; CHR* < 28 > ; PR INTLEFT* < LF* ,16::';" »>      «< " FORI=1TO10
Ml*; "
M2*;"
M2*
Ml*
PR INTLEFT* (. LF*.. 16> pr iNTLEFT* < LF*.. 16> NEXT
priMTLEFT*<LF*.16); CHR*<31 > ; " —' " ; CHR*<5>
FORZ=1TO10 GOSUB2800 SC=SC+C"i:G%=0 NEXT
pr IHTHM*; DW*; " WTWOnil. MJ WVNIK : " ; SC : I FSOHSTHENHS= prIHTHM*;LF*; dw*;"MNftJLEPSZV WVNIK "; HS; WRIT198,1
SC=0:X=X+1'IFX>11THENX=11 GOTO1058
rem--------------------------------
FORfl=1tornd <1> *10* <11-X) >  L54asRND< 1 > #26+65 ¦¦   pr iNTCHR* < 19 > ; LF*; CHR* < IX > HEXT
l*=chr*'::l":>
F0RI=2T021
fort=1to<11-X > *2:next
PRihthm*;LF*;LEFT*<dw*,1-1>ichr*<32> GETfl*
IFfl*=l*THEHC:-;=23-I ¦ 1=23 : GOTO2100 PRINTHM*;LF* iLEFT* <dw*,1>il* NEXT RETURN REM HfiPIS
PRINT"r>r <--.
PRINT" i PRINT" i
PRINT" i—i   .—-. i—. .—* r PRINT" i        i   i i   i i   i i PRINT" i        i   i i   i i   i i
PRINT" 1-1     Ll—'      L'-
PRINT" i
PRINT" -r
PRINT" i
PRINT" i
PRINT" i
PRINT" i        iii
PRINT" PRINT" PRINT"
print"i— n n       nni i r% i
PRINT"! _ i J l_l V__¦' \S i \        i
i  BflJTEK   -87   i
PRINT"L_I WRIT198, 1
J L_l x i   i DLfl RETURN
y l
BAJTEK1/87    13
CENTRUM OBLICZENIOWE I GRYZONIE
CZYLI
AMIGA
Ten nieco szokuj¹cy tytu³ odnosi siê do nowego produktu firmy Commodore, komputera AMIGA.
Na pocz¹tek kilka danych technicznych. Komputer oparty jest na mikroprocesorze Motorola MC 68000, o strukturze 16/32 bitowej i szybkoœci zegara 7.8 MHz. Pamiêæ RAM 256-512 KB (zale¿nie od ceny), rozszerzalna do 8 MB. Wbudowana stacja dysków 3.5" o pojemnoœci 880 KB, mo¿liwoœæ do³¹czenia w sumie czterech stacji dysków. Hard disk — na ¿yczenie. Ma³o tego, AMIGA posiada w swym wnêtrzu trzy specjalizowane procesory, pieszczotliwie nazwane Agnes, Daphne i Portia, zajmuj¹ce siê grafik¹, animacj¹, dŸwiêkiem, portami we/wy i czym tylko jeszcze siê da, pozostawiaj¹c g³ównemu procesorowi praktycznie tylko obliczenia. Dziêki takiemu rozwi¹zaniu AMIGA jest jednym z najszybszych dostêpnych komputerów — potrafi np. przetwarzaæ sygna³ wizyjny w czasie rzeczywistym! Skoro ju¿ mowa o grafice: jest to jedna z mocnych stron tego komputera.
Rozdzielczoœæ ekranu graficznego wynosi od 320 x 200 pkt. do 640 x 400 pkt., przy 4096 kolorach, co najciekawsze, mo¿liwych do jednoczesnego otrzymania na ekranie! Poza grafik¹ o niewiarygodnej jakoœci (patrz zamieszczone zdjêcia) AMIGA pozwala nam definiowaæ znane ze starszych modeli „duszki" (sprites), tyle ¿e ich iloœæ i wielkoœæ nie podlega ju¿ takim ograniczeniom, jak kiedyœ. Duszków jest teoretycznie 8, ale w rzeczywistoœci mo¿emy na ekranie zobaczyæ dowoln¹ ich liczbê.
Jeœli jednak ktoœ nie interesuje siê grafik¹, AMIGA oferuje doskona³y tryb tekstowy (80 znaków * 25 wierszy) oraz ogromne mo¿liwoœci dŸwiêkowe. Cztery kana³y cyfrowe syntezatora pozwalaj¹ tworzyæ dowolne dŸwiêki, bez ¿adnych ograniczeñ. Mo¿na odtwarzaæ muzykê przes³an¹ cyfrowo z Compact-Disku, mo¿na generowaæ doskonale brzmi¹c¹ ludzk¹ mowê, mo¿na imitowaæ instrumenty lub orkiestry, mo¿na wreszcie wprowadziæ do pamiêci komputera cyfrowy zapis dowolnej muzyki, korzystaj¹c z wbudowanego wejœcia analogowo-cyfro-wego (tzw. digitizer). Wyjœcie dŸwiê-
kowe komputera jest oczywiœcie stereofoniczne.
System operacyjny AMIGI, bardzo podobny do znanego systemu UNIX, nale¿y do grupy systemów wielozadaniowych (multitasking), co oznacza, ¿e komputer mo¿e wykonywaæ (pozornie) wiele programów naraz. W przypadku AMIGI mo¿na np. poleciæ kom-
puterowi pracê z baz¹ danych, po³¹czenie telefoniczne z inn¹ baz¹ danych, obliczenie rocznego bud¿etu, sortowanie zapisów na dysku, drukowanie listów i kontrolê domowych urz¹dzeñ elektrycznych, a na wyniki jego- pracy poczekaæ, uprzyjemniaj¹c sobie czas gr¹ w szachy (z komputerem) i s³uchaniem muzyki (z kompute-
Z za³o¿enia firmy nie mia³a to byæ maszyna zastêpuj¹ca starzej¹cy siê powoli, lecz nadal popularny model C-64. Mia³ byæ to krok naprzód.
Firma Commodore Business Machines nie chcia³a pozostaæ na spalonej pozycji i w efekcie doœæ drogo j¹ to kosztowa³o, gdy¿ po wprowadzeniu na rynek nowego komputera C + 4 oraz Commodore 16 i 116 omal¿e nie splajtowa³a. Dosz³o nawet do tego, ¿e na targach elektronicznych CES firma nie by³a w stanie wykupiæ w ca³oœci zarezerwowanej dla niej przestrzeni wystawowej.
Commodore + 4 zosta³ po raz pierwszy wystawiony podczas zimowych targów CES w styczniu 1984 pod nazw¹ Commodore 264. Pocz¹tkowo mia³ to byæ komputer sprzedawany w ró¿nych konfiguracjach pamiêci w zale¿noœci od indywidualnych potrzeb u¿ytkownika; koncepcja firmy zak³ada³a wyposa¿enie tego komputera w kilka czy nawet kilkanaœcie ró¿nych wersji pamiêci ROM z mo¿liwoœci¹ wyboru i monta¿u tych ostatnich nawet w sklepie. Pomys³ zpsta³ jednak storpedowany przez handlowców, dla których by³oby raczej niewygodne sprzedawanie ró¿nych wersji tego samego komputera; sama firma zarzuci³a te plany w pó³ roku póŸniej. Zrezygnowano tak¿e z przedstawienia na nastêpnych targach CES modelu 364, który mia³ byæ wersj¹ delux wyposa¿on¹ w syntetyzer mowy oraz dodatkow¹ klawiaturê numeryczn¹. Planowano tak¿e, ¿e CBM wypuœci na rynek ok. 30 programów firmowych, przewa¿nie u¿ytkowych oraz kilka najpopularniejszych gier z C-64.
Brak oprogramowania na rynku, nie-kompatybilnoœæ z innymi wczeœniejszymi modelami i zmiana niektórych gniazd (w
PU£APKA NA OSZCZÊDNYCH
CZYLI
sensie po³¹czenia) sprawi³y, ¿e komputer ten pomimo niez³ych mo¿liwoœci technicznych sta³ siê niewypa³em i to na du¿¹ skalê. Podobny los spotka³ tak¿e modele C-16 i C-116. Po olbrzymim sukcesie jakim by³ C-64 firma ponios³a klêskê; konsekwencje najbardziej odczuwaj¹ wszyscy ci, którzy skuszeni nisk¹ cen¹ zakupili jeden z tych trzech komputerów. Najlepiej œwiadczy o tym iloœæ listów z proœb¹ o oprogramowanie przychodz¹cych do redakcji „BAJTKA".
Jak ju¿ wspomnia³em koncepcja tirmy by³a odmienna ni¿ w wypadku C-64. C + 4 mia³ byæ komputerem przeznaczonym dla ma³ych firm i przedsiêbiorstw do prowadzenia interesów. Z tego powodu w pamiêci ROM znalaz³y siê cztery gotowe programy — procesor tekstu, prosta baza danych oraz dwa inne umo¿liwiaj¹-ce tworzenie wykresów, tabel itp. Programy te mo¿na czêœciowo mieszaæ ze sob¹ tzn. ³¹czyæ dokument (w sensie tekstu) z grafik¹, tabelami itd. Projektantem tego oprogramowania by³a firma International Tri Micro a sam program wewnêtrzny jest tak¿e okreœlany mianem
„3+1". Niestety oprogramowanie to ma tak¿e pewne wady — najs³abszym punktem wydaje siê byæ procesor tekstu.
W samym komputerze wykorzystano wiele dobrze sprawdzonych wczeœniej uk³adów i rozwi¹zañ.  Innowacj¹ by³o
wprowadzenie nowego mikroprocesora 7501, którego lista rozkazów jest kompatybilna z poprzednikami — 6502 i 6510. Teoretycznie wiêc mog³oby siê wydawaæ, ¿e nie powinno byæ k³opotów z implementacj¹ popularnych programów Commodore 64; niestety zmiana organizacji pamiêci, profilu komputera i po czêœci systemu operacyjnego wymiennoœæ tak¹ uniemo¿liwi³y.
Du¿ym krokiem naprzód by³o ulepszenie dotychczasowej wersji jêzyka BASIC — w omawianym komputerze wprowadzono tzw. BASIC 3.5. Zawiera on ok. 75 rozkazów i instrukcji, w czym 12 przeznaczono do obs³ugi grafiki i dŸwiêku. Wbudowany na sta³e w pamiêci ROM monitor jêzyka maszynowego pozwala bardziej zaawansowanym u¿ytkownikom uk³adaæ w³asne programy maszynowe. Monitor ten zawiera 17 rozkazów. Kontynuacj¹ tej koncepcji jest tak¿e monitor w komputerach C-128 i C-128D.
Zwiêkszona zosta³a liczba kolorów do ³¹cznej liczby 128. W rzeczywistoœci jest
14   BAJTEK 1/87
ra).
Wszystkie te mo¿liwoœci s¹ szokuj¹ce, ale czytelnik zapewne spyta: ile lat trzeba uczyæ siê obstugi AMIGI? OdpowiedŸ jest niespodziewana, ani chwili. No, mo¿e kilka chwil. AMIGA zosta³a skonstruowana jako komputer „przyjazny", jej ekran do z³udzenia przypomina ATARI 520 czy Mclntos-ha, wyœwietlaj¹c tekst w systemie „okien" i przyjmuj¹c rozkazy na drodze wskazywania ikon. Wyboru dokonujemy poruszaj¹c „myszk¹" — st¹d te gryzonie w tytule. Dla przyk³adu zajmijmy siê spraw¹ zegara. Ju¿ w starym, dobrym C-64 u¿ytkownik mia³ dostêp do zmiennej systemowej, przechowuj¹cej zegar czasu rzeczywistego. Wystarczy³o napisaæ PRINT Tl$ i na ekranie pokazywa³o siê szeœæ cyferek odpowiadaj¹cych godzinom, minutom i sekundom. W przypadku AMIGI zamiast Tl$ mamy po prostu rysunek tarczy zegara, który mo¿na powiêkszyæ, pomniejszyæ, umieœciæ w dowolnym miejscu, zmieniæ kszta³t, powieliæ lub schowaæ. Wszystkie operacje ze strony u¿ytkownika sprowadzaj¹ siê do poruszania „mysz¹" i naciskania klawisza w jej obudowie. Po prostu to, co w starszych komputerach by³o celem samym w sobie (jak choæby ów graficzny zegar), w nowszych jest jedn¹ ze standardowych funkcji.
Mo¿liwoœci to jednak ma³o, trzeba umieæ je wykorzystaæ, czyli mieæ oprogramowanie. Powsta³o ju¿ sporo programów dla AMIGI, zarówno u¿ytkowych, jak i rozrywkowych. Dostêpne s¹ programy graficzne, muzyczne, jêzyki programowania oraz — co najciekawsze— symulator IBM PC, pozwalaj¹cy u¿ywaæ na AMIDZE setki
to 16 kolorów podstawowych i osiem poziomów luminacji dla ka¿dego z nich. Zmieniono tak¿e pojemnoœæ pamiêci RAM dla u¿ytkownika do ³¹cznie 60KB, co by³o mo¿liwe dziêki zastosowaniu nowej techniki bankowania pamiêci. Niestety zmiany te zosta³y okupione pewnymi stratami — w modelu tym nie mo¿na generowaæ sprite'ów a syntetyzer dŸwiêku 6581 zosta³ zast¹piony zwyk³ym dwutonowym generatorem. Rozdzielczoœæ ekranu dla grafiki HIRES pozosta³a taka sama i wynosi 320 na 200 punktów.
programów stworzonych dla tego standardu. Jednym z ciekawszych jest program WORKBENCH, podobny w dzia³aniu do systemu GEOS dla C-64. Program ten pozwala u¿ytkownikowi kompletnie nie znaj¹cemu zasad programowania w pe³ny i efektywny sposób wykorzystywaæ ogromne mo¿liwoœci komputera, pos³uguj¹c siê — jak zwykle — tylko „myszk¹".
AMIGA nie jest jednak wolna od wad. Nad stworzeniem systemu operacyjnego „INTUITION", który kontroluje pracê komputera, pracowa³o ok. 150 osób. Spowodowa³o to powstanie kilku b³êdów, które systematycznie poprawiane, da³y w efekcie brak stuprocentowej kompatybilnoœci miêdzy pierwszymi modelami. Niezrozumia³y jest te¿ d³ugi czas dostêpu do katalogu dysku — przy organizacji wewnêtrznej komputera z u¿yciem 25 kana³ów DMA czas ten powinien byæ niezauwa¿alnie krótki. Trzeci¹ wad¹ jest cena — podstawowa konfiguracja sk³adaj¹ca siê z komputera z wbudowan¹ stacj¹ dysków 3.5" oraz monitora kolorowego kosztuje ponad 1000 S. Panuje jednak powszechne przekonanie, i¿ o ile firma Commodore nie zaprzepaœci kolejnej szansy, AMIGA ma przed sob¹ œwietlan¹ przysz³oœæ, stanowi¹c nowy standard w grupie komputerów osobistych.
Na zakoñczenie interesuj¹ca wiadomoœæ dla wszystkich posiadaczy AMIGI — ursynowski klub MANIAK od listopada 1986 roku rozszerzy³ swoj¹ dzia³alnoœæ o ten model, zapraszaj¹c do wspó³pracy wszystkich zainteresowanych. „Na sk³adzie" jest m.in. programowy symulator IBM.
M.S.
Jak widaæ na zdjêciu zmianie uleg³a klawiatura oraz sam wystrój zewnêtrzny komputera. Wprowadzono oddzielne klawisze do obs³ugi kursora oraz przeniesiono klawisze funkcyjne (programowane z BASIC-a za pomoc¹ rozkazu KEY) na szczyt klawiatury. W chwili uruchomienia komputera klawiszom tym s¹ automatycznie przypisywane nastêpuj¹ce funkcje: DLOAD (Disk LOAD), DIREC-TORY, SCNCLR (SCreeNCLeaR), DSA-VE (Disk SAVE), RUN, LIST oraz HELP (pomaga wyszukiwaæ  b³êdy).  Zestaw
znaków pozosta³ w zasadzie taki sam, dosz³y jeszcze funkcje FLASH ON i FLASH OFF. Ponadto klawiatura wzbogaci³a siê tak¿e o klawisz ESCape.
Znalaz³o siê tak¿e miejsce dla nowego przycisku powoduj¹cego wyzerowanie komputera bez wy³¹czania go z sieci; istnieje tak¿e mo¿liwoœæ wyzerowania komputera bez niszczenia znajduj¹cego siê w nim programu — trzeba podczas zerowania trzymaæ wciœniêty klawisz RUN/STOP.
Wejœcia dr¹¿ków sterowych oraz mag-
netofonu maj¹ zmienione wtyki i gniazda. Ta drobna — z pozoru — sprawa poci¹ga za sob¹ sporo k³opotów dla u¿ytkownika.
Bez obaw mo¿na u¿ywaæ natomiast wczeœniej zakupionych firmowych drukarek i stacji dysków przy³¹czanych do portu szeregowego (serial port). Do portu równoleg³ego mo¿na przy³¹czyæ tak¿e now¹, znacznie szybsz¹ stacjê dysków o nazwie SFS 481. Model ten posiada tak¿e dwa wyjœcia wizyjne — na monitor (np. 1701 czy 1702) oraz zwyk³e gniazdo antenowe umo¿liwiaj¹ce przy³¹czenie komputera do odbiornika telewizyjnego.
Brak kompatybilnoœci z Commodore 64 w powa¿nym stopniu zmniejszy³ atrakcyjnoœæ tego komputera. Jest on za to kompatybilny z komputerami C-16 i C-116 — przynajmniej pod wzglêdem wersji jêzyka BASIC. Z praktyki wynika, ¿e niektóre, bardzo proste programy dla C-64 mo¿na uruchomiæ na C +4, jednak¿e programy te nie mog¹ zawieraæ rozkazu POKE, a to ze wzglêdu na ró¿nice w systemach operacyjnych i organizacji pamiêci.
Na zakoñczenie muszê zmartwiæ wszystkich posiadaczy tego typu komputera — nie s³ysza³em bowiem jak do tej pory o ¯ADNYM programie czy emulatorze pozwalaj¹cym na symulacjê Commodore 64 na C +4 i (co gorsza) nic nie wskazuje, ¿e program taki kiedykolwiek zostanie napisany.
Na podstawie „Compute!"
paŸdziernik 1984
Klaudiusz Dybowski
„CZY MO¯ESZ OCALIÆ SWOICH KOLEGÓW CZAROWNIKÓW PRZED PEWN¥ ZGUB¥ W RÊKACH DIAB£A?"
Takie zadanie stawia przed Tob¹ gra „SORCERY". Jesteœ jedynym czarownikiem, którego diabe³ nie zdo³a³ uwiêziæ. Twoich oœmiu kolegów uda³o mu siê z³apaæ i uwiêziæ w ró¿nych komnatach ogromnego zamku, w lochach, piwnicach i skarbcach. Ka¿da komnata jest strze¿ona przez ró¿ne duchy, lataj¹ce oczy, ryjki œwiñskie i biegaj¹ce po ziemi czarownice.
Wszystkie te stwory, gdy zetkniesz siê z nimi, odbieraj¹ Ci ¿yciodajn¹ energiê.
Mo¿esz j¹ uzupe³niæ. W komnatach znajdziesz dziewiêæ kocio³ków z po¿ywn¹ zup¹. Ale strze¿ siê, niekiedy zupa jest zatruta i energia szybko ubywa.
Twoi koledzy czekaj¹ na pomoc — spiesz siê. Masz tylko 15 minut na uwolnienie wszystkich. Up³ywaj¹cy czas ilustruje wielka ksiêga, któr¹ od góry zjadaj¹ niewidzialne myszy. Je¿eli zjedz¹ j¹ do koñca to uwiêzieni koledzy zgin¹ marnie.
Wiele drzwi jest zamkniêtych. Do otwarcia ich bêdziesz potrzebowa³ ró¿nych rekwizytów: œwiecznika (fleur de-lys), tarczy (coat of arms).
W pod³ogach odnajdziesz klapy. Otworzyæ je mo¿esz za pomoc¹ nastêpuj¹cych rekwizytów: klucz (door key), du¿a butelka (big bottle), ksiêga czarów (spell book), z³oty kielich (golden cup), tarcza (coat of arms).
Czarownicy (SORCERERS) zamkniêci s¹ w specjalnych klatkach, które mo¿na otworzyæ ró¿nymi kluczami. S¹ to: magiczny ksiê¿yc (sorcerys moon), zjoty kielich (golden cup), magiczna pa³eczka (magie wand), korona (jeweld crown), ma³a lira (little lire), pergamin (scroll), kielich wina (goblet of wine), ksiêga czarów (spell book). Czêœæ z tych kluczy schowana jest w zamkniêtych schowkach, inne le¿¹ porozrzucane po æatym zamku.
Krajobraz w grze jest bardzo urozmaicony: lasy, jeziora, strumienie, wodospady. Musisz bardzo uwa¿aæ, aby nie uton¹æ w strumieniu. Przez wodospady mo¿esz swobodnie przechodziæ, ale nie wpadnij do wody, bo utoniesz i zostanie po tobie tylko czapeczka!
Komnaty w pa³acu podzielone s¹ kolumnami, ¿eby przejœæ dalej musisz odnaleŸæ ukryte przejœcia.
W ca³ym zamku i innych miejscach wokó³ zamku rozmieszczone s¹ ró¿ne przedmioty s³u¿¹ce do niszczenia duchów, œwinek, czarownic i oczu odbieraj¹cych energiê.
Do zwalczania najgroŸniejszego ducha przenikaj¹cego przez wszystkie przeszkody mo¿esz u¿yæ: ostrego topora (sharp axe), strzelaj¹cej gwiazdy (shooting star) oraz worka czarów (sack of spells).
Do zwalczania uœmiechniêtego ducha (nie przenika przez przeszkody), lataj¹cego oka i œwinki u¿yj: kulki z ³añcuchem (bali and chain) worka czarów (sack of spells), strzelaj¹cej gwiazdy (shooting star).
Czarownice chodz¹ce po ziemi mo¿na zniszczyæ mieczem (strong sword), workiem czarów (sack of spells) oraz strzelaj¹c¹ gwiazd¹ (shooting star).
Nie zu¿yj zbyt szybko wszystkich œrodków obronnych! Mo¿e siê okazaæ, ¿e w g³êbinach przepastnego tunelu jesteœ ju¿ bezbronny i zawiedziesz swoich przyjació³.
Je¿eli mimo wszystkich niebezpieczeñstw uda Ci siê uwolniæ wszystkich dowiesz siê, ¿e ocali³eœ od œmierci: FRANKA, BILLA, FREDA, SAMA, BOBA, JIMA, MICKA i JOEGO, którzy bêd¹ Ci wdziêczni po wsze czasy.
Maciej Marjjañski Micha³ Bobiñski
PRZEDMIOTY:
A — SPELL BOOK (KSIÊGA CZARÓW)
B — SCROLL (PERGAMIN) C — JEWELLED CROWN (KORONA)
D — SORCERYS MOON (MAGICZNY KSIÊ¯YC)
E — LYRE (LIRA)
F — GOBLET OF WINE (KIELICH WINA)
G — GOLDEN CUP (Z£OTY KIE-.LICH)
MAGIC WAND (MAGICZNA PA£ECZKA)
STRONG SWORD (MOCNY MIECZ)
SHARPE AXE (OSTRY TOPÓR)
BALL and CHAIN (KULA Z £AÑCUCHEM)
SHOOTING STAR (STRZELAJ¥CA GWIAZDA) SACK OF SPELLS (WOREK CZARÓW)
DOOR KEY (KLUCZ) BIG BOTTLE (DU¯A BUTELKA)
COAT OF ARMS (TARCZA) FLEUR DE LYS (ŒWIECZNIK)
H —
K —
M N
O P
S — SORCERER (CZARNOKSIÊ¯NIK)
NAZWY MIEJSC:
1. SANCTUARY —ŒWI¥TYNIA
2. PAL¥CE —PA£AC
3. PAL¥CE —PA£AC
4. NEAR THE PAL¥CE — W POBLI¯U PA£ACU
5. PAL¥CE —PA£AC
6. PAL¥CE —PA£AC
7. WATERFALL —WODOSPAD
8. WATERFALL — WODOSPAD
9. ABOVE THE CHATEAU — NAD ARKADAMI
10. ABOVE THE CHATEAU — NAD ARKADAMI
11. ABOVE THE CHATEAU — NAD ARKADAMI
12. OUTSIDE   THE   CASTLE   — POZA ZAMKIEM
13. CASTLE —ZAMEK
14. CASTLE —ZAMEK
15. OUTSIDE   THE   CASTLE   — POZA ZAMKIEM
16. NEAR THE CHATEAU —W POBLI¯U ARKAD
17. TUNNEL — TUNEL
18. CHATEAU —ARKADY
19. NEAR THE CHATEAU — W POBLI¯U ARKAD
20. WOODS —LASY
21. NEAR THE VILLAGE — BLISKO WSI
22. NEAR THE VILLAGE — BLISKO WSI
23. CHATEAU — ARKADY
24. CHATEAU — ARKADY
25. WESTERLAND — KRAINA NA ZACHÓD
26. WESTERLAND — KRAINA NA ZACHÓD
27. WESTERLAND — KRAINA NA ZACHÓD
28. STONENCHANGE — KAMIENNA PIWNICA
29. STONENCHANGE — KAMIENNA PIWNICA
30. TUNNEL MOUTH — WEJŒCIE DO TUNELU
31. TUNNEL MOUTH — WEJŒCIE DO TUNELU
32. TUNNEL —TUNEL
33. TUNNEL —TUNEL
34. DUNGEONS —LOCHY
35. DUNGEONS — LOCHY
36. STRONG ROOM — SKARBIEC
37. TUNNEL —TUNEL
38. TUNNEL —TUNEL
39. TUNNEL —TUNEL
40. TUNNEL —TUNEL
Pierwsze notowanie w tym roku i pierwsza niespodzianka— URIDIUM. Prawie po³owa wszystkich g³osuj¹cych umieœci³a ten program na pierwszym miejscu. W sumie nap³ynê³o 4121 propozycji „10", g³osowano na 297 tytu³ów gier.
1
2 3 4 5 6 7 8 9 10
URIDIUM ELITÊ
SPWsSPY FIRE LORD
BOULDER DASH ¦
INTERNATIONAL KARATE !
BOMB JACK
CAULDRON PENTAGRAM
THE LAST V.8
Nagrodê — zestaw programów komputerowych - otrzymuje Joanna Roszkowska z Warszawy.
S³awek
NADAWCA: Radek Dêbowski Konopnica 96-200 RAWA MAZ. woj. skierniewickie
				
42		¦		
4*3
Gdy zaczynasz grê, jeszcze nie wiesz, ¿e masz b. d³ug¹ drogê i moc zadañ do wykonania. Droga, na której czycha wiele niebezpieczeñstw zaprowadzi Ciê do „Gmachu Wiecznego Szczêœcia", a pomyœlne wykonanie wszystkich zadañ zale¿y od Twojej inteligencji i sprytu. Masz tylko jedno ¿ycie na wykonanie powierzonej misji, wiêc b¹dŸ maksymalnie uwa¿ny.
Na twoje „¿ycie" sk³adaj¹ siê tzw. Punkty Szczêœcia; s¹ to sk³adniki Twojej osobowoœci, których wykres s³upkowy wzrasta wraz z pomyœlnym wykonaniem zadania.
Twoim nadrzêdnym celem jest uzyskanie conajmniej 99% osobowoœci. Bêdzie to mia³o miejsce, gdy na wykresie s³upkowym pojawi siê napis „BANG". Gdy Twoja osobowoœæ bêdzie w miarê pe³na, mo¿esz rozpocz¹æ poszukiwania Drzwi do Gmachu Wiecznego Szczêœcia.
Podczas gry bêdzie prowadzony test na Twoj¹ inteligencjê, na zasadzie „Kto zabi³?" — wiêc myœl.
Gdzie jesteœ?
Grê rozpoczynasz w najbiedniejszej dzielnicy Nowego Jorku, gdzie nawet s³oñce ma odcieñ szaroœci, a cz³owiek jest czarny nawet przez „ró¿owe okulary".
Mo¿esz uwa¿aæ siê za swego rodzaju naukowca, wiêc przygl¹daj siê wszystkiemu uwa¿nie, dotykaj (dotyk to twój najwa¿niejszy zmys³), innych receptorów poza dotykiem i wzrokiem nie posiadasz, eksperymentuj wiêc na ca³ego.
SprawdŸ kieszenie.
Na pocz¹tku s¹ puste, lecz mo¿esz je zape³niæ ró¿nymi znalezionymi po drodze przedmiotami. Masz miejsce na osiem przedmiotów wiêc noœ tylko najpotrzebniejsze, np. P³aszcz — ochrona przed Pierœcieñ — u¿yj go na ... .
U¿yty raz przedmiot znika, masz jedno wolne miejsce, znajdŸ inny. „Fire" i ruch w dó³ sprawdza baga¿.
„Bezpañski" TRUP.
Podczas inspekcji któregoœ z domów ... niezidentyfikowane cia³o, nó¿ w plecach ... Kto jest morderc¹? — s¹siedzi maj¹ alibi, ale czy zgodne z prawd¹? Badaj fakty, weŸ pod uwagê wypowiedzi s¹siadów (23 komunikaty, alibi domowników), myœl a mo¿e zgadniesz? Jeœli „NIE" to wszystkie Twoje trudy by³y bezcelowe. Zwróæ uwagê na ... dzieci. Po wynotowaniu wszystkich
faktów ³atwo dojdziesz do wniosku, ¿e zabi³ pan ... a mo¿e pani ....
Korytarze POTÊGI
Przestrzenny labirynt, gdzieœ tam ukryte s¹ drzwi .... ale broni¹ ich kule ogniste. UWAGA! mo¿esz strzelaæ do kul jak „na WOJNIE". Wyjœcia z labiryntu prowadz¹ do ... zwyk³ego SQUASH'a lub innej gry zrêcznoœciowej.
Hala KOMPUTERÓW
Miejsce, gdzie mo¿esz u¿yæ znalezionych dysków Gdy ich nie posiadasz uciekaj wind¹. Morze DZIUR
Przechodz¹c przez dziury musisz znaleŸæ siê na pod³odze. Wojna
Polega na strzelaniu do symboli wylatuj¹cych z okien i przejœciu do odpowiedniej planszy. UWAGA! u¿yj pierœcienia, to si³a mi³oœci, która pomo¿e Ci w przetrwaniu ciê¿kich czasów.
STRZELNICA
Strzelaj do pojawiaj¹cych siê celów a otrzymasz wynagrodzenie w „punktach szczêœcia". UWAGA! po ka¿dym strzale broñ musi byæ ponownie za³adowana, przez powrót do pozycji „0".
Obrona P-Lot.
Obrona przed nalotem wroga, w pewnym limicie czasowym musisz powstrzymaæ zmasowany nalot bombowców nieprzyjaciela na kwadrat H-7.
Pokój ZTT -V
Gdy tu wejdziesz dobrze jest mieæ p³aszcz, który ¦ obroni Ciê przed strza³ami. Rozbij œcianê i podejdŸ po drabinie do „ga³ek" i zacznij uk³adaæ napis „ZTT".
ROZMOWA
Dyskusja choæ doœæ burzliwa mo¿e spowodowaæ wzrost Twojej osobowoœci. Polega ona na prowadzeniu dialogu w okreœlonym czasie na zasadach gry w „œcianki".
Pamiêtaj
Skompletowanie pe³nej osobowoœci polega na wykonaniu misji a tak¿e odgadniêciu zagadki i gdy to wszystko wykonasz dopiero mo¿esz poszukaæ odpowiednich drzwi.
IdŸ i znajdŸ je!
KOMPUTEROWI BRAK POLOTU
Andrzej Doniec, lat 22, student drugiego roku filologii s³owiañskiej w Uniwersytecie Jagielloñskim. Nagrodzony w konkursie „Bajtkowej Listy Przebojów".
— Jak siê ma jêzyk starocerkiewne/s³owiañski do supernowoczesnych komputerów?
— Nijak, bo jest zbyt skomplikowany, ¿eby wprowadziæ go do maszyny.
— Dlaczego w takim razie zainteresowa³eœ siê grami komputerowymi, skoro jako student filologii s³owiañskiej nie bêdziesz mia³ w przysz³oœci wiele pociechy z tego rodzaju urz¹dzeñ elektronicznych ?
— Moj¹ pasj¹ ¿yciow¹ s¹ szachy. Przed blisko 9 laty mistrz klasy miêdzynarodowej, wielokrotny olimpijczyk pan Kostro zachêci³ mnie do poœwiêcenia siê tej dyscyplinie. Spróbowa³em i nawet uda³o mi siê zakwalifikowaæ do kadry narodowej. Niedawno zaintrygowa³ mnie problem, w jaki sposób komputer rozegra³by partie szachów. Prawdê po-
wiedziawszy rozczarowa³em siê. Maszynê elektroniczn¹ mo¿na odpowiednio zaprogramowaæ, ale bêdzie tylko bezdusznym matematykiem. Brakowa³o jej intuicji i polotu.
— Jakiemu komputerowi zaproponowa³eœ pojedynek na 64 polach?
— Mam ZX Spectrum (48 kilobajtów), którego notabene kupi³em za wygrane w turniejach szachowych.
— Przygotowujesz program do jakiejœ nowej
gry?
— Tak. Próbujê rozpracowaæ koreañsk¹ grê WARI. Wymaga myœlenia (w przeciwieñstwie do gier symulacyjnych, które mnie nie interesuj¹). Komputer pokazuje ju¿ wyniki, w dalszym ci¹gu nie mogê poradziæ sobie z grafik¹.
(bb)
18    P.A.TTF.K 1/87
CO JEST GRANE
Powsta³o ju¿ wiele symulacyjnych gier sportowych na ZX Spectrum. S¹ to: seria konkurencji Daley'a Thompsona (Decathlon, Supertest, Winter Games, Hyper Sports), pitka no¿na — Match Day i World Cup, tenis — Match Point, Micro Olympics, Athlete. Seria Daley'a Thompsona mimo doskona³ej grafiki i animacji ma jedn¹ podstawow¹ wadê — bardzo niszczy klawiaturê. Pi³ka no¿na jest bardziej dopracowana, lecz animacja przebiega powoli. Tenis jest atrakcyjny, ale nie ma mo¿liwoœci dok³adnego sterowania pi³k¹. Micro Olympics i Athlete s¹ bogate w konkurencje, lecz prymitywne.
Ponad wszystkie te gry wznosi siê Ping Pong. Jest to nowatorski pomys³ firmy Konami, adaptowany na Spectrum przez Imagine — Program, Audio, Visual. Charakterystyczny jest brak sylwetek graczy! Gra siê samymi rakietkami, bardzo dok³adnie narysowanymi i animowanymi. Druga nowoœæ to dobra graficznie publicznoœæ (do tego nie przyk³ada siê zazwyczaj wiêkszej wagi.
Bardzo pomys³owo rozwi¹zana jest kwestia sterowania rakietkami — poruszaj¹ siê one same i ustawiaj¹ na wprost lec¹cej pi³ki. Do graj¹cego na-
tê¿y tylko odpowiednie uderzenie. Oto jakie przyciski za co odpowiadaj¹: góra        — œciêcie dó³ — serw
lewo       — silne uderzenie prawo      — lekkie uderzenie strza³       — backhand (uderzenia bez strza³u s¹ z forehand'u).
Aby zaserwowaæ nale¿y wcisn¹æ „dó³" — pi³ka zacznie podskakiwaæ. Teraz „strza³" (lub nie) w zale¿noœci od tego, w któr¹ stronê ma polecieæ pi³ka. Pozostaje wcisn¹æ „lewo" lub „prawo" — wybraæ si³ê uderzenia. Przycisku „góra" u¿ywa siê tylko do wysokich pi³ek wystawionych przez przeciwnika. Dok³adniejsze ustalenie kierunku lotu pi³ki zale¿y od momentu uderzenia w ni¹. Im wczeœniej uderzysz, tym trudniejsz¹ do odebrania sytuacjê ma przeciwnik.
Na pierwszym poziomie trudnoœci gra toczy siê wolno i jest ma³o urozmaicona. Im wy¿szy poziom, tym szybciej lata pi³ka i tym trudniej j¹ odebraæ. Po wygranej na pi¹tym poziomie trudnoœæ nie wzrasta, a gra jest kontynuowana.
Oprócz normalnej punktacji (0-11 punktów) graj¹cy otrzymuj¹: za odbicie — dziesiêæ punktów i za skuteczne œciêcie — piêæset punktów. Do tego doliczane s¹ premie za przejœcie na wy¿szy poziom trudnoœci. Dziesiêæ najlepszych wyników jest pamiêtanych wraz z inicja³ami ich zdobywców.
Gra  jest   uzupe³niana   bardzo   ró¿norodnymi i efektownymi dŸwiêkami. Owacje i stukot pi³ki o stó³ brzmi¹ bardzo naturalnie. Komputer: Spectrum 48k/+, Commodore 64/128
(mp)
uur	
0 ANGLI	:! != !! •   ;\C   l fi
	
	i fi i
55	
Tym razem coœ dla zwolenników ³amania g³owy. Pierwszy raz mo¿esz zagraæ bez joysticka!
W podziemnym bunkrze, w centrum Londynu operatorki przesuwaj¹ po mapie po³udniowej Anglii sylwetki samolotów. Mo¿na pomyœleæ, ¿e to jakaœ zabawa, gdyby nie wyraz skupienia i powagi na twarzach wszystkich obecnych. Jesteœ w Dowództwie Lotnictwa Myœliwskiego — Fighter Command, sk¹d kieruje siê powietrzn¹ obron¹ Londynu. Oficerowie i radiooperatorzy patrz¹ na Ciebie oczekuj¹c rozkazów. Odebrany przed chwil¹ raport wywiadu mówi, ¿e z lotnisk francuskich wyruszy³a kolejna wyprawa bombowa na Londyn. Dysponuj¹c dziewiêædziesiêcioma samolotami w dziewiêciu dywizjonach musisz uniemo¿liwiæ Niemcom zbombardowanie stolicy. Nie jest to ³atwe. Twoje samoloty maj¹ ograniczony zapas paliwa i musz¹ je co pewien czas uzupe³niaæ. Dok³adne po³o¿enie wroga jest nieznane, masz tylko czêœciowe dane z meldu-
nków wywiadu. A przede wszystkim niemieckich samolotów jest znacznie wiêcej.
Grafika jest prosta — niemal symboliczna, lecz w tej grze nie ma to znaczenia. Masz przed sob¹ mapê po³udniowej Anglii z naniesionymi lotniskami swoich dywizjonów. Wyœwietlane s¹ na niej symbole wskazuj¹ce po³o¿enie dywizjonów Twoich i przeciwnika. W dolnej czêœci ekranu pojawiaj¹ siê meldunki i Twoje rozkazy, z prawej strony znajduje siê zegar i aktualny stan Twoich dywizjonów. Wszystkie polecenia przekazujesz z klawiatury zakodowanymi symbolami. Je¿eli zapomnisz kodów, uratuje Ciê naciœniêcie klawisza „K". A teraz rozkazuj — wrogie eskadry ju¿ nadlatuj¹.
Komputer: ZX Spectrum 48K/^ 64/128, Atari 800XL/130XE
Commodore
(wz)
L. i ,
/
KRÓLOWA GIER!
— Przedstaw siê czytelnikom Bajtka
— Mam 12 lat, nazywam siê Joanna Roszkowska, chodzê do szko³y podstawowej nr 164 w Warszawie.
— Od kiedy interesujesz siê grami komputerowymi?
— Jeden z moich kolegów dosta³ rok temu ZX-Spec-trum i pozwala³ mi czasem pograæ. Mam równie¿ wujka informatyka, który ma Amstrada i du¿y wybór gier.
— Czy jesteœ stal¹ czytelniczk¹ Bajtka ?
— Czytam Bajtka je¿eli uda mi siê go kupiæ. Wiêkszoœæ gier zamieszczanych na liœcie przebojów jest mi znana i dlatego biorê udzia³ w typowaniu z³otej dziesi¹tki gier Bajtka.
— Czy masz w³asny komputer?
— Niestety nie, ale rodzice obiecali kupiæ mi go na Gwiazdkê.
- Do redakcji Bajtka przychodzê tysi¹ce listów, ale wiêkszoœæ od ch³opców. W listopadzie wœród kilkunastu tysiêcy listów, które nadesz³y by³o tylko 13 listów od dziewcz¹t. Ty zosta³aœ wylosowana spoœród nich i dlatego otrzyma³aœ ten zaszczytny tytu³ KRÓLOWEJ GIER. Cieszysz siê?
— Tak. bardzo. Bajtkow¹ listê przebojów i rubrykê „Co jest grane" czytam z ogromn¹ chêci¹ i zainteresowaniem. Lubiê te¿ graæ na komputerze i strasznie siê cieszê ¿e to mnie wylosowano.
(B)
BAJTEK 1/87    19
KLAN AMSTRAD-SCHNEIDER
AMSTRAD SCHNEIDER
PCW8256 PCW8512
Po sukcesie modeli CPC464 i CPC 6128 firma AMSTRAD postanowi³a zaatakowaæ rynek maszyn przeznaczonych wy³¹cznie do pracy. Opracowa³a komputer PCW8256 — 8 jest numerem serii komputerów (poprzednie oznaczenia: 4-wersia taœmowa. 6-wersja dyskowa), a liczba 256 wskazuje na pojemnoœæ pamiêci — 256KB. PCW oznacza „Personal Computer/Wordproce-sor". Umieszczenie w nazwie s³owa „wordprocesor" nie jest przypadkiem — g³ównym zastosowaniem tego komputera ma byæ przetwarzanie tekstów. Poza tym u¿ytkownik ma do dyspozycji system operacyjny CP/M+ (wersja 3) i Dr. LOGO.
¦ ORGANIZACJA SYSTEMU
Standardowy zestaw PCW8256 zawiera:
— monitor z jednostk¹ centraln¹ i stacj¹ dysków
— klawiaturê
— drukarkê
— dyski systemowe, instrukcje i kilka drobiazgów
Inna ni¿ w poprzednich modelach jest kolorystyka — jasno kremowa obudowa sprawia przyjemniejsze wra¿enie ni¿ szaroœci modeli CPC.
¦ JEDNOSTKA CENTRALNA
Ptyta komputera zawiera tylko kilkanaœcie uk³adów scalonych. Osiem z nich to pamiêci RAM (256KB), pozosta³e s³u¿¹ do sterowania ekranem, stacj¹ dysków i drukark¹. PCW nie ma pamiêci ROM — jedyn¹ rzecz¹, któr¹ potrafi zrobiæ po w³¹czeniu do sieci jest wczytanie z dysku systemu operacyjnego.
Po otwarciu obudowy monitora mo¿na zobaczyæ 8 wolnych podstawek pod uk³ady scalone — jest to miejsce na wstawienie dodatkowych 256KB pamiêci RAM. Czêœæ wbudowanej pamiêci RAM (112KB) s³u¿y jako tzw. RAM-DISC, czyli symuluje pracê dodatkowej stacji dysków o bardzo szybkim dostêpie.
¦ STACJA DYSKÓW
W monitor wbudowana jest stacja dysków 3" o zapisie jednostronnym i pojemnoœci ok. 180KB. Mo¿liwa jest rozbudowa komputera przez wstawienie dodatkowej stacji FD2 (zapis dwustronny ze zwiêkszon¹ gêstoœci¹ — pojemnoœæ ok. 720KB). Pod³¹czenie jest bardzo proste — producent umieœci³ w obudowie nie tylko kabel do drugiej stacji, ale nawet œrubki do przykrêcania jej w przygotowanej wnêce.
¦ KLAWIATURA
Klawiatura zawiera 82 klawisze, z czego czêœæ jest dostosowana do programu edycji tekstów. Wydzielony jest dodatkowy blok klawiszy — funkcyjnych, numerycznych'i steruj¹cych kursorem.
¦ EKRAN
Rozmiary ekranu s¹ o oko³o 50% wiêksze ni¿ w innych komputerach — 32 linie po 90 znaków Tekst jest bardzo dobrze czytelny, jedynie w niektórych egzemplarzach brzegi obrazu s¹ nieco rozmyte. Ró¿nice w wielkoœci ekranu doskonale widaæ w programach u¿ywaj¹cych standardowych rozmiarów — 24 linie po 80 znaków — ma siê wra¿enie, ze s¹ one wciœniête gdzieœ w k¹t monitora.
¦ DRUKARKA
Podobnie jak jednostka centralna drukarka nie zawiera pamiêci ROM — nawet generatora znaków. Oznacza to, ¿e jest w ca³oœci sterowana przez komputer i umie zrobiæ dok³adnie to, co program, który j¹ kontrolce.
dane techniczne:
— prêdkoœæ druku:
90 znaków/sek. przy druku standardowym (Draft Qua-
lity)
30 znaków/sek. przy druku korespondencyjnym (Near Letter Ouality)
— taœma barwi¹ca 13 mm w kasecie — wystarcza na oko³o 2 min znaków przy druku standardowym Kasety z taœm¹ s¹ bardzo kosztowne ale przy odrobinie zdolnoœci manualnych mo¿na do kasety w³o¿yæ zwyk³¹ taœmê od maszyny do pisania
— mo¿liwoœæ drukowania na pojedynczych kartkach i na papierze ci¹g³ym o szerokoœci do 25 cm. Do drukarki
mo¿na dostawiæ „traktor" — urz¹dzenie do przesuwania papieru z perforacj¹. W przypadku drukowania na pojedynczych kartkach drukarka pó³automatycznie podaje strony — nale¿y jedynie w³o¿yæ kartkê i nacisn¹æ dŸwigniê, a drukarka sama wci¹gnie papier i ustawi go na pocz¹tku strony — podczas pracy z systemem CP/M drukarka zachowuje siê tak, jakby by³a EPSON FX80 i akceptuje te same kody kontrolne.
¦ PODSTAWOWE OPROGRAMOWANIE
1. LocoScript
Jest to program do edycji tekstów steruj¹cy prac¹ ca³oœci systemu. LocoScript jest bardzo dobrze zintegrowany z pozosta³ymi elementami komputera — klawiatura zawiera specjalne klawisze do jego obs³ugi, mo¿liwoœci drukarki s¹ wiêksze ni¿ podczas pracy z systemem CP/M i oczywiœcie ca³y ekran jest wykorzystany. Program jest sterowany przez „MENU" — specjalne okna z list¹ komend uaktywnianych klawiszami funkcyjnymi. Edytor oferuje kilka krojów liter, rozmiarów druku (od 10 do 17 znaków/cal), druk podwójnei szerokoœci, wyt³uszczony, pochylony, potêgi i indeksy, podkreœlenia (tylko wyrazów b¹dŸ ca³ych linii) i zmienn¹ gêstoœæ pionow¹ druku (od 8 linii/cal z odstêpem 1/2 linii do 6 linii/cal z odstêpem 3 linii. Istnieje mo¿liwoœæ definiowania nag³ówków i stopek, drukowania numerów stron, rozró¿niania stron parzystych i nieparzystych, pierwszej, œrodkowych i ostatniej. W LocoScript wbudowanych jest wiele dodatkowych znaków — niestety bez mo¿liwoœci definiowania w³asnych, co wyklucza stosowanie polskich liter.
W porównaniu do innych edytorów nieco ograniczone s¹ mo¿liwoœci wyszukiwania i zamiany fragmentów tekstu oraz operacje na blokach.
Cennym udogodnieniem jest to, ¿e w czasie gdy jeden teskt siê drukuje mo¿na ju¿ pracowaæ nad innym — jednoczesne wykorzystanie edytora i drukarki spowalnia dzia³anie obydwu, ale nie blokuje pracy komputera.
LocoScripfu mo¿na u¿ywaæ tak¿e jako inteligentnej maszyny do pisania — w trybie „Direct Printing" drukowany jest ka¿dy paragraf wprowadzony z klawiatury — nie trzeba korzystaæ ze stacji dysków, wprowadzaæ tekstu, zapisywaæ go i dopiero póŸniej drukowaæ.
2. Mallard BASIC
Jest to prawdopodobnie ostatnie osi¹gniêcie w dziedzinie interpreterów BASIC-a dla komputerów 8 bitowych. Pracuj¹c z Mallard'em mo¿na odnieœæ wra¿enie, ¿e BASIC jest doskona³ym jêzykiem programowania. Wynika to z 2 rzeczy. Po pierwsze — jest on bardzo szybki (jak na interpreter), a po drugie — ma wbudowane mechanizmy dostêpu do dysków, których móg³by mu pozazdroœciæ TURBO PASCAL. U¿ytkownik ma mo¿liwoœæ wyboru czy plik na dysku bêdzie traktowany jako zbiór sekwencyjny, in-deksowo-sekwencyjny, czy zbiór o dostêpie bezpoœrednim. Dodatkowo mo¿na u¿ywaæ tzw. kluczowanego dostêpu do dysku — rekord danych mo¿e byæ odszukany przez zawartoœæ jednego z pól!
3. Dr. LOGO
Jest to ten sam interpreter jêzyka, który u¿ytkownicy CPC6128 znaj¹ jako LOG03 — ³¹cznie z jego wszystkimi niedoci¹gniêciami. Dla przypomnienia — akceptuje wy³¹cznie skrócone wersje komend (FD a nie FORWARD) i ma czasami k³opoty z ¿ó³wiem — jego obraz pozostaje na ekranie mimo, i¿ sam ¿ó³w poszed³ ju¿ gdzie indziej.
4. GSX
Graphic System Extension — graficzne rozszerzenie systemu (CP/M) jest zbiorem procedur i programów pozwalaj¹cych wykorzystywaæ grafikê pod kontrol¹ systemu CP/M. Niestety nic wiêcej o tym bardzo u¿ytecznym pakiecie nie wiadomo, gdy¿ nie jest on opisany w instrukcji obs³ugi, a dobre podrêcznki GSX jeszcze do nas nie dotar³y.
5. Oprogramowanie systemowe CP/M
Na dyskach systemowych poza wymienionymi ju¿ programami u¿ytkowymi znajduje siê jeszcze kilkanaœcie innych. Czêœæ z nich jest wartoœciowa (programy zarz¹dzaj¹ce przetwarzaniem danych i wspó³prac¹ z urz¹dzeniami zewnêtrznymi), a czêœæ prawie zupe³nie bezu¿yteczna — tak jak assemblery, disassemblery, programy uruchomieniowe, które s¹ dostosowane do procesora 8080, a Z80 na którym zbudowany jest komputer ma znacznie rozszerzon¹ listê rozkazów.
¦ INSTRUKCJA OBS£UGI
Wraz z komputerem u¿ytkownik dostaje dwa tomy instrukcji:
1. Opis CP/M, LOGO i edytora LocoScript
2. Opis BASIC-a
20     RAJTF.TC 1 /R7
Podrêczniki napisane s¹ zrozumiale i zawieraj¹ wiêkszoœæ potrzebnych informacji (poza opisem systemu GSX). W razie k³opotów z CP/M mo¿na obejrzeæ duzy zbiór (75KB) HELP umieszczony na 4 stronie dysków systemowych, gdzie opisane s¹ doœæ dok³adnie programy u¿ytkowe CP/M.
Pewne zdziwienie budzi objêtoœæ podrêcznika edytora — oko³o 150 stron. AMSTRAD reklamuje LocoScript jako program profesjonalny, ale prosty w obs³udze. Jest to prawda, ale dopiero po pewnym czasie — na pocz¹tku o.edzi siê przed komputerem i nie bardzo wiadomo co tam skacze po ekranie.
¦ DOSTÊPNE OPROGRAMOWANIE
W grê wchodz¹ praktycznie tylko programy pracuj¹ce pod kontrol¹ CP/M + . W Polsce dostêpne s¹: TURBO PASCAL, dBASE II (nawet w jêzyku polskim) i niemieckojêzyczna wersja programu kalkulacyjnego MULTIPLAN. Na inne rzeczy prawdopodobnie trzeba bêdzie jeszcze poczekaæ. Dotychczas nie ma jeszcze zainstalowanych polskich znaków ani na ekranie, ani na drukarce.
¦ PCW8512
Model PCW8512 ma rozbudowan¹ pamiêæ operacyjn¹ (do 512 KB) i wbudowan¹ drug¹ stacjê dysków — dwustronna o wiêkszej gêstoœci zapisu i pojemnoœci oko³o 720 KB. Wiêkszoœæ „nowej" pamiêci RAM u¿yta jest do rozszerzenia RAMDISC-u. Praca na wiêkszej maszynie jest wygodniejsza — dla wiêkszoœci programów ograniczeniem rozmiaru danych jest pojemnoœæ dyskietki, a gdy mamy tylko jedn¹ stacjê to musz¹ siê na niej zmieœciæ jednoczeœnie stare dane (przed przetworzeniem), nowe dane (po przetworzeniu) i sam program, który je przetwarza. Na przyk³ad u¿ywaj¹c programu WORDSTAR mo¿emy operowaæ na zbiorach o wielkoœci do 50 KB, a w przypadku posiadania 2 stacji dysków sam program jest na dysku w stacji A, dane natomiast mo¿na umieœciæ na dysku w stacji B: i zamiast 50 KB mamy prawie 800.
¦ DODATKOWE URZ¥DZENIA ZEWNÊTRZNE
AMSTRAD produkuje dodatkowe stacje dysków FD2 i ³¹cze szeregowe RS232C (wraz z emulatorem terminala VT52). Inne firmy oferuj¹ stacje dysków 5 1/4", ³¹cza równoleg³e do drukarek i modemy. Firma Northen Computers produkuje dostosowane do AMSTRAD-a dyski typu WINCHESTER nazwane AMSTORE o pojemnoœci 20 MB. Mo¿na je ³¹czyæ w sieæ (do 120 dysków) lub do jednego dysku mo¿na pod³¹czyæ kilka komputerów. Jedyn¹ wad¹ tego urz¹dzenia jest bardzo wysoka cena kilkakrotnie przewy¿szaj¹ca ceny podobnych dysków do komputerów IBM czy ATARI 520ST.
¦ GRY
Nawet komputer przeznaczony wy³¹cznie do pracy powinien w razie potrzeby staæ siê towarzyszem zabawy. Ka¿dy czasami lubi sobie pograæ, a i komputerowi coœ od ¿ycia siê nale¿y. Pojawi³y siê pierwsze gry przygodowe (Hitch-Hikers Guide To Galaxy), programy szachowe i bryd¿owe, a nawet gry zrêcznoœciowe z niez³¹ grafik¹.
Komputer jest wart !yle. Ile jego oprogramowanie. W taj chwilHlistopad 86) brak |est oorogramowania spe³niaj¹cego podstawowe wymaganie — dostêpnoœæ polskich znaków i trudno jest polecaæ PCW8256 jako dobry komputer. PCW nie ma ROM-u i ca³¹ pamiêæ przechowuje na dyskach — równie¿ generatory znaków dla ekranu i drukarki oraz komunikaty systemowe Nic wiêc nie stoi na przeszkodzie by polskie znaki by³y mo¿liwe do drutrowania, a nawet by ca³y CP/M i LocoScript py³y przet³umaczone na jêzyk nolski Dowodem na to jest niemiecka wersja — Schneidei PCW3256 — wszystkie podstawowe programy s¹ w jêzyku niemieckim, klawiatura równie¿ dostosowana do wymagañ niemieckich norm. niektóre ze znaków narodowych umieszczone s¹ bezpoœrednio na klawiszach.
Jest wiêc szansa, ¿e przybêdzie nowy dobry komputer, który bêdzie móg³ wspomagaæ gospodarkê magazynow¹ w niezbyt du¿ych przedsiêbiorstwach (³atwoœæ tworzenia baz danych), prowadziæ ksiêgowoœæ, a tak¿e byæ idealnym narzêdziem pracy dla pisarzy, t³umaczy i innych osób czêsto u¿ywaj¹cych maszyny do pisania
Darek Wichniewicz
Co piszczy pod klawiatur¹?
SPOSÓB ZAPISYWANIA W PAMIÊCI PROGRAMU W BASIC-u:
Ka¿d¹ instrukcjê interpreter BASIC-a oznacza kodem, zwanym TOKEN. System taki pozwala efektywniej wykorzystaæ g³ówn¹ pamiêæ minikomputera, poniewa¿ jedno-bajtowy TOKEN zajmuje znacznie mniej miejsca ni¿ dowolna instrukcja BASIC-a. Z tego te¿ powodu nie mo¿na u¿ywaæ nazw instrukcji do oznaczania zmiennych.
Jedna linia BASIC-a zajmuje w pamiêci minimum 6 bajtów: dwa do oznaczenia numeru w linii, dwa do oznaczenia d³ugoœci linii, ieden dla rozdzielenia i minimum jeden do oznaczenia instruxc|i. BASIC zaczyna gromadziæ linie programu pocz¹wszy od adresu 368 (dziesiêtnie). Rozpatrzmy na przyk³adzie, jak to siê odbywa.
Wpiszmy nastêpuj¹c¹ liniê: 1990 PRINT „POTOP" a nastêpnie w trybie bezpoœrednim.
FOR 1 = 368 TO 385:PRINT I;" ";PEEK (l):NEXT I Otrzymujmy ci¹g liczb, który opisuje poni¿sza tabela:
Adres	Wartoœæ	Znaczenie
368	14	Ni¿szy bajt d³ugoœci linii
369	0	Wy¿szy bajt d³ugoœci linii
370	198	Ni¿szy bajt numeru linii
371	7	Wy¿szy bajt numeru linii
372	191	Kod instrukcji PRINT
373	32	Kod ASCII spacji
374	34	<od ASCII cudzys³owu "
375	80	Kod ASCII litery P
376	79	Kod ASCII litery O
377	84	Kod ASCII litery T
378	79	Kod ASCII litery O
379	80	Kod ASCII litery P
380	34	Kod ASCII cudzys³owu "
381	0	Kod rozdzielenia (separaqi)
Wormacja o d³ugoœci iinn uzyskiwana jest z dwocn bajtów zgodnie z formu³¹:
NI¯SZY BAJT + (256 * WY¯SZY 3AJT)
D³ugoœæ naszej linii wynosi wiêc 14+ (0 * 256) = 14. co oznacza, ¿e tyie miejsc zajmuje ona w pamiêci. W podobny sposób otrzymujemy informacjê o numerze linii
198 - (256 * 7) = 1990
Ponewaz ju¿ wiemy pod jakim adresem zosta³a umieszczona instrukcja PRINT. mo¿emy i¹ zamieniæ na inn¹, korzystaj¹c bezpoœreanio z instrukcji POKE pisz¹c:
POKE 372,197 Wpiszmy teraz LIST i zobaczmy, co siê zmieni³o. Linia ma postaæ:
1990 REM „POTOP" poniewa¿ liczba 197 w mstrukc|i POKE jest kodem instrukcji REM.
Zobaczmy teraz, w |aki sposób przechowywane s¹ zmienne w programie. Pos³u¿ymy siê w tym celu prostym podstawieniem pisz¹c:
10 ABC = 20
i w trybie bezpoœrednim ponownie: FOR 1 = 368 TO 385:PRINT I;" ";PEEK(I):NEXT I
Znaczenie uzyskanych na ekranie liczb podaje tabela:
Adres	Wartoœæ	Znaczenie
368	14	Ni¿szy bajt d³ugoœci linii
369	0	Wy¿szy bajt d³ugoœci linii
370	10	Ni¿szy ba|t numeru linii
371	0	Wy¿szy bajt numeru linii
372	13	WskaŸnik zmiennej numerycznej
373	7	D³ugoœæ nazwy zmiennej + 4
374	0	Kod separacji
375	65	Kod ASCII pierwszego znaku nazwy zmiennej (w przyk³adzie A)
376	66	Kod ASCII drugiego znaku nazwy zmiennej (litera B)
377	195	128 + kod ASCII ostatniego znaku nazwy zmiennej (litera C)
378	239	kod (token) znaku =
379	25	WieikoœC zmiennei
380	20	Wartoœæ zmiennej
Liczba 13 pod adresem 372 |est kodem wskazuj¹cym na wyst¹pienie zmiennej numerycznej. W przypadku zmiennei alfanumerycznej do pamiêci wpisana by³aby wartoœæ 3. Pod adresami od 375 do 377 zakodowana zosta³a nazwa zmiennej przez wpisanie kodów ASCII odpowiadaj¹cych znakom u¿ytym w nazwie. Jedynie ostatni znak nazwy zmiennej reprezentowany jest w pamiêci przez sumê kodu litery C i 128 (67 + 128 = 195). Liczba 239 pod adresem 378 jest kodem (token) znaku =, innym ni¿ jego kod w ASCII. W ten sposób minikomputer „wie", ¿e znak = nie jest czêœci¹ sk³adow¹ nazwy zmiennej. Liczba 25 pod adresem 379 okresia wieikoœc zmiennej w zale¿noœci od przedzia³ów jej wartoœci, co ilustruje nastêpuj¹ca tabela
Liczba    Wartoœæ zmiennej i kod jej d³ugoœci
15 16
Wartoœæ zmiennej = 1, bez kodowania Wartoœæ zmiennej =2 oez kodowania
23 25
26
3i
Wartoœæ zmiennei =9, bez kodowania
Wartoœæ zmiennej zawarta w przedziale od 10 do 255 Kod dla jednego bajta
Wartoœæ zm.ennej zawarta w przedziale od 256 do 65535, kod dla dwóch oa|tów
Wadoœæ zmiennej przekraczaj¹ca 65535 lub nieca³kowita, kod dla piêciu bajtów wed³ug wzoru:
wartoœæ = (2r(b5-145) * (65535+ (b2/128) +
(b3x2) + ;b4x512) +
(Dl/32800)) gdzie b1 ,...b5 reprezentuj¹ wartoœci obecne pod piêcioma adresami s³u¿¹cymi do kodowania zmiennej
W przypaaku. gdy zmienna jest tob¹ ujemn¹, kod (token) znaku — (245) wystêpuje zaraz po kodzie (token) znaku
Wojciech Zió³ek
BAJTEK1/87    21
PRZED EKRANEM
TYPOWE ZASTOSOWANIE
W poprzednich numerach „Bajtka" pisa³em o kilku dziedzinach dostêpnych, dziêki specjalnemu oprogramowaniu nie tylko dla informatyków. Krótko przypomnê: systemy baz danych pozwalaj¹ przechowywaæ i bardzo szybko przetwarzaæ du¿e iloœci informacji, formularze elektroniczne szybko i bezb³êdnie wykonuj¹ zawi³e rachunki, wreszcie edytory tekstów u³atwiaj¹ i przyœpieszaj¹ przygotowanie wszelkich maszynopisów. Wydaje siê, ¿e ka¿de z wymienionych udogodnieñ adresowane jest do innej grupy odbiorców. Jest jednak bardzo du¿a dziedzina, w której wszystkie znajduj¹ zastosowanie równoczeœnie.
Przyjrzyjmy siê dzia³alnoœci dowolnego przedsiêbiorstwa. Musi ono gromadziæ dane, np. kartoteka pracowników, czy lista klientów lub dostawców. Dane te s¹ przetwarzane na ró¿ne sposoby, w szczególnoœci bior¹ udzia³ w obliczeniach, które w wielu wypadkach najproœciej zrobiæ w oparciu o formularz elektroniczny. I odwrotnie, wyniki obliczeñ warto czasami przechowywaæ w bazach danych. Firma prowadzi korespondencjê, zdarza siê tak, ¿e jedno pismo trzeba wys³aæ do okreœlonej grupy, lub zgo³a wszystkich klientów. Przyjemnie (i oszczêdnie) jest, jeœli wystarczy napisaæ przy pomocy edytora treœæ pisma, a komputer wydrukuje odpowiedni¹ liczbê egzemplarzy, oczywiœcie do ka¿dego dopisuj¹c nazwisko i adres z listy zapisanej w bazie danych. Ale ¿eby móg³ to zrobiæ musimy zapewniæ wymianê informacji miêdzy edytorem a t¹ baz¹.
Dodatkowym plusem takiego systemu korespondencji jest to, ¿e ka¿dy adresat otrzymuje nie kserokopiê z dopisanym d³ugopisem swoim nazwiskiem, ale list, który wygl¹da tak jakby by³ pisany specjalnie do niego. Pamiêtajmy, ¿e dzisiejsze drukarki potrafi¹ pisaæ naprawdê ³adn¹ czcionk¹ i do tego na papierze bez perforacji, np. na kartkach z nadrukiem firmowym. Analogiczna potrzeba mo¿e powstaæ, gdy pisz¹c sprawozdanie chcemy podaæ zestawienie lub wykres danych o naszej dzia³alnoœci. Przyk³ady mo¿na by mno¿yæ, a wniosek jest jeden — ró¿ne programy u¿ytkowe musz¹ mieæ mo¿liwoœæ wymiany pomiêdzy sob¹ danych. Jest to doœæ trudne, bo zwykle dane s¹ przechowywane w postaci zakodowanej, a ró¿ne firmy opracowa³y ró¿ne formaty kodowania. (Pisz¹c kodowanie nie mam na myœli utajniania, tylko szczególne metody zapisu, opracowane z myœl¹ o sprawnym dzia³aniu programu. Oczywiœcie u¿ytkownik widzi dane zawsze w postaci jawnej.) ¯eby zwiêkszyæ atrakcyjnoœæ swoich wyrobów, producenci wyposa¿aj¹ je w programy konwersji danych z innych systemów. Np. dBASE III PLUS (najnowsza wersja bardzo znanej bazy danych, dostêpna na IBM PC), potrafi zapisywaæ i odczytywaæ dane w formatach wszystkich szeroko rozpowszechnionych systemów. Jednak ¿eby z tego skorzystaæ trzeba przynajmniej wiedzieæ, ¿e s¹ ró¿ne formaty zapisu danych, a nie wszystkich to interesuje.
Innym rozwi¹zaniem jest, a w³aœciwie by³o, wypuszczanie na rynek zestawu programów, np. edytor, formularz, baza danych i pakiet graficzny (do wizualizacji wyników — wykresy ko³owe, s³upkowe itd.). Wszystkie programy takiej „rodziny" by³y przygotowane do wspó³pracy miêdzy sob¹.
Zwyciê¿y³o (jak dot¹d) inne rozwi¹zanie. Jak zwykle najprostsze — przynajmniej z punktu widzenia u¿ytkownika. Rozwi¹zaniem tym s¹ PAKIETY ZINTEGROWANE (ang. integrated software). Pakiet taki stawia do dyspozycji u¿ytkownika wszystkie omówione mo¿liwoœci, po³¹czone w jeden sy-
stem, z jêzykiem komunikacji w miarê mo¿noœci jednolitym dla wszystkich podsystemów. Najczêœciej s¹ to programy sterowane przez menu, co pozwala na ich eksploatacjê bez powa¿nego przygotowania informatycznego. Techniczn¹ stronê przekazywania informacji miêdzy sk³adnikami systemu pakiet bierze na siebie, dla u¿ytkownika zostawiaj¹c sprawy koncepcyjne, co wydaje siê byæ w³aœciwym podzia³em pracy miêdzy cz³owiekiem a maszyn¹.
W sk³ad pakietu zintegrowanego wchodz¹ czêsto ró¿ne dodatkowe elementy, o których do tej pory nie wspominaliœmy. Podstawowy z nich to modu³ telekomunikacji, który za poœrednictwem najzwyklejszej linii telefonicznej i modemu zapewnia ³¹cznoœæ naszego komputera ze œwiatem zewnêtrznym, czyli na przyk³ad, innymi komputerami, publicznymi bazami danych itp. (Modem jest to specjalne urz¹dzenie do kodowania danych i ich przesy³ania liniami telekomunikacyjnymi, oczywiœcie mo¿e on pracowaæ na zmianê jako nadajnik i jako odbiornik sygna³ów). Dziêki temu mo¿na np. na bie¿¹co otrzymywaæ najnowsze notowania gie³dowe. Mo¿na te¿ w³¹czyæ siê w sieæ tzw. „poczty elektronicznej". Zamiast drukowaæ listy na drukarce, wk³adaæ do kopert i wrzucaæ do skrzynki, wysy³amy ich treœæ do sieci telekomunikacyjnej. Sieæ przesy³a je do urzêdu pocztowego, który jest najbli¿ej adresata, tam s¹ drukowane, wk³adane do kopert i dostarczane na miejsce.
Innym udogodnieniem jest kalendarz, w którym mo¿emy notowaæ daty i godziny spotkañ, po to aby komputer przypomina³ nam o nich. Niestety system ten nie sprawdza siê jeœli ktoœ jest tak roztargniony, ¿e zapomina w³¹czyæ komputer.
Tak jak wiêkszoœæ powa¿nych systemów, pakiety sprzedawane s¹ wraz z programem, który pozwala na ich instalacjê, to znaczy na dostosowanie do posiadanego typu komputera i konfiguracji urz¹dzeñ zewnêtrznych. Nie ³udŸmy siê jednak, ¿e system przeznaczony dla IBM PC da siê zainstalowaæ na SPECTRUM — wszystko ma swoje granice.
Nie znam ¿adnego pakietu zintegrowanego dzia³aj¹cego na mikrokomputerze maj¹cym 64K pamiêci operacyjnej. Na Commodore C-128 jest zrealizowany taki system, nazywa siê JANE. Najbardziej popularne s¹ FRAMEWORK i SYMFONY, dzia³aj¹ce na IBM PC i pochodnych.
Zastosowanie mikrokomputerów z w³aœciwym oprogramowaniem do wspomagania zarz¹dzania niewielkim przedsiêbiorstwem, czy prowadzenia biura mo¿e zaoszczêdziæ wiele czasu i pracy. Korzyœci s¹ tak ewidentne i powszechnie dostrzegane, ¿e mo¿emy dziœ mówiæ o typowym zastosowaniu profesjonalnego sprzêtu mikro „do prowadzenia interesów".
W naszym kraju zastosowania tego typu napotykaj¹ kilka barier. Pierwsza z nich to oczywiœcie sprzêt. Zak³ady Elwro obiecuj¹ wyprodukowaæ w 1987 r. oko³o stu!!! mikrokomputerów Elwro 800, kompatybilnych z IBM PC. Na drukarkê z B³onia czeka siê oko³o dwóch lat. Sprzêt importowany, lub produkowany przez firmy polonijne (czytaj: zmontowany w Polsce z importowanych podzespo³ów) jest doœæ drogi. Tak¿e telekomunikacjê mo¿na uznaæ za opowiastki fantastyczno-naukowe, bior¹c pod uwagê stan naszej sieci telefonicznej. Brakuje tak¿e materia³ów np. dyskietek oraz literatury fachowej.
Nastêpn¹ przeszkod¹ jest brak oprogramowania, lub jak kto woli powszechna nieznajomoœæ jêzyka angielskiego, którym operuje to oprogramowanie, które jest dostêpne. Przeszkoda ta jest likwidowana na kilka sposobów, miêdzy innymi przez zatrudnianie fachowców informatyków, co w zasadzie zaprzecza podstawowej idei nowoczesnego oprogramowania u¿ytkowego, ale w pocz¹tkowym etapie jest czêsto niezbêdne, gdy¿ istnieje bariera trzecia psychologiczna.
Dla wiêkszoœci ludzi w naszym kraju komputer jest czymœ nowym i dlatego uwa¿aj¹ oni, ¿e nie s¹ w stanie opanowaæ go samodzielnie (Ty, Drogi Czytelniku, nie bêdziesz mia³ tych problemów i to jest pocieszaj¹ce).
Mimo wszystkich wymienionych trudnoœci mikrokomputery s¹ u¿ywane w administracji i zarz¹dzaniu, a liczba wdro¿eñ systematycznie roœnie. Oczywiœcie jest jeszcze wielu ludzi, którzy uwa¿aj¹, ¿e typowe zastosowanie mikrokomputerów to gry. Myœlê, ¿e nale¿y im ¿yczyæ du¿o szczêœcia, bo mo¿e im byæ bardzo potrzebne.
Andrzej Pilaszek
Filmowa opowieœæ fantastyczna „Pan Kleks w Kosmosie" jest baœni¹ opowiedzian¹ przez komputer. Nawi¹zuj¹c do poprzednich filmów o przygodach Pana Kleksa autorzy „Kleksa w Kosmosie" staraæ siê bêd¹ wyjœæ na przeciw ogromnej fali zainteresowania komputeryzacj¹ naszego ¿ycia, gwa³townym rozwojem zastosowania maszyn cyfrowych i odkryciami na drodze poznania przestrzeni pozaziemskiej. „Pan Kleks w Kosmosie" bêdzie wiêc baœni¹ cywilizacyjn¹ — ten typ opowieœci fantastycznej odpowiada najbardziej — zdaniem autorów filmu — wra¿liwoœci i wyobraŸni wspó³czesnej, m³odej widowni. Ostatni Rezerwat Przyrody, Planeta Mango, Szko³a Przysz³oœci oto niektóre tylko z miejsc w których toczyæ siê bêdzie akcja filmu. W³aœnie z wyobra¿eniem Szko³y Przysz³oœci zwi¹zany by³ konkurs na projekt „robota klasowego" og³oszony przez re¿ysera filmu w Teleranku. Na konkurs nades³ano kilka tysiêcy rysunków i projektów nazw.
Poniewa¿ wiêkszoœæ robotów zosta³a nazwana „Bajtek", redakcja postanowi³a ufundowaæ nagrodê specjaln¹ w tym konkursie Autorowi najlepszej pracy zostanie wrêczony magnetofon do mikrokomputera (data recorder). Film „Pan Kleks w Kosmosie" powstaje w Zespole Filmowym „Zodiak". Bêdzie to film muzyczny — us³yszymy w nim czternaœcie nowych piosenek — muzykê do filmu pisze kompozytor Andrzej Korzyñski. Scenariusz i re¿yseria filmu — Krzysztof Gradowski, a w rolach g³ównych zobaczymy m.innymi: Piotra Fronczewskiego, Janusza Gajosa, Emiliana Kamiñskiego, Henryka Bistê a tak¿e Marylê Rodowicz i Andrzeja Rosiewicza i wielu innych ulubieñców m³odej widowni.
*L» f
Bajtek wita Pana Kleksa
u
fr-
ROZTERKI GERDA PAULMANA-
Dwudziestopieciotysiêczne Vlotho roz³o¿one na malowniczych zalesionych wzgórzach otaczaj¹cych Wezerê nie wyró¿nia³oby siê niczym specjalnym spoœród tysiêcy jakby wy-cietych z kolorowego obrazka, zadbanych miasteczek Republiki Federalnej, gdyby nie fakt, ^ i¿ do tego pozornie zupe³nie zaspanego miejsca œci¹gaj¹ t³umy m³odzie¿y z ca³ego kraju. Ba. spotkaæ tu mo¿na nawet m³odych z Berlina Zachodnie-ga
Vlotno dos³ownie usiane jest niewielkimi oœrodkami kszta³cenia oferui¹cymi wszystkim chêtnym kilkutygodniowe, czy te¿ kilkudniowe kursy specjalistyczne. Rozpiêtoœæ tematyczna jest ogromna — od seminariów na temat wspó³czesnei literatury polskiej, czy radzieckiej, po parapsychologiê i trening bioenergoterapeutyczny
Jedn¹ z tego typu placówek jest Jugen-dhof Vlotho — czyli Dom M³odzie¿y Vlotho. Jego recepcyjn¹ czêœæ tworzy autentyczny wieiski budynek bogatego gospodarza wzniesiony w latach Rewoluqi Francuskiej Typowa belkowa konstrukcja z ceglanym wype³nieniem zwana u nas, notabene nieprawid³owo „pruskim murem"
Znacznie póŸniej dobudowano supernowoczesne pawilony, internat i sto³ówkê. I tak rozpocz¹³ siê nowy etap w historii tej budowli Rozdzia³ elektroniczno-kompute-i owy
Æwiczenia odbywaj¹ siê w specjalnych pomieszczeniach a doskonale utrzymane, pachn¹ce œwie¿ymi farbami, dawne spichlerze stajnie i garkuchnie s¹ miejscem wieczornych dyskusji przy piwie. Dzia³alnoœæ Jugendhofu finansowana jest po czêœci przez tak zwane zrzeszenie miast i po-
wiatów westfalskiego okrêgu Lippe. Ale dom musi równie¿ na siebie zarabiaæ Zapisuj¹cy siê z wielotygodniowym wyprzedzeniem seminarzyœci, podzieleni na grupy od 12 do 70 osób, musz¹ wiêc op³aciæ swój pobyt we Vlotho. Zdarza siê jednak, ¿e pracodawca specjalnie deleguj¹cy kogoœ do Jugendhofu pokrywa ca³oœæ nale¿noœci
Sta³a ekipa Domu M³odzie¿y nie jest liczna, bowiem jak we wszystkich tego rodzaiu oœrodkach w Republice Federalnej Niemiec, d¹¿y siê do minimalizacji kosztów W podobnej placówce w Bonn wasz reporter spotka³ wyk³adowców z tytu³ami naukowymi ... sprz¹taj¹cych salê, gotuj¹cych posi³ki i zmieniaj¹cych poœciel kursantów. Wspaniale radzili sobie bez etatowych sekretarek, palaczy, portierów, stró¿ów, czy g³ównych ksiêgowych Siedmiu sta³ych lektorów Jugendhofu uzupe³nia od czasu do czasu grupa dwudziestu ekspertów I to ju¿ wszystko. Kuchnia i utrzymanie porz¹dku w jadalni nale¿¹ w du¿ej czêœci do pobieraj¹cych naukê
Ale pora zajrzeæ do gabinetu komputerowego. Gerd Paulman — prowadz¹cy zajêcia, chêtnie odpowiada na ka¿de pytanie pokazuj¹c dziennikarzom swoje elektroniczne królestwo .Pierwszym problemem, z którym siê zetknê po powrocie — mówi wskazuj¹c na æwicz¹cych przy klawiaturach — bêdzie sprawa przekazu. Do domów kultury trafia bardzo ró¿na m³odzie¿ czasami tylko okazjonalnie zainteresowana informatyk¹ Przyid¹. popatrz¹, poiawi¹ siê raz czy dwa razy i zmkai¹. Trzeba me tylko ich zainteresowaæ ale w nies³ychanie skondensowanej formie wprowadziæ w tajniki elektronicznego œwiata, tak. aby po kilku godzinach wyrobili sobie w³aœciwy pogl¹d Aby me czuli siê zagubieni, nawet wtedy, gdy uznaj¹, iz nie |est to dla nich interesuj¹ce
Pytam. |ak nauczyciele w RFN przyjêf inwazjê komputerów na szko³y. Paulman
Komputerowe seminaria we Vlotko pomagaj¹ prze³amaæ lêk i rezerwê mlo-dych nauczycieli...
uœmiecha siê. jakbym trafi³ w jego czu³y punkt. „No có¿ muszê stwierdziæ, ¿e naaal toczy siê ostra dyskusja w œrodowiskach pedagogicznych Wielu spoœród nie tylko praktykuj¹cych nauczycieli, ale i teoretyków, nie mo¿e ukryæ niechêci do kompute-ta Dla powa¿nei rzeszy jes³ to spory orzech do zgryzienia, bo chc¹c nie chc¹c musz¹ siê dostosowaæ do nowei technologu A to rodzi powa¿ne opory, a nawet strach. Pada argument, ze nie ka¿da nowoœæ techniki musi byæ zbawienna dla œwiata..."
Dla przybysza z Polski wychowanego na lekturze materia³ów o niemal bezbolesnym maria¿u Zachodu z komputerem jest to wywód wrêcz sensacyjny A przecie¿ pisze siê, ¿e w wielu domach zachodniej czêœci naszego kontynentu klawiatura i ekran w po³¹czeniu z sieci¹ telefoniczn¹ s³u¿¹ nawet na codzieñ do nawi¹zywania kontaktów, powiedzmy towarzyskich
Mówiê Paulmanowi. ¿e przy ca³ej komputerowej gor¹czce w Polsce wy³oni³ siê pp- • gl¹d niektórych ekspertów iz b³êdem by³o-
by uczenie programowania wszystkich bez wyi¹tku adeptów informatyki. Wyk³adowca z Vlotho podziela tê opiniê. „Najwa¿niejsze jest w³aœciwe wykcrzystanie komputerów. Nie mo¿na stan¹æ na etapie gier. Nie ka¿dy lednak powinien umieæ programowaæ Od tego s¹ profesjonalni programiœci. W przysz³oœci najwa¿niejsza bêdzie wiedza na temat maksymalnego wykorzystania ju¿ posiadanych programów. Naszym zadaniem bêdzie wiêc nauczyæ ludzi pos³ugiwania siê oprogramowaniem komputerów"
I chwila osobistej refleksji Gerda Paulma-na. cz³owieka, który ¿yje z elektronicznej dydaktyki.
Nie bojê siê oczywiœcie komputerów, ale czujê pewn¹ rezerwê w stosunku do tego, co dzieie siê na œwiecie. Mam na myœli zach³yœniêcie siê informatyk¹ i szukanie w niej lekarstw na wszelkie bol¹czki Przy catei tej sztucznej euforii, nies³ychanie wa¿ne by³oby uznanie prostej prawdy i¿ cz³owiek jest o ca³e niebo rozumniejszy od komputera. Kiedy przyjmuje siê, ze wszystko bêdzie mo¿na dziêki elektronice i sztucznej inteligencji przewidzieæ, zaprogramowaæ i oszacowaæ, nast¹pi zatracenie cz³owieczeñstwa. Dziœ komputery i roboty odbieraj¹ ludziom miejsca pracy, mo¿e w przysz³oœci odbior¹ zdolnoœæ podejmowania decyzji, prawo do rozwoju intelektualnego A to by³oby ju¿ niebezpieczne Dlatego potrzebne jest tak¿e konstruktywne krytyczne spojrzenie na to, co nazywamy rewolucj¹ informatyczn¹".
Wojciech £uczak
MIGAWKI Z SICOBU'86
W dniach 25-30 wrzeœnia 1986 r. w paryskiej dzielnicy La Defense niepodzielnie królowa³y komputery. Stoiska wystawowe rozmieszczone w ol-brzymim gmachu CNIT (oko³o 70 tys. m kw.) przyci¹ga³y olbrzymie rzesze zwiedzaj¹cych. Wœród wystawców obok rekinów komputerowych jak IBM. WANG. APPLE. HEWLETT PA-CKARD. OLIVETTI. SIEMENS. ICL wiele mniej znanych firm oferuj¹cych wszystko, co mo¿e zadowoliæ najbardziej wymagaj¹cego odbiorcê.
Pt iwdê powiedziawszy SICOB nie ma ñego charakteru wystawiane s¹ tuta;
¦¦¦ ivno piofesionalne systemy kompute-¦ ;ak komputery dla ka¿dego Na .vystawie mo¿na zobaczyæ wszystko, co
dzieje siê na rynku komputerowym: od najnowszych modeli mikrokomputerów COM-PAQ DESKPRO 386. 16-bitowy APPLE II
GS poprzez urz¹dzenia peryferyine i oprogramowanie do materia³ów eksploatacyjnych Prezentowano równie¿ kopiarki kolorowe, urz¹dzenia telekomunikacyjne i ogólnie nazywaj¹c urz¹dzenia do automatyza-' C|i prac biurowych
Krotki spacer po wybranych stoiskach wystawowych.
Przy wejœciu stoisko firmy COMMODO-RE z wystawionymi kilkunastoma egzemplarzami komputera AMIGA Prezentowano miêdzy innymi przystawkê SIDECAR emu-' lui¹c¹ IBM PC W stoiskach wystawowycn (•rmy APPLE t³umy zwiedzaj¹cych Ka¿dy z kilkudziesiêciotysiêcznei rzeszy u¿ytkowników komputera MACINTOSH móg³by znaleŸæ cos dla siebie Wychodz¹c naprzeciw potrzebom odbiorców firmy programistyczne orgarv/owa³y ca³odniowe prezentacje programów |15 minut na jeden program) Sorobuioe sobie wyobraziæ zaprezentowanie moztwosc: pakietu JAZZ w pr^ecagu kwadransa! Prezenterzy dokonywali .sinych cudów zrêcznoœci.
Tegorocznym przeboiem firmy APPLE iest komputer APPLE II GS Nareszcie zas³u¿ony, lecz mocno przestarza³y APPLE II pewnie Wkroczy³ do rodziny mikrokomputerów 16-bitowych O lym ze firma czuje siê pewnie na rynku œwiadczy najlepiej przygotowanie dla tego modelu specjalizowanego procesora zgodnego programowo z 6502 bêd¹cego procesorem w pe³ni 16-bitowym
Na pytanie czy mo¿na przy dzisiejsze., technologu zamkn¹æ IBM PC/AT w aktówce odpowiedzia³a firma TOSHIBA modelem AT 3100 Procesor 80286 -— 8 MHz w tecn nologii CMOS 640 KB RAM dysk 3.5 cala. dysk twardy 10 MB ekran olazmowy 640 • 400 punktów wszystkie standardowe mterface y przy roZm,aracn 31 ¦ 8 / 36 cm wadze 6.9 kg i cen e Oko³o 5000 S to szczyt dzis.eisze; technolog.i (oczyw-œoe tej dostêpnej na oo³xacn sklepowych).
Komoutery Klasy IBM bez Uyaróego :    ' . " t; i 1 se ri      i   - impi.tfir vr   :
kj ,v tej bran¿y' sk.neczr. • istotno penetrowanego przez oroducentow Azj- Potud-
niowo-Wschodniei firma AMSTRAD-SCHNEIDER zaprezentowa³a zapowiadany wczeœniej model PC 1512
Francuska firma Commande Electronique oo podpisaniu kontraktu z ASHTON-TATE (producent programów dBase II i III oraz FRAMEWORK) sprzedawaæ bêdzie to oprogramowanie w wersiach francuskojêzycznych za 1/3 obecnei ceny (dBase II oraz FRAMEWORK I) Przecie¿ program nawet jeœli jest to pakiet zintegrowany, nie mo¿e byc dro¿szy od komputera"
Na pewno kilka s³ów naleza³ooy ppœwiê-cic seci lokalne] dla IBM PC skonstruowa-nej przez francuska f.rme LEANORD pierwszemu komouleroW' na procesorze 80386 - COMPAO DESKPRO 386 Sa to rozwa¿ana mieszcz¹ce sie w klas'e Workstation Po raz pierwszy na Sicofre obficna by»a I rma SUN z nowym modelem - i'. - :,¦ ¦ u 68020 25 Mhz • - ¦ . ;wy ' "j.36- 1024i Od san o wsz\ jtl. • ' • i - .. osc zfsorezentowanycn 13 SlCOB za-!%• ntv:. ¦ oo³ numeru Bitka' w êr rn
Jerzy Szafranek
24   BAJTEK1/87
JAK TO ROBI¥ INNI
Na pytania „Bajtka" odpowiada Jack Tramiel, przewodnicz¹cy rady nadzorczej korporacji ATARI
— Czy mówi Pan po polsku?
— Kiedyœ mówi³em. Do dziœ rozumiem wszystko i jestem pewien, ¿e po kilku tygodniach pobytu w Polsce porozumiewa³bym siê zupe³nie swobodnie.
Objêcie przez Pana firmy Ata-ri w 1984 roku rozpoczê³o seriê jej wielkich sukcesów rynkowych. Jakie byty pocz¹tki nowej korporacji Mañ 3 ³ata temu?
— Muszê siê teraz zaj¹æ praktyk¹ kapitalizmu, porozmawiaimy zatem o pieni¹dzach. W 1984 roku Atari traci³o ka¿dego dnia milion dolarów. Najwa¿-nieisz¹ rzecz¹ by³o uratowaæ firmê i zredukowaæ straty. Mieliœmy z tym naprawdê du¿y problem. Musieliœmy zwolniæ setki ludzi, drastycznie ograniczyæ bazê firmy z 50 budynków, w których siê poprzednio mieœci³a, do 3, zorganizowaæ dzia³ badawczo-rozwo-jowy, wprowadziæ nowe produkty i nadaæ inny kszta³t starym wyrobom. Wielozadaniowoœæ (multitasking) sta³a siê zasad¹ obowi¹zuj¹c¹. Ka¿dy mened¿er zatrudniany przez nas powinien myœleæ o 30 ró¿nych sprawach jednoczeœnie, aby sprostaæ wieloza-daniowoœci: ograniczyæ koszty, tak |e-dnak, by nie zak³óciæ ani przysz³ego rozwoju, ani bie¿¹cych przedsiêwziêæ firmy. Po 12 miesi¹cach takiej pracy ujrzeliœmy efekt, który chcieliœmy osi¹gn¹æ.
Jakie s¹ Pañskie obowi¹zki jako przewodnicz¹cego rady nadzorczej?
— Jako przewodnicz¹cy rady nadzorczej muszê œledziæ kierunek, w jakim zmierza nie tylko nasza firma, ale i ca³y przemys³. Krótko mówi¹c — chodzi o planowanie przysz³oœci.
Czy bierze Pan udzia³ w codziennej pracy firmy?
— Tak. Efekty codziennej pracy sprowadzaj¹ siê do okreœlenia, ile pieniêdzy wydajemy, a ile zarabiamy. Rzecz w tym, ¿e prowadzê interesy po to. aby przynosi³y dochód.
„Biznes jest wojn¹" — to kontrowersyjne stwierdzenie dok³adnie opisuje Pañski styl prowadzenia interesów. Czy móg³by Pan je wyjaœniæ?
— Biznesmen jest jak dobry genera³, który planuj¹c jeden atak. powinien myœleæ o nastêpnym. Dlatego porównujê biznes z wojn¹, a zw³aszcza z wojn¹ b³yskawiczn¹, której — nawiasem mówi¹c — doœwiadczy³em jako dziewiêcioletni ch³opiec w 1939 roku w Polsce. Biznes i wojna s¹ moim zdaniem bardzo podobne. Wykorzystuj¹c ca³¹ swoi¹ energiê i maj¹c
do dyspozycji zespó³ dobrych wspó³pracowników — mo¿na osi¹gn¹æ prawie wszystko.
— Commodore C-64 by³ Pañskim wielkim osi¹gniêciem 4 lata temu. Ostatnio w prasie amerykañskiej pojawi³y siê przypuszczenia, ¿e zamierza Pan wykupiæ swoj¹ dawn¹ firmê. Czy zechcia³by Pan je skomentowaæ?
— Nie mam zamiaru kupowaæ Commodore'a. Mamy woln¹ prasê w tym kraju — mówiê o Stanach Zjednoczonych — która pisze to co chce. My, w Atari. nie jesteœmy zainteresowani Commodorem, poniewa¿ ma on ma³o do zaoferowania. Kupowanie tej firmy mog³oby siê okazaæ strat¹ pieniêdzy. Wprowadziliœmy komputery serii ST, które mo¿na obecnie kupiæ w zestawie taniej, ni¿ zestaw C-64. O ró¿nicy w poziomie technologicznym obu urz¹dzeñ nie bêdê wspomina³.
— Œwietne wejœcie na rynek Atari ST jest czêsto porównywane z powodzeniem C-64. Jak siê Panu udaje sprzedawaæ komputer tej klasy za tak nisk¹ cenê?
— OdpowiedŸ jest bardzo prosta. Pracowaliœmy ciê¿ko, ciê¿ko i jeszcze raz ciê¿ko. Jest wielu ludzi w naszym przemyœle, których nazwa³bym medalistami olimpijskimi. Udaje siê im jedna rzecz, dostaj¹ medal i zatrzymuj¹ siê. Nasza korporacja — wed³ug mojej filozofii — musi trenowaæ ca³y czas. Nie chodzi o to, by raz zwyciê¿yæ — medale trzeba zdobywaæ ci¹gle. Postêpuj¹c w ten sposób, chcê byæ pewien, ¿e nie bêdziemy zawy¿aæ cen naszych produktów. Najwiêkszym wrogiem cz³owieka jest chciwoœæ, wielu moich konkurentów cierpi na tê chorobê — ja nie. Oni maj¹ bardzo du¿e koszty, my nie pozwalamy sobie wydawaæ zbyt wiele. Pracujemy ciê¿ko, nasze produkty maj¹ najni¿sze ceny, najwy¿sz¹ jakoœæ i najlepsze cechy u¿ytkowe — mogliœmy wyjœæ z nimi do masowego odbiorcy.
Powiedzia³ Pan kiedyœ, ¿e oprogramowanie dla Atari ST jest najszybciej rozwijaj¹c¹ siê czêœci¹ rynku mikrokomputerowego.
— Podtrzymujê te opinie. To bodaj najwa¿niejsze z naszych osi¹gniêæ.
Czy móg³by Pan powiedzieæ coœ o nowym, 32-bitowym komputerze, opartym na procesorze Motorola 68020?
— Pracujemy nad nim. Powinniœmy go pokazaæ w drugim lub trzecim kwartale 1987 roku.
A co z komputerami 8-bitowy-mi — czy ich produkcja bêdzie kontynuowana?
— Tak, bêdziemy kontynuowali linie 8-bitow¹. Niemiecka prasa udowodni³a, ¿e cokolwiek obecnie wyprodukujemy, maj¹c kilka milionów sprzedanych komputerów, bêdzie dla nas dobrym interesem. Wiemy, ¿e w Niemczech zachodnich jesteœmy najlepsi na rynku 8-bitowym i ¿e w innych krajach tak¿e zdobywamy ten rynek. Mamy wiêc zamiar nie tylko kontynuowaæ, ale i rozwijaæ tê produkcjê jeszcze d³ugo.
- Jaka jest produkcja i sprzeda¿ komputerów 8 i 16-bitowych?
— Jak do tej pory, jesteœmy ci¹gle towarzystwem prywatnym i nie poda-
jemy tego rodzaju informacji. Jeœli jednak pyta Pan o liczbê komputerów, a nie o iloœæ dolarów, mogê powiedzieæ, ¿e — licz¹c ³¹cznie — w tym roku sprzedaliœmy oko³o 800.000 jednostek.
Jaka jest pozycja Atari wœród producentów komputerów?
— My, z nowymi produktami, nie mo¿emy podbiæ ca³ego œwiata jednoczeœnie. Powrócê do mojej „wojennej filozofii": ka¿dy wojownik, który próbuje walczyæ na dwa fronty, zwykle przegrywa. Musimy wiêc skupiæ siê na jednym terenie, kontrolowaæ przebieg wydarzeñ, wyci¹gaæ wnioski i systematycznie zdobywaæ rynek. Dlatego dostarczamy Atari do takich krajów, jak RFN. Jesteœmy tam na pierwszym miejscu, jeœli chodzi o produkty sprzedawane po cenie poni¿ej 1000S
Czy wie Pan, ¿e 8-bito we Atari staj¹ siê najpopularniejszymi komputerami w Polsce?
— Tak, mówiono mi o tym i bardzo mnie to ucieszy³o. Dostajê listy od Polaków, którzy pisz¹ wiele dobrego o naszych komputerach i |estem zadowolony z ich wysokiej pozycji w Polsce. Poinformowano mnie tak¿e, ¿e zanim przeszed³em rin Atari, kompute-
rem nr 1 by³ w Polsce Commodore. Byæ mo¿e wiêc Polacy, wybieraj¹c komputery, nie kieruj¹ siê nazw¹ firmy. Mo¿liwe, ¿e po prostu id¹ za mn¹.
Jakie s¹ Pañskie plany dotycz¹ce sprzeda¿y komputerów, szczególnie Atari ST, w Europie wschodniej?
— Chcia³bym sprzedawaæ ST i inne produkty Atari w Europie wschodniej. Istniej¹ jednak restrykcje rz¹dowe, z którymi trudno sobie poradziæ. Za ka¿dym razem, kiedy dostajemy zamówienie, staramy siê o pozwolenie. Czasem jest przyznawane, czasem nie. Bêdziemy stale wywierali nacisk na rz¹d, aby uzyskaæ licencjê eksportow¹. Wy przysy³ajcie zamówienia, a my bêdziemy siê starali je zrealizowaæ.
Na zakoñczenie chcia³bym dodaæ, ¿e komputery s¹ bardzo wa¿ne dla przysz³oœci i im lepiej je poznacie, tym bardziej poprawi siê i udoskonali Wasze ¿ycie.
Rozmowê przeprowadzi³: Jacek Barlik
Redakcja dziêkuje p. Lucjanowi D. Wenclowi za pomoc w zorganizowaniu wywiadu.
BAJTEK 1/87    25
GIE£DA (na dzieñ 22. XI. 86)
		GIE£DA BAJTKA (tys. zl)	KOMIS (tys. zl)	AUSTRIA (œrednie) (ÓS)	FRANCJA (œrednie) (FF)	RFN (œrednie) (DM)	WLK. BRYT. (œrednie) (¦O
oc	ZX81	25-35		580	—	79	—
	ZX Spectrum 48 kB	90	95	1400	—	150-250	45-65
SINCLAI	ZX Spectrum Plus	120-130	140-160	1590	1350	200-300	65-75
	ZX Spectrum 128+ 2	270	—	—	1990	500-530	120
	Drukarka SEIKOSHA GP50S	70-90	—	—	—	199	60-65
	Interface Kempston	7-15	20	250	300	35	6-9
	Stacja dyskietek OPUS 1(3,5")	150	—	500	—	395	95-105
COMMODORE	C-64	185-190	160-180	3500	1900	370-449	90-110
	C-128	300-320	430	6500	2890	650-700	210-230
	C-128D	650-700	—	12000	6850	1250	39M10
	Amiga z monit, kolorowym	—	—	—	—	3198	1099
	Magnetofon 1531	35-37	40	900	350	80-90	25
	Stacja dyskietek 1541	185	200	4500	1950	470	110-150
	Stacja dyskietek 1570	—	300	6900	2300	490-540	160
	Drukarka MPS 801	160	150	2900	2200	199	—
	Dyskietki 51/4 (œrednia jakoœæ)	0.7-1.5	1-2	10-25	7	0.5-2.5	0.8-2
E i* <	800 XL	100-105	90-100	1500	900	140-180	60
	130 XE	150-160	190	2100	1400	360	150
	Stacja dyskietek 1050	160	160-200	2200	2150	370	130
	Magnetofon	25-30	30-35	800	—	69	20
	Drukarka 1029	200	200	1990	—	—	85
0 < cc h (0 <	464 z monit, monochromat.	250	300	6500	2690	520	160
	6128 z monit, monochromat.	350-390	700-800	11000	3990	998	250
	6128 z monit, kolorowym	485	1 min	15800	5290	1398	320
	PCW 8256	—	1.3 min	—	5920	1500	340
	Dyskietki 3"	3-5	6	—	35	7-12	3.5-4
	Stacja dyskietek 3" do 464	210	295	6000	260	549	140
	PC 1512 SD	1.5nDn I     —		—	5920	1189	400
BIA£E PLAMY
Gie³da „Bajtka" przy ul. Grzybowskiej 35 w Warszawie stal¹ siê obecnie najpopularniejszym miejscem spotkañ wszystkich sympatyków komputerowego szaleñstwa. Zarówno m³odzi jak i starzy zapaleñcy z niespokojnym wzrokiem poszukuj¹ nowoœci i na swoje mikrokomputery. Na ostatnich gie³dach dominowa³o oprogramowanie i literatura. Samego sprzêtu by³o raczej niewiele a jego ceny utrzymywa³y siê na bardzo wysokim poziomie. Byæ mo¿e nie bez znaczenia sa kr¹¿¹ce pog³oski o ponownym wprowa-
dzeniu c³a na przywo¿one z zagranicy mikrokomputery. Ciekawostkê jest natychmiastowa reakcja gie³dy na pojawienie siê komputera SpectraVideo na naszym rynku. Ju¿ w tydzieñ po rozpoczêciu jego sprzeda¿y CSH na gie³dzie pojawi³y siê rozliczne gry i programy u¿ytkowe na ten komputer. Na koniec przestroga. Na gie³dzie pojawi³y siê ostatnio dyskietki 5.25 cala po konkurencyjnych cenach. Niestety wiêkszoœæ z nich posiada³a bia³e plamki lub przebarwienia na noœniku magnetycznym, co praktycznie je dyskwalifikowa³o. W oknie dyskietki powierzchnia musi byæ jednorodna, gdy¿ plamy i ma³e choæby uszkodzenia mogê uniemo¿liwiæ zapis i odczyt programów.
NDYWIDUALNY ANK
ANYCH
Nazywam siê Arkadiusz Sekura Jestem technikierr. drzewiarzem, mam 33 lata. Posiadam mikrokomputei Commodore VC-20 i Commodore C-64 oraz monitor zie-ony i drukarkê. Oprogramowanie, rozszerzenie grafiki C-64, asembler (C-64), sztuczna inteligencja (C-64), edukacja (C-64 i VC-20), testy jêzykowe, bank danych, operacje finansowe. Interesujê siê elektronik¹, informatyk¹, fotografi¹, literatur¹ fantastyczno-naukowa. Z innymi posiadaczami tego typu mikrokomputerów chcia³bym wymieniaæ programy, doœwiadczenia, rady. Mój adres: Oœ. Kaszubskie 18 CD/39, 84-200 Wejherowo.
Krystyna Florek, nauczycielka, 36 lat. Mikrokomputer. Amstrad CPC 6128 i Casio PB 400 oraz pióro œwietlne Oprogramowanie: C-Header, katalog, funkcja. Zainteresowania: programy edukacyjne, matematyczne, gry logiczne. Wymiana oprogramowania i wypo¿yczanie literatury. Adres: ul. Zubrzyckiego 4-2. 30-611 Kraków.
Jaros³aw Pi¹stka, nauczyciel, 30 lat. Mikrokomputer: ORIC-1 (16K). Oprogramowanie: krótkie programy u¿ytkowe i edukacyjne, kilka gier. Zainteresowania: mikrokomputery, muzyka, literatura. Stworzenie korespondencyjnego klubu u¿ytkowników ORIC-a, wymiana programów materia³ów. Adres: Lucynowo, 62-402 Ostrowite.
Witold Werner, uczeñ, 12 lat. Mikrokomputer: TIMEX Sinclair 1000 i ZX 81 16K. Oprogramowanie: sprawdzian (w³asna wersja), address book. Zainteresowania: informatyka, motoryzacja. Wymiana oprogramowania, literatury, porad w zakresie programowania ZX 81. Adres: ul. Nubijska 1 m 108, 03-977 Warszawa.
Dariusz i Robert Rudkiewicz Darek: uczeñ IV kl. Technikum £¹cznoœci, 18 lat. Robert, uczeñ I klasy Policealnej Szko³y Ekonomicznej (kierunek informatyka), 19 lat. Mikrokomputer: SONY-MSX Hit-Bit HB-75F i ZX Spectrum 48K. Zainteresowania: informatyka, elektronika, sport, modelarstwo. Wymiana oprogramowania, skorzystanie z pomocy w nauce programowania. Adres: ul. Mazurska 16/17, 70-443 Szczecin.
Krzysztof Konatowicz. uczeñ, 15 lat Mikrokomputer: MERITUM I 16K. Oprogramowanie: biorytmy, LOGO, baza danych Zainteresowania: technika komputerowa, jêzyki programowania. Adres: ul. Egejska 2 m 11, 02-764 Warszawa.
Artur Pachala, uczeñ, 16 lat. Mikrokomputer: LASER 310 Color Computer 18K. Oprogramowania: polska wersja kasety demonstracyjnej, szereg muzyczek oraz grafik. Zainteresowania: elektronika, tenis sto³owy, wêdkarstwo Adres Aleja Marcinkowskiego 13/20. 63-600 Kêpno.
Micha³ Bulski, Student, 25 lat. Mikrokomputer: TANDY 64K Color Computer 2, syntezator mowy i dŸwiêku, monitor. Zainteresowania: elektronika, elektrotechnika, futury-styka. Wymiana informacji i doœwiadczeñ oraz w³asnego i firmowego oprogramowania. Adres: Aleja Pokoju 10a m10, Czêstochowa 7.
Wojciech Rawdanik, uczeñ, 17 lat Mikrokomputer: PHILIPS VG-8010 48K, dr¹¿ek sterowy w³asnei roboty Oprogramowanie: gry: River Raid, Spectra, Formu³a I, Zaxxon... programy u¿ytkowe: LOGO, Hisoft Asembler. Zainteresowania: elektronika, jêzyki programowania a szczególnie LOGO Wymiana informacji na temat LOGO. Adres: ul. Kromera 3/23, 11-100 Lidzbark Warmiñski.
Tadeusz Krawczuk. Mikrokomputer THOMPSON T-07 produkqi francuskiej, magnetofon, cartridge z wersj¹ BASIC 1,0. Oprogramowanie kasety do nauki jêzyka BASIC w wers|i niemieckiej Wymiana programów i cartridgeów Adres ul. ¯ó³kiewskiego 9. 33-300 Nowy S¹cz.
26   BAJTEKl/87
WSZYSTKO DLA WSZYSTKICH
ZX SPECTRUM COMMODORE 64 ATARI
CO PI¥TY —GRATIS!
WYSY£KA NA CA£Y KRAJ • KATALOGI GRATIS RACHUNKI • SZKO£Y — ZNI¯KA 00-849 WARSZAWA, UPT 66 p.14 DH „SEZAM" II p. g. 16-19.
D-156
ZANIM KUPISZ KOMPUTER • KUPI£EŒ KOMPUTER ZADZWOÑ ZADZWOÑ
28-01-76
28-01-76
eurobit
PORADY:
— WYBÓR SPRZÊTU
— ZASTOSOWANIA OPROGRAMOWANIE INSTRUKCJE POŒREDNICTWO ZLECENIA
ATAR!
COMMODORE C-16, 116, 4 AMSTRAD VIC 20; C-64 SHARP MSX IBM
WYSTAWIAMY RACHUNKI DLA INSTYTUCJI Al. Ujazdowskie 18 m. 14 Warszawa wg. 9-18
D-90
ZX SPECTRUM • ATARI •
PROGRAMY U¯YTKOWE I GRY. DU¯O NOWOŒCI. „WIECZNE" ¯YCIE NA ATARI. NAJTAÑSZE CENY. KATALOGI GRATIS. WYPO¯YCZALNIA PROGRAMÓW 05-220 Zielonka, skr. poczt. 9/2.
D-131
INF0RMAX
oferuje
¦ bogaty wybór programów u¿ytkowych, gier (równie¿ sprzeda¿ wysy³kowa)
¦ projektowanie i programowanie systemów
na mikrokomputery AMSTRAD Bezp³atna wysy³ka kata³ogów i informacji 02-791 Warszawa, ul. Meander 21 m.20
D-154
INTERAMS AMSTRAD
—IBM—
oferuje
• komputery
• drukarki
• oprogramowanie
• literatura
• programy na zamówienie
• poœrednictwo
Udzielamy gwarancji na komputery zakupione w naszej firmie
• Gry dla m³odzie¿y W-wa, tel. 38-52-20, Okopowa 22/11.
D 134
DOMY TOWAROWE CENTRUM „WARS" antresola tel. 27-72-11 w. 242 PROGRAMY • LITERATURA* SERVICE
• ATARI • SPECTRUM • COMMODORE • AMSTRAD
D-163
POCZT¥!
i na miejscu
W-wa, Plac Zbawiciela „MALUCH" Wszystkie programy na:
ZX SPECTRUM TIMEX
w cenie 100-300 z³. Inf. Listowna: W.P.K. „SPECTRUM" 00-560 W-wa, Mokotowska 19 lub tel. 25-95-40
D-128
16-ietni uczeñ przy pomocy swojego domowego komputera przez dziesiêæ dni odszuka³ i poprawi³ b³¹d w programie komputerowym, który przez 25 lat przeszkadza³ w prowadzeniu prac badawczych w jednym z amerykañskich szpitali. Przy pomocy poprawionego programu i ma³ego komputera osobistego bêdzie mo¿liwe w przeci¹gu kilku sekund okreœlenie mo¿liwoœci wyst¹pienia zawa³u serca. Sfrustrowanym specjalistom nastolatek oœwiadczy³, ¿e komputery go nudz¹.
System wczesnego ostrzegania opracowa³a firma Marconi. Jego zasiêgu nie ogranicza krzywizna ziemi. G³ównymi elementami systemu s¹: superkomputer wykonuj¹cy do 10 milionów dzia³añ dziesiêtnych na sekundê, krótkofalowa stacja na-dawczo-odbiorcza i ... s³ona morska woda, której w³aœciwoœci powoduj¹ „przyleganie" fal krótkich do jej powierz-
chni. S³aby sygna³ odbity od poruszaj¹cych siê obiektów w odleg³oœci do 320 km, licz¹c po krzywiŸnie ziemi, wyodrêbniany jest z du¿ej iloœci ró¿nego typu zak³óceñ dziêki specjalnemu programowi, wymagaj¹cemu potê¿nej mocy obliczeniowej superkomputera.
Emulator Macintosh'a ukaza³ siê w sprzeda¿y na rynkach zachodnich przystosowany do wspó³pracy z mikrokomputerami serii ST firmy Atari. Wykonany w postaci tzw. „cartridge'a" emulator zawiera trzy pamiêci typu ROM. W pierwszej znajduje siê program umo¿liwiaj¹cy symulowanie obs³ugi dysków napêdu Macintosh a, a w pozosta³ych dwóch znajduje siê kopia 512KB pamiêci ROM Macintosh a, co pozwala Atari na dok³adnie tak¹ sam¹ obs³ugê monitora, napêdu dysków i myszy. Zapis i odczyt informacji w napêdzie przebiega jednak o 50% wolniej
ze wzglêdu na czas potrzebny do emulacji, jednak pozosta³e operacje przebiegaj¹ o 20% szybciej, gdy¿ Atari ST jest szybszy od Macintosh a.
•
Dla Atari ST opracowano wk³adkê (kartê) umo¿liwiaj¹c¹ przeprowadzenie obliczeñ z prêdkoœci¹ 15 milionów operacji na sekundê, czyli prawie dwukrotnie wiêcej ni¿ s³ynny VAX 800! I pomyœleæ, ¿e mikroprocesor Motoroli MC 68000 jest w stanie dzia³aæ z prêdkoœci¹ „tylko 100 tysiêcy operacji na sekundê...
Japoñski koncern Mitsubishi Electric
rozpocz¹³ ju¿ produkcjê dynamicznych pamiêci typu RAM o pojemnoœci 1MB, konfiguracji 256 kilos³ów czterobitowych i czasie dostêpu od 150 do 100 nanose-kund. Wytwarza siê miesiêcznie 100 tysiêcy tych uk³adów w cenie oko³o 100 dolarów za sztukê.
ra.ttf.k 1 /R7
27
Co to jest RAM-dysk? Z jakim urz¹dzeniem wspó³dzia³a r
Eugeniusz Tenenbaum ul. Serbska 3a 51-111 Wroc³aw
Nazwa RAM-dysk jest nieco myl¹ca; nie odnosi siê ona bowiem do fizycznego urz¹dzenia, lecz raczej do sposobu organizacji pamiêci wewnêtrznej komputera. RAM-dysk jest pewnym wydzielonym obszarem pamiêci RAM, s³u¿¹cym do przechowywania danych w formie plików, podobnie jak ma to miejsce w przypadku pamiêci zewnêtrznej (np. dysku — st¹d nazwa). Zaiet¹ takiego rozwi¹zania jest niezwykle szybki dostêp do danych zapisanych w RAM-dysku, wad¹ — utrata tych danych po od³¹czeniu komputera z sieci, podobnie jak ca³ej reszty pamiêci RAM.
RAM-dysk jest rozwi¹zaniem doœæ czêsto spotykanym wœród komputerów 8-bitowych z pamiêci¹ 128 (lub wiêcej) kB. Jak wiadomo, przestrzeñ adresowa procesora wynosi tam zazwyczaj 64 kB. Pozosta³a pamiêæ RAM jest czêsto wykorzystywana jako RAM-dysk.
Zakupem komputera interesujê siê krótki czas; mam w planie kupno Atari 800XL lub 130XE. Decyzjê tê podj¹³em po obejrzeniu pierwszego z w/w komputerów u kolegi. Jednak nie potrafi³bym uzasadniæ mego zdania. Zacz¹³em szukaæ porad w Waszym piœmie. Dlaczego nie mo¿na znaleŸæ u Was niczego dla takich pocz¹tkuj¹cych jak ja ? Jedynie w rubrykach dla najm³odszych mog³em wiele wyczytaæ i zrozumieæ. Brak materia³ów dla zainteresowanych, ma³o — chc¹cych siê zainteresowaæ informatyk¹. Stojê teraz przed du¿ym problemem: zdecydowaæ siê na kupno komputera, czy te¿ nie. Bojê siê, ¿e wy³o¿one przeze mnie pieni¹dze pójd¹ na marne, ¿e nie dam rady. Proszê o wziêcie na serio mego listu i poinformowanie mnie, gdzie mo¿na kupiæ materia³y przeznaczone dla osób pocz¹tkuj¹cych, gdzie jest wszystko przedstawione w sposób zrozumia³y dla takich, jak ja.
(nazwisko i adres do wiad. redakcji)
Pierwszym i podstawowym przewodnikiem w pracy z nowym komputerem jest jego instrukcja obs³ugi. Z regu³y ma ona rozmiar grubej broszury lub ksi¹¿ki, której wiêksza czêœæ zawiera informacje dla osób stykaj¹cych siê z mikrokomputerem po raz pierwszy. Jej lektura w po³¹czeniu z praktycznym sprawdzeniem nabywanych wiadomoœci powinna stanowiæ zawsze pierwszy etap zapoznawania siê z komputerem. W miarê mo¿noœci poleca³bym zreszt¹ jej przejrzenie jeszcze przed zakupem sprzêtu, aby unikn¹æ np. nabycia Atari 800XL bez magnetofonu lub stacji dysków
Nie zamierzamy na ³amach „Bajtka" powtarzaæ niczego, co podaje instrukqa obs³ugi danego komputera; st¹d te¿ lektura wielu materia³ów zamieszczanych na naszych ³amach wymaga pewnego doœwiadczenia. Czêœæ objêtoœci czasopisma przeznaczamy jednak dla pocz¹tkuj¹cych. Prowadzony od pocz¹tku zesz³ego roku cykl „Nie bój siê mnie'" mial za zadanie zapoznaæ z podstawowymi cpcha-
mi sprzêtu mikrokomputerowego; „Tylko dla przedszkolaków" jest zaœ adresowane do wszystkich, zaobywaj¹cych pierwsze doœwiadczenia z jêzykiem Basic. Nie trzeba chyba t³umaczyæ, ¿e tytu³ rubryki jest przenoœni¹...
Czy dotkniêcie metalowym przedmiotem do z³¹cza krawêdziowego w ZX Spectrum mo¿e spowodowaæ uszkodzenie komputera? Niechc¹cy dotkn¹³em do z³¹cza krawêdziowego „minijackiem".
Mariusz Dziawa (adres do wiad. redakcji)
Tak. Mo¿e to doprowadziæ do powa¿nych uszkodzeñ uk³adów scalonych Spectrum, m.in. ULA i uk³adów pamiêci RAM, zdarzyæ siê mo¿e tak¿e uszkodzenie pamiêci ROM i procesora. Zabezpieczeniem na przysz³oœæ przed niezamierzonym zwarciem styków szyny mo¿e byæ sporz¹dzenie specjalnei nak³adki ochronnei z materia³u izolacyjnego. Pamiêtaæ nale¿y tylko, aby nie utrudnia³a ona obiegu powietrza wewn¹trz obudowy komputera — jego przegrzanie mo¿e byæ bowiem równie¿ przyczyn¹ uszkodzeñ.
Proszê o garœæ informacji na temat MSX. Czy jest to faktycznie standard tak dobry, jak g³osz¹ jego reklamy7
K.D.
(nazwislo i adres do wiad. red.)
Komputery standardu MSX posiadaj¹ nastêpuj¹ce cechy podstawowe:
a. mikroprocesor Z80 A z zegarem 3,5 MHz,
b. pamiêæ RAM przynajmniej 64 kB,
c. pamiêæ ROM 32 kB,
d. ekran o rozdzielczoœci 256 x 192, 16 kolorów,
e. ekran w trybie tekstowym 40 x 24 znaki,
f. 32sprite'y.
g. dŸwiêk — co najmniej 3 kana³y. 8 oktaw,
h. wbudowany inter³ace standardu Centronics,
i. rezyduj¹cy interpreter jêzyka Microsoft Extended Basic,
j. mo¿liwoœæ pracy w systemie CP/M 2.2 Niektóre z podanych powy¿ej parametrów nie dorównuj¹ ju¿ najnowszym osi¹gniêciom czo³owych firm — obecnie produkowane maszyny posiadaj¹ czêsto pamiêæ RAM 128 kB, ekran o rozdzielczoœci 640 x 400 lub 640 x 200 oraz ekran tekstowy o wymiarach 80 x 24 znaki. Oto niektóre z produkowanych obecnie komputerów MSX Toshiba HX-10 PANASONIC CF-2700
Sony Hit Bit PHILIPS VG8020
Sanyo MPC 100 Spectravideo SVI 728
JVC HC-7GB Yamaha CX5M
Czy do ZX Soectrum mo¿na pod³¹czyæ dowoln¹ stacjê dysków? Je¿eli nie, to proszê o informacjê o tych, które pod³¹czyæ mo¿na.
S³awomir Izydorczyk ul. p³k. D¹bka 227b/10 81-155 Gdynia-Ob³u¿e Kilka firm produkuje stacje dysków przeznaczone do wspó³pracy ze Spectrum. Wœród nich bodaj najbardziej znana jest firma Opus. oferui¹ca zarówno stacje dysków 3", jak 5 1/4" (pojedyncze i podwójne), wraz z odpowiednim interface'em pozwalaj¹cym na do³¹czenie tych urza dzeñ. Oto adres firmy:
Opus Supplies Ltd. 158 Camberwell Road, London SE5 x OEE Wielka brytania
W którym miejscu pamiêci ZX Spectrum umieszczony jest ekran monitora ? Czy obszar tej pamiêci mo¿na rplnko-waæ?
G.W.
(nazwisko i adres do wiad. red.)
KONKURS 0 Z£OT¥ DYSKIETKÊ „BAJTKA"
W numerze grudniowym opublikowaliœmy kupon zg³oszenia do konkursu klubów mikrokomputerowych O Z£OT¥ DYSKIETKÊ „BAJTKA" organizowanego pod patronatem Ministra — Cz³onka Rady Ministrów do Spraw M³odzie¿y —
Aleksandra Kwaœniewskiego, przy wspó³udziale Zwi¹zku M³odzie¿y Wiejskiej, Zwi¹zku Harcerstwa Polskiego, Turnieju M³odych Mistrzów Techniki ZSMP i Centralnej Sk³adnicy Harcerskiej. Dla tych, którzy jeszcze nie wys³ali zg³oszenia powtarzamy kupon, który nale¿y wys³aæ do dnia 31 marca 1987 na adres: Redakcja „BAJTEK" ul. Wspólna 61, 00-687 Warszawa, z dopiskiem na kopercie „Z³ota Dyskietka Bajtka".
Przypominamy, ¿e we wspó³zawodnictwie mog¹ braæ udzia³ wszystkie kluby mikrokomputerowe: szkolne, zak³adowe, dzia³aj¹ce pod patronatem organizacji m³odzie¿owych, domów kultury itd. Zg³oszenia mog¹ przysy³aæ tak¿e kluby nieformalne.
Zwyciêzców konkursu czeka wiele atrakcyjnych nagród!
Czekamy na zg³oszenia!
BAJTEK
KUPON ZG£OSZENIA DO KONKURSU O Z£OT¥ DYSKIETKÊ „BAJTKA"
Nazwa klubu:........................
Adres: ul...........kod:......miejscowoœæ: .
Numer telefonu (klubu, prezesa, jednego z cz³onków):   .
Nasz klub dzia³a od.......roku. obecnie zrzesza . .
Opiekun (szko³a, zak³ad pracy, organizacja patronacka itp.
cz³onków.
Zg³aszamy nasz klub do wspó³zawodnictwa O Z£OT¥ DYSKIETKÊ „BAJTKA". W za³¹czeniu przesy³amy:
— Zasady dzia³ania naszego klubu
— Opis dotychczasowej dzia³alnoœci.
— Zamierzenia i plany na rok 1987.
Opiekun:
(podpis i piecz¹tka)
Prezes klubu:. Adres (telefon):
podpis:....
28
5*
BAJTEK 1/87
SPRZÊ¯ENIE ZWROTNE
Pamiêæ ekranu ZX Spectrum zajmuje 6192 bajty „na pocz¹tku" pamiêci RAM komputera, a zatem pocz¹wszy od adresu 16384 (4000 hex); z tego przestrzeñ przeznaczona na odwzorowanie samego obrazu rozci¹ga siê do adresu 22528 (5800 hex), zaœ ostatnie 768 ba|tów, do adresu 23296 (5800 hex) zaimuj¹ |ego atrybuty: kolory, migotanie i jasnoœæ.
Niestety, podany obszar pamiêci jest na sta³e przeznaczony na odwzorowanie obrazu. Jest to np. jedn¹ z g³ównych przyczyn niemo¿noœci implementacji systemu CP/M na omawianym komputerze.
Od niedawna zajmujê siê jêzykiem Sinclair Logo. Po obejrzeniu jednego z paŸdziernikowych programów „ Halo Komputer" nasunê³y mi siê pytania:
1. Czy na Spectrum mo¿na jakoœ zrealizowaæ funkc/e Logo dostêpne na Atari — zmieniaj¹ce wygl¹d ¿ó³wia, „ rozmna¿aj¹ce" go, wprawiaj¹ce ¿ó³wia w ruch itp. ?
2. Czy w Sinclair Logo w nazwach procedur mog¹ wystêpowaæ znaki graficzne (o kodach 129 — 143)?
Hubert Taler Gronóiu 21 66-220 £agów woj. zielonogórskie
Wymienione mo¿liwoœci Atari Logo wywodz¹ siê z mo¿liwoœci sprzêtowych komputerów XL. Procesor graficzny Antic, bêd¹cy ich wyposa¿eniem, pozwala bowiem na definiowanie i niezale¿n¹ animacjê na ekranie tzw. spnte'ów, znanych równie¿ u¿ytkownikom Commodore. Cztery ¿ó³wie w Atari Logo to w³aœnie cztery spntey. Realizaqa programowa podobnego rozwi¹zania na Spectrum jest zadaniem trudnym w ogóle, a zatem w Sinclair Logo te¿.
Nie uda³o mi siê zarówno w Sinclair Logo 1.6, jak i w polskim Logo 2.2 zdefiniowaæ procedury o nazwie zawieraj¹cej w nazwie jeden z wymienionych znaków. Na pewno nie zosta³o to przewidziane przez twórców interpretera, tym bardziej, ze dostêp do nich z klawiatury jest niemo¿liwy
Rozmowa z szefem Centrum Komputerowego M³odzie¿owego Ruchu Kultury w Przemyœlu, Jerzym Gronostalskim.
— S³ysza³em, ¿e w pana domu drzwi siê dos³ownie nie zamykaj¹, jako, ¿e ka¿dy kto tylko ma coœ do czynienia z komputerami w Przemyœlu przychodzi do pana i pracuje na pañskim sprzêcie ?
— Tak, to prawda, chocia¿ teraz |est jakby spokojniej bo ju¿ 1 wrzeœnia ruszy³o w pomieszczeniach M³odzie¿owego Domu Kultury w Przemyœlu nasze Centrum Komputerowe. Nie znaczy to, ¿e moje mieszkanie nie bêdzie nadal sta³o otworem dla wszystkich mi³oœników komputerów.
— wasze plany i zamierzenia ?
— Oprócz nauki obs³ugi komputera i oudowy systemu komputerowego chcemy poprzez prezentacjê budowy prostych programów dojœæ do tworzenia przez uczestników zajêæ w³asnych programów. Oczywiœcie naszym zadaniem jest g³ównie szerzenie edukacji informatycznej wœród m³odzie¿y, u³atwienie jej dostêpu do sprzêtu informatycznego, gromadzenie i popularyzacja informacji dotycz¹cych informatyki oraz jej zastosowania, a tak¿e tworzenie i eksploatacja orogramów mikrokomputerowych powszechnego u¿ytku.
W dotychczasowych numerach .. Bajtka" ukaza³y siê dwa programy kol. Micha³a Szuniewicza dotycz¹ce operacji przesuwania ekranu Spectrum w górê („ Wstêga" nr 4(85) oraz w lewo (,. Ruchomy krajobraz" nr 2(86). Czy mo¿na uzyskaæ tak¿e przesuniêcie (scrolling) ekranu w dól?
Karol Jungk (adres do iciad. redakcji)
Tak, oczywiœcie mo¿na napisaæ program przesuwaj¹cy zawartoœæ ekranu w dowolnym kierunku i o dowoln¹ iloœæ linii. Co wiêcej, operacjê tak¹ mo¿emy wykonaæ np. oddzielnie na ka¿dym z trzech sektorów ekranu (patrz program „Ruchomy krajobraz"). Interesuj¹cy pana fragment programu nale¿a³oby, ze wzglêdu na wymagan¹ du¿¹ szybkoœæ dzia³ania, napisaæ w jêzyku maszynowym lub asemblerze. S¹dzê, ¿e po lekturze artyku³ów „Ruchomy krajobraz" z nr 2/86 oraz „Jak schowaæ obrazek" z nru 8/86 nie bêdzie to zadaniem szczególnie trudnym.
Czy takie gry symulacyjne, jak Flight Simulator" czy „ Fighter Pilot" zosta³y opracowane równie¿ dla Atari? A je¿eli nie. to czy s¹ jakieœ podobne gry symuluj¹ce lot samolotem przeznaczone w³aœnie dla Atari?
Dlaczego recenzje gier publikowane w waszym piœmie dotycz¹ tylko Spectrum?
Rafa³ Wawrzyniak ul. Staszica 13/5 72-600 Œwinoujœcie
Dla Atari 800XL powsta³o co najmniei kilka symulatorów lotu, wœród nich równie¿ wymieniony przez Pana „Flight Simulator",
Poza tym istnieje kilka gier, „udaj¹cych" lot samolotem czy œmig³owcem w bardziej uproszczony sposób — na przyk³ad „Rescue On Fractalus". Opis tej gry w „Bajtku" nr 7/86 jest jednym z przyk³adów, ¿e nie preferujemy posiadaczy Spectrum równie¿ w sferze gier komputerowych.
BEZ KOMPUTERA
Rozmowa z Henrykiem Rakowskim, nauczycielem matematyki w II LO im. W. Broniewskiego w Koszalinie, opiekunem szkolnego kó³ka Komputerowego.
Czy tylko moda decyduje, ¿e komputery podbi³y serca i umys³y tylu ludzi?
— Na pewno s¹ tu dwa nurty. Pierwszy to rzeczywiœcie moda. pogoñ za grami telewizyjnymi, no i przy okazji — dla niektórych — sposób na zarabianie. Ale jest te¿ drugi nurt, patrzenie na komputer niejak na zabawkê.
— Rozumiem, ¿e w³aœnie dlatego powsta³o wasze kó³ko...
— Istnieje od ubieg³ego roku. Pocz¹tki by³y doœæ œmieszne. Mieliœmy ucznia, który by³ bardzo zdolny, lecz coraz gorzej radzi³ sobie z nauk¹. Okaza³o siê, ¿e ma w domu komputer i jemu tylko poœwiêca swój czas. Uczeñ, niestety, wylecia³ ze szko³y, lecz ja zaprosi³em go na lekcjê by pokaza³, jak dzia³a ów komputer. No i po³kn¹³em bakcyla.
W „ Bajtku" 5-6 na stronie 23 w „ Klanie Commodore" podano przyk³ad zast¹pienia komunikatów wypisywanych w jêzyku angielskim na komunikaty w jêzyku polskim. Czy mo¿na zrobiæ to samo w Spectrum + ?
Andrzej Kubacki ul. Zjednoczenia 147188 87-700 Toruñ
Niestety, jest to zadaniem b.trudnym. Opisany sposób zast¹pienia komunikatów angielskich w C 64 polega³ na przepisaniu ca³ego interpretera Basica z pamiêci ROM do bloku RAM, przy zachowaniu wszystkich adresów (Commodore posiada pe³ne 64 KB pamiêci RAM). W Spectrum jednak takie przeniesienie interpretera musia³oby poci¹gn¹æ za sob¹ zmianê jego lokalizacji w przestrzeni adresowej komputera (a nie jest on relokowalny!) i dodatkowo zmniejszenie obszaru pamiêci dostêpnego dla programów w Basicu. Nie obesz³o by siê wiêc bez du¿ego wk³adu pracy. Wobec faktu, ¿e pisaæ programy mo¿na równie¿ z angielskojêzycznymi komunikatami, uwa¿am, ¿e cel (jakkolwiek byæ mo¿e s³uszny) nie jest w tym wypadku wart wysi³ku.
Nie widzê zwi¹zku miêdzy jêzykiem wysokiego poziomu, asemblerem i mikroprocesorem. Jak dzia³a intc , t jakiegoœ jêzyka? Czy to te¿ jest program? Czym siê ró¿ni od kompilatora? Czy istnieje mo¿liwoœæ napisania programu t³umacz¹cego program napisany w jednej wersji Basica na inn¹ wersjê, lub np. z Fortranu na Basic?
Andrzej Szel¹g Trzebinia
Ogólnie rzecz bior¹c, interesuj¹ Pana programy, zwane translatorami — t³umacz¹ce programy zapisane w jednym jêzyku na programy w innym jêzyku programowania.
G³ównym zastosowaniem tych programów jest umo¿liwienie u¿ytkownikowi komputera pos³ugiwanie siê jêzykami œredniego i wysokiego poziomu. W takim przypadku program w tym jêzyku t³umaczony jest na program w jêzyku wewnêtrznym procesora. U¿ywane s¹ dwa podstawowe typy takich translatorów: kompilator, który t³umaczy program Ÿród³owy w ca³oœci przed jego wykonaniem, oraz interpreter, w którym podczas wykonywania programu Ÿród³owego ka¿da jego instrukcja jest osobno t³umaczona na kod maszynowy, a nastêpnie ów fragment kodu — wykonywany. Zalety i wady ka¿dego z tych rozwi¹zañ by³y ju¿ w „Bajtku" dyskutowane, nie ma zatem celu ich tutaj powtarzaæ.
Mo¿liwe jest tak¿e napisanie programu t³umacz¹cego program w jednym jêzyku wy¿szego poziomu na program w innym jêzyku wysokiego poziomu — zw³aszcza w przypadku ró¿nych dialektów tego samego têzyka. I oczywiœcie nie ma przeszkód, aby np. tego typu translator dwóch dialektów Pascala by³ napisany równie¿ w Pascalu (a nastêpnie skompilowany). Programy tego typu s¹ szeroko stosowane, tak¿e w mikroinformatyce.
Marcin
Dziêki uprzejmoœci dyr. Wasiaka i pana Masznera z Zespo³u Szkó³ Samochodowych mog³em poznaæ zasady dzia³ania tego sprzêtu. Zorganizowa³em kurs BASIC-a Spectrum. Klawiaturê mieliœmy ... narysowan¹ na kartce, co przynajmniej na tyle by³o korzystne, ¿e zostali najwytrwalsi, ci, Których interesowa³y nie tylko gry.
— Zaraz, zaraz, kó³ko komputerowe bez komputera ?
— Dok³adnie, bez swojego komputera. Jakoœ kombinowaliœmy. Z pocz¹tku uczniowie przynosili po¿yczony przez siebie sprzêt, gtównie Commo-dora 64 i Spectrum. Potem mogliœmy korzystaæ z goœcinnoœci Wy¿szej Szko³y, Okrêgowego Przedsiêbiorstwa Geodezyjno-Kartograficznego, no i gabinetu, samochodówki... Zrobiliœmy zbiórkê wœród tych rodziców, zwróciliœmy siê do zak³adów pracy, Towarzystwa Przyjació³ Prasy, Komitetu Antyalkoholowego. Mogliœmy ju¿ kupiæ dwa komputery, ale nie jestem tym zainteresowany, bo by³aby to jedynie zabawka dla opiekuna kó³ka. Namawiam Dyrekcjê do zamówienia sieci z³o¿onej z komputerów ELWRO — JUNIOR. Mielibyœmy w ten sposób wyposa¿enie dla dwudziestu uczniów.
— Jednak póki co, nadal bez swego sprzêtu...
— S¹siednie liceum ma otrzymaæ z kuratorium dziesiêæ Spectrum, stacjê dysków i drukarkê. Dyrektor szko³y obieca³, ¿e przygarnie nas. Na razie zajmiemy siê tylko teori¹. Literatury jest ju¿ conie-co. Mamy przedruki instrukcji do komputerów produkowanych przez przedsiêbiorstwa zagraniczne w Polsce, instrukcje zachodnich komputerów, „Bajtka", „Komputera", „IKS-a". Oczekujemy teraz literatury do zajêæ z informatyki.
rozmawia³: Waldemar Æwieka
KOMPUTERY PODBIJAJ¥ PRZEMYŒL
Do tego niezbêdny jest odpowiedni sprzêt i oprogramowanie. Mamy ju¿ 5 komputerów Spectrum Plus, dziewiêæ komputerów Atari 800 XL, jeden Atari 130 XE, cztery stacje dysków do Atari i dwie drukarki.
rozmawia³: Andrzej Ryczaj
BAJTEK 1/87    29
PREZENTUJEMY
TYLKO DLA
U
Ni
i
ty
I
MIKROKOMPUTERY ZNAD SEKWANY
Has³o „mtkroKomputery" przywo³uje nam na myœl firym Atari, Amstrad czy Commodore ale raczej nie Thomson. A tymczasem ten francuski koncern elektroniczny produkuj¹cy miêdzy innymi komputery profesjonalne nie zaniedbuje równie¿ rynku mikrokomputerów osobistych i domowych, czego dowodem jest najnowsza oferta firmy obejmuj¹ca trzy typy mikrokomputerów: M06, T08 i T09. We wszystkich trzech zastosowano ulepszon¹ wersjê 8-bitowego mikroprocesora Motoroli 6805, a mianowicie 6809E o wewnêtrznej strukturze 16-bitowej, wiêkszej szybkoœci dzia³ania i bogatszej liœcie rozkazów. Pozosta³e cechy wspófne to: mo¿liwoœæ wyboru 16 kolorów z 4096 mo¿liwych, 8 trybów pracy monitora w tym tryb 40 i 80-ko-lumnowy; równoleg³y interface typu Cem-tronics dla drukarki, interface uniwersalny dla instrumentów muzycznych, modemu. RS232 i myszki; wejœcie typu „cartridge" dla programów zapisanych w pamiêci ROM. Wspólny jest równie¿ BASIC 1.0 Microsoft rezyduj¹cy w wydzielonym obszarze wewnêtrznej pamiêci ROM, a instalowany w celu umo¿liwienia wykorzystania programów z wczeœniejszych wersji Thomsona: MOS w przypadku M06 i T07 dla T08 i T09.
Pozosta³e dane techniczne mikrokomputerów:
M06: Pamiêæ RAM — 128KB, w tym 16KB pamiêci ekranu i 112KB dostêpnych dla u¿ytkownika z poziomu BASIC-a, dziêki rezyduj¹cemu w pamiêci ROM BASIC 128 Microsoft. Pamiêæ ROM — 64KB z mo¿liwoœci¹ rozszerzenia dla 128KB, zawieraj¹ca ponadto potê¿ny program obs³ugi ekranu. Wbudowany dwuœæie¿kowy magnetofon kasetowy z mo¿liwoœci¹ pracy z prêdkoœci¹ 1200 i 2400 baudów. Klawiatura typu mechanicznego z 69 klawiszami w tym 5 funkcyjnych i jeden oznaczony „BASIC" do wprowadzania s³ów kluczowych (podobnie jak w Spectrum). Wyjœcie akustyczne z gniazdem typu „cinch . Gniazdo dla pióra optycznego. TOS: Pamiêæ RAM — 256 KB, w tym 16 KB pamiêci ekranu i 236KB dostêpnych dla u¿ytkownika z poziomu BASIC-a. Mo¿liwoœæ przy³¹czenia dodatkowych 256KB RAM, co daje u¿ytkownikowi ³¹cznie 496KB! Pamiêæ ROM — 80KB, z mo¿liwoœci¹ do³¹czenia dodatkowych 64KB. Pro-
§ramy rezyduj¹ce w pamiêci ROM: BASIC 12 z DOS Microsoft, DOS z ikonami, program obs³ugi ekranu. Klawiatura profesjonalna z 81 Klawiszami, w tym 5 funkcyjnych i wydzielone klawisze cyfrowe. Inter-facey napêdu dysków 3,5 cala z mo¿liwoœci¹ pod³¹czenia drugiego napêdu, magnetofonu kasetowego, dodatkowej pamiêci RAM 256KB. Gniazdo do pod³¹czenia pióra optycznego. Wyjœcie akustyczne. T09: Pamiêæ RAM — 128KB, w tym 16KB pamiêci ekranu i 112KB dostêpnych dla u¿ytkownika z poziomu BASIC-a. Mo¿liwoœæ do³¹czenia dodatkowych 64KB RAM jako dysku wirtualnego. Pamiêæ ROM — 136KB z mo¿liwoœci¹ rozszerzenia do 200KB. Programy rezyduj¹ce w pamiêci ROM: BASIC 128 z DOS Microsoft, DOS z ikonami, program obs³ugi ekranu, procesor tekstowy PARAGRAPHÊ program bazy danych FICHES ET DOSSIERS Wbudowany napêd dysków 3.5 cala z kontrolerem umo¿liwiaj¹cym pod³¹czenie drugiego napêdu. Klawiatura i sprzêgi podobnie jak w TOS.
Je¿eli dodamy jeszcze mnogoœæ osprzêtu, programów, fachowej literatury i periodyków ukierunkowanych na te typy mikrokomputerów, to pozostaje tylko stwierdziæ, ¿e ambicje tworzenia francuskiej informatyki w³asnymi si³ami nie s¹ przesadzone. Udowadniaj¹ to równie¿ w mikroinformatyce.
Wojciech Zió³ek
Bierki
Czeœæ Maluchy!
Gra w bierki jest stara jak œwiat. Zasada jest prosta: graj¹cy bior¹ na przemian przedmioty z jednej kupki. Trzeba zabraæ zawsze co najmniej jeden przedmiot. Maksymalna liczba jednoczeœnie zabieranych przedmiotów zale¿y od umowy. Wygrywa ten, kto weŸmie ostatni przedmiot.
Spróbujmy nauczyæ komputer gry w bierki, ale w nieco trudniejszej wersji. Roz³ó¿my 12 patyczków na trzy kupki. W pierwszej kupce niech bêdzie 5 patyczków, w drugiej — 4, a w trzeciej trzy. W naszej grze mo¿na wzi¹æ jednoczeœnie dowoln¹ liczbê patyczków, ale tylko z jednej kupki. Oczywiœcie za ka¿dym razem trzeba wzi¹æ choæ jedn¹. Kto weŸmie ostatni patyczek (lub kilka ostatnich) wygrywa.
Popatrzmy na schemat blokowy naszego programu. Na pocz¹tek — jak zwykle — okreœlamy wartoœci zmiennych i deklarujemy tablice (10-50). Tym razem potrzebna nam bêdzie tylko jedna tablica (jednowymiarowa), w której zapamiêtywaæ bêdziemy iloœci patyczków w poszczególnych kupkach. Nazwijmy j¹ „kupka".
Pierwsze pytanie programu brzmi: „Kto zaczyna? Ty czy ja?" (100-140). W zale¿noœci od odpowiedzi, zmienna-wskaŸnik „ruch" przyjmie wartoœæ 1 lub -1. W tym momencie zaczyna siê pêtla w³aœciwego programu gry. Najpierw komputer sprawdza, czy przypadkiem gra nie zosta³a ju¿ skoñczona — wszystkie kupki puste (200) jeœli tak to skacze do linii 900 i komunikuje o wyniku rozgrywki. Jeœli jednak choæ jeden patyczek nie zosta³ zabrany, komputer rysuje kupki na ekranie (300-380), zmienia wartoœæ wskaŸnika „ruch" na przeciwn¹ (400) i w zale¿noœci od jego wartoœci skacze do podprogramów ruchu komputera lub gracza. Po wykonaniu ruchu (przez gracza czy komputer) program wraca do linii 200 i pêtla zaczyna wykonywaæ siê ponownie.
Najciekawszym fragmentem programu jest oczywiœcie wykonywanie ruchu przez komputer. Musimy go nauczyæ, by robi³ to sensownie. Najpierw jednak sami poznajmy prawid³ow¹ strategiê gry.
Zacznijmy od koñca. Zastanówmy siê, co siê stanie, gdy po naszym ruchu pozostan¹ tylko dwie kupki o równej iloœci patyczków. Wystarczy w takim przypadku braæ dok³adnie
tyle samo patyczków co przeciwnik (oczywiœcie z drugiej kupki), a ostatni zawsze bêdzie nasz. \
Mamy wiêc ju¿ jedn¹ sytuacjê prowadz¹c¹ do wygranej. Pomyœlmy dalej. Jeœli da jednej z kupek bêd¹ trzy patyczki, na innej dwa, a na ostatnie^&^jtfJakikolwiek ruch wykona przeciwnik, zawsz^w¹¿emy doprowadziæ do dwóch równych kupek. SpfS^l^ge sami! °v
Spróbujmy teraz przekazaæ nasz¹ wied komputerowi. Jak jednak powiedzieæ mu, ¿e jeœli jedna z kupek... a inna... to zrób to i to. Dla niego nie istnieje jedna z kupek, ale konkretna, pierwsza, druga lub trzecia. Zastosujmy wiêc trzy pêtle (500-540), które wyczerpi¹ wszystkie mo¿liwe ustawienia kupek i wtedy ju¿ kolejnoœæ nie bêdzie mia³a ¿adnego znaczenia.
A teraz nasze rady:
Rada 1 (linia 550) — jeœli pierwsza kupka jest równa 0 i druga tak¿e równa jest zero to zabierz wszystkie patyczki z trzeciej kupki.
Rada 2 (linia 560) — jeœli pierwsza kupka jest równa drugiej i pierwsza (a tym samym druga) nie jest pusta i dodatkowo trzecia kupka nie jest pusta, to zabierz wszystkie patyczki z trzeciej kupki.
inicja³ izacja 35-58
->/ kto zaczyna? / /    186-148     /
let rucfc-1
t / koniec gry? \ —s     286        /
/ rysowanie kupek 7 /       380-388       /
let ruGh^ruch*(-l) _   488
t / FucK=H
T7\
~s   418    /
TI
ruch ko³iputera i 588-718     r
->/ ruch gracza / /     888-868    /
/ koniec gry / /   908-918    /
30   BAJTEK 1/87
7EDSZK0LAKÓW
NA ORBICIE
Dokoñczenie ze str. 32
przedzia³ roboczy. Tu znajduj¹ siê g³ówne urz¹dzenia stacji, stanowisko sterownicze, miejsce pracy za³ogi, wypoczynku, spo¿ywania posi³ków i æwiczeñ gimnastycznych. W przedziale roboczym znajduj¹ siê te¿ indywidualne kajuty. Jest to nowosc na stacjach kosmicznych. Kajuty s¹ oddzielone od przedzia³u dzwiêkoszczel-nymi zas³onami. W ka¿dym takim ..pokoiku" jest iluminator. odchylane krzese³ko, lustro, miesjcc na spiwor. Ta mo¿liwoœæ czasowego choæby odizolowania sie od kolegów z za³ogi jest podobno podczas d³ugotrwa³ych lotów bardzo potrzebna!
Za przedzia³em roboczym znajduje siê przedzia³ ag>egatowy. Umieszczone tu urz¹dzenia napêdowe (2 silniki ..marszowe" o ci¹gu 300 kg ka¿dy i 32 silniczki systemu orientacji stacji o ci¹gu 14 kg ka¿dy), zbiorniki z paliwem i balony z gazem. Przez œrodek tego przedzia³u przebiega komora poœrednia, przez k*pr¹ kosmonauci mog¹ przechodziæ z przedziaiu roboczego do statku transportowego. Na jej koñcu umieszczono szósty wêze³ cumowniczy.
..Mir" jest stacja, na której maksymalnie zautomatyzowano procesy sterowania ruchem, praca systemów pok³adowych i aparatury pomiarowej. G³owna zaleta stacji jest jej o
M0DU£0W0SC
Dziêki temu w radzieckich stoczniach kosmicznych mo¿na bêdzie budowaæ samodzielne modu³y o dowolnej praktycznie konstrukcji, masie i wymiarach. Takim modu³em mo¿e byc kosmiczne obserwatorium astronomiczne, oran¿eria, wydzia³ produkcji pó³przewodników laboratorium biologiczne do produkcji super-czystych preparatów farmaceutycznych i wiele innych. Modu³y moga na sta³e wchodzie w sk³ad stacji albo te¿ odbywaæ autonomiczny lot w jej pobli¿u Program pracy modu³u autonomicznego beda opracowywaæ sami kosmonauci Po wykonaniu programu modu³ powraca³ bêdzie w sk³ad stacji. Najistotniejsze jest to. ¿e stacje modu³owe moga byc d³ugowieczne, jako ¿e ka¿dy przestarza³y cz³on mo¿na wymieniæ na inny. odpowiadaj¹cy nowym wymogom nauki i techniki.
„MAJAKI" ZAGOSPODAROWUJ¥
„MIR"
Pierwszymi mieszkañcami tego pierwszego orbitalnego M-4 byli rekordziœci œwiata w d³ugotrwa³oœci lotu kosmicznego — Leonid Kizim i Wiktor So³owjow. 15 marca ub.r ich „Sojuz--T15" po³¹czy³ siê ze stacj¹. Po sprawdzeniu szczelnoœci po³¹czenia za³oga (nadano jej kryptonim ..Majaki") przesz³a do pomieszczeñ stacji. Zasiedliny ..Mira" sta³y siê faktem.
„Majaki" wróci³y na Ziemiê po czterech miesi¹cach — 16 lipca ub.r. W miêdzyczasie „odwiedzili" kr¹¿¹c¹ w dalszym ci¹gu na orbicie stacjê „Salut-7", przyjêli dostarczone dwoma statkami transportowymi na stacjê „Mir" 5 ton ³adunków z Ziemi, dwukrotnie wychodzili w otwart¹ przestrzeñ kosmiczn¹, gdzie przebywali w sumie przez kilkadziesi¹t godzin, przeprowadzili oko³o 170 eksperymentów nauko-wych-technologicznych. geofizycznych, itp. ...Orbitalne laboratorium naukowe z prawdziwego zdarzenia, bêd¹ce podstaw¹ do szerokiego rozwiniêcia dalszych badañ Kosmosu, rozpoczê³o normaln¹ pracê.
Waldemar Siicin&ki
/Mm
Rada 3 (linia 570) — jeœli pierwsza kupka jest pusta i druga kupka jest wiêksza ni¿ trzecia, to pozostaw na kupce drugiej tyle patyczków, ile jest na trzeciej.
Rada 4 (linia 580) — jeœli na pierwszej kupce jest jeden patyczlt^ia drugiej s¹trzyo^ tyczki i na trzeciej s¹ wi^^yj^t^SSryczki, to pozostawrr^r^0if^rjTpce^|vpatyczki.
Rada^flfiTa590) — jeœli na pier^S^ej kupce jest jeden patyczek i na drugiej s¹ trz^oa-tyczki i na trzeciej s¹ wiêcej ni¿ dwa patyczki to pozostaw na trzeciej kupce dwa patyczki.
Rada 6 (linia 600) — jeœli na pierwszej kupce s¹ trzy patyczki i na drugiej s¹ dwa patyczki i na trzeciej jest wiêcej ni¿ jeden patyczek, to pozostaw na trzeciej kupce jeden patyczek.
Oczywiœcie mo¿e siê zdarzyæ — szczególnie na pocz¹tku gry — ¿e komputer nie bêdzie móg³ skorzystaæ z ¿adnej z naszych rad. Po prostu ¿aden z tych warunków nie bêdzie spe³niony. Wówczas wykonuje ruch losowo (650-690). Zmienna-wskaŸnik „zmiana" potrzebna jest do przechowywania informacji o tym, czy komputer znalaz³ prawid³owy ruch (zmiana = 1), czy ten nie znalaz³ i trzeba losowaæ (zmiana = 0).
i rem mmmm bierki mmmmi
9 REH mmi* inicjilizacj³ 1****1*1
10 DIH kupka(3) 20 LET kupka(1) =3 30 LET kupka(2)=4 40 LET kupka(3)=5 50 LET ruch=l
99 REH ********* kto zaczyna? *********
100 PRINT "Kto zaczvna?*
110 PRINT "Ty czy ja - (t/j)?" 120 INPUT odpf
130 IF odol<>"f AND odp»<>"j" THEN 60T0 120
140 IF odp»=Y THEN LET ruch=-l
199 REH mim czy koniec gry? IHIIII
200 IF kupkaU)«0 AND kupka<2)*0 AND kupka(3>=0 THEN GOTO 900
299 REH ***** rysowanie patyczków *****
300 FOR i=l TO 3
310    FOR j=l TO kupka(i) 320      PRINT "I"i 330    NE XT j
340    FOR j=l TO 7-kupka(i) 350      PRINT " 360 ' NEXT j 370 NEKT i 380 PRINT
399 REH lllimil czyj ruch? **********
400 LET ruch=ruch*(-l)
410 IF ruch=l THEN GOTO 800 420 PRINT "Hoj ruch:"
499 REH limit ruch koaputera *******
500 FOR x=l TO 3 510    FOR y=l TO 3
520      IF v=x THEN GOTO 620
530      FOR z=l TO 3
540 IF z=x OR z=v THEN GOTO 610
550        IF kupka(x)=0 AND kupkaiy)=0
THEN LET kupka!z)=0:
LET zsiana-1 560 IF kupka(x)=kupka(y) AND
Nasz komputer bêdzie wiêc gra³ nieŸle, ale nie genialnie, poniewa¿ program nie przewiduje wszystkich mo¿liwych przypadJi^iartiST^ wid³owych ruchów^Wp^³iKt^ch nie zdra-dzê^Sor^l^pgl^amidojœæ do pe³nego roz-•³flJaniai przyœlijcie sposób takiego uzupe³nienia programu, aby by³ on nieomylny. Na autorów najciekawszych listów czekaj¹ nagrody! I jeszcze jedno pytanie: Jak myœlicie, kto ma wiêksz¹ szansê na wygran¹, pierwszy czy drugi gracz?
^fcogram mo¿e byæ uruchomiony na ka¿-dyrr^tofflputerze. Amstrad/Schneider, Com-modore 20 nie wymagaj¹ ¿adnych
zmian. Dla irm^ikomputerów nale¿y zmodyfikowaæ linie 6507 670.
Spectrum: ^^^^
650 LET i = INT (RND*3)^r^^
670LETj = INT(RND*2) + 1
Meritum i Atari:
650 LET l = INT (RND (0)*3) + 1 670 LET J = INT (RND (0)*2) + 1 i dodatkowa linia dla Meritum: 60 RANDOM
Czekam na wasze listy.
Romek
kupka(x)<>0 AND kupka(z)O0 THEN LET kupka(z)=0 : LET ziianasl
570 IF kupka(x)=0 AND kupka(y)> kupka(z) THEN LET kupka(y)= kupka(z): LET ziiana*l
580        IF kupka(x)=l AND kupka(y)-2 AND kupka(z)>3 THEN LET kupka(z)=3: LET ziiana=l
590        IF kupka(x)=l AND kupka(y)=3 AND kupka(z)>2 THEN LET kupka(z)=2: LET zaiana=l
600        IF kupka(x)=3 AND kupka(y)=2 AND kupka(z i>1 THEN LET kupka(z)=l: LET ziiana=l
610       NEXT z
620     NEXT y
630 NEXT x
640 IF zaiana=l THEN 60T0 700
650 LET i=INT(RND(l)*3)+l
660 IF kunka<i)=0 THEN 60T0 640
670 LET j=INT(RND(DI2)+l
680 LET kupka(i)=kupka(i)-j
690 IF kupkaiikO THEN LETkupka(i)=0
700 LET ztiana*0
710 GOTO 200
799 REH ********* ruch gracza 111111111 300 PRINT "Która kupka?" 810 INPUT i
320 PRINT "Ile patyczków?" 830 INPUT p
840 IF iOl AND i<>2 AND i<>3 OR p<l 0R oOINT(p) OR kupka(i)<p THEN PRINT " Oszukujesz!!!":60T0 810
350 LET kupka(i)=kupka(i)-p
860 GOTO 200
899 REH illimi! koniec gry Itlltlllt
900 IF ruch=l THEN PRINT "Wygra³eœ!": END
910 PRINT "Ja wygralei!": END
BAJTEK1/87   31
wielozadaniowego, funkcjonuj¹cego stale orbitalnego zespo³u za³ogowego.
W stosunku do stacji poprzedniej generacj („Salut-7") zwiêkszono moc systemu energetycznego, stworzono bardziej komfortowe warunki pracy i odpoczynku kosmonautów, zainstalowano nowe oprzyrz¹dowanie.
Konstrukcyjnie „Mir" sk³ada siê z trzech hermetycznych przedzia³ów (przejœciowego, roboczego i poœredniego) i jednego przedzia³u nie-hermetycznego (agregatowego).
Przedzia³ przejœciowy, mieszcz¹cy siê w przedniej czêœci stacji, to pow³oka kulista przechodz¹ca w œciêty sto¿ek. Na powierzchni czo³owej czêœci sto¿kowej, na osi pod³u¿nej stacji, umieszczono g³ówny wêze³ cumowniczy. Prostopadle do niego na obwodzie pow³oki kulistej umieszczono jeszcze 4 wêz³y cumownicze. Dziêki temu do przedzia³u przejœciowego mo¿na przy³¹czyæ piêæ aparatów. Statki transportowe i modu³y bêd¹ cumowane do wêz³a g³ównego. Nastêpnie specjalne manipulatory przestawi¹ modu³ do wolnego wêz³a bocznego.
Za przedzia³em przejœciowym mieœci siê
Dokoñczenie na str. 31
I
i t
1.
2.
3.
4.
5.
6.
7.
8.
9. 10. 11.
14. 15, 16, 17 18,
21. 22. 23. 24.
25. 26. 27.
STACJA ORBITALNA „MIR"
Blok podstawowy Statek „Sojuz — T" Przedzia³ przejœciowy Gniazdo manipulatora Boczne zespo³y cumownicze Anteny systemu zbli¿enia Przedzia³ roboczy Luk przedzia³u roboczego Centralny pulpit sterowniczy Uchwyty
Wyjmowane panele wewnêtrzne
Baterie s³oneczne
Urz¹dzenie treningowe „Wielo-
ergometr"
Stó³ roboczy
Kajuta indywidualna
Toaleta
Urz¹dzenie do mycia Antena ³¹cznoœci za poœrednictwem satelity Osiowy zespó³ cumowniczy Urz¹dzenia treningowe „Biegn¹ca dró¿ka Komora poœrednia Silnik z pokryw¹ Wizjer
Przedzia³ agregatowy Pokrywa luku lluminator Os³ona iluminatora
" t>s"* ^wSstawiamy naj-fi^i^i^i^i^HHPicia w zakres*? au-
tOrtMSrSMfcfiCJ-   v>\""i\    »;s ,
Y, iilSHPragenetycznef, badam nad ^Hp^T-©iolog«, medycyny... Sto-PPn — przedstawiamy te wszystkie dziedziny œwiatowej nauki i tec³wfci, których tak burzliwy rozwój nie by³by mo¿liwy bez zastosowania komputerów
